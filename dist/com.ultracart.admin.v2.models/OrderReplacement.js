"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _OrderReplacementItem = _interopRequireDefault(require("./OrderReplacementItem"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The OrderReplacement model module.
 * @module com.ultracart.admin.v2.models/OrderReplacement
 * @version 4.1.21
 */
var OrderReplacement = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>OrderReplacement</code>.
   * @alias module:com.ultracart.admin.v2.models/OrderReplacement
   */
  function OrderReplacement() {
    _classCallCheck(this, OrderReplacement);
    OrderReplacement.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(OrderReplacement, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>OrderReplacement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.ultracart.admin.v2.models/OrderReplacement} obj Optional instance to populate.
     * @return {module:com.ultracart.admin.v2.models/OrderReplacement} The populated <code>OrderReplacement</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new OrderReplacement();
        if (data.hasOwnProperty('additional_merchant_notes_new_order')) {
          obj['additional_merchant_notes_new_order'] = _ApiClient["default"].convertToType(data['additional_merchant_notes_new_order'], 'String');
        }
        if (data.hasOwnProperty('additional_merchant_notes_original_order')) {
          obj['additional_merchant_notes_original_order'] = _ApiClient["default"].convertToType(data['additional_merchant_notes_original_order'], 'String');
        }
        if (data.hasOwnProperty('custom_field1')) {
          obj['custom_field1'] = _ApiClient["default"].convertToType(data['custom_field1'], 'String');
        }
        if (data.hasOwnProperty('custom_field2')) {
          obj['custom_field2'] = _ApiClient["default"].convertToType(data['custom_field2'], 'String');
        }
        if (data.hasOwnProperty('custom_field3')) {
          obj['custom_field3'] = _ApiClient["default"].convertToType(data['custom_field3'], 'String');
        }
        if (data.hasOwnProperty('custom_field4')) {
          obj['custom_field4'] = _ApiClient["default"].convertToType(data['custom_field4'], 'String');
        }
        if (data.hasOwnProperty('custom_field5')) {
          obj['custom_field5'] = _ApiClient["default"].convertToType(data['custom_field5'], 'String');
        }
        if (data.hasOwnProperty('custom_field6')) {
          obj['custom_field6'] = _ApiClient["default"].convertToType(data['custom_field6'], 'String');
        }
        if (data.hasOwnProperty('custom_field7')) {
          obj['custom_field7'] = _ApiClient["default"].convertToType(data['custom_field7'], 'String');
        }
        if (data.hasOwnProperty('free')) {
          obj['free'] = _ApiClient["default"].convertToType(data['free'], 'Boolean');
        }
        if (data.hasOwnProperty('immediate_charge')) {
          obj['immediate_charge'] = _ApiClient["default"].convertToType(data['immediate_charge'], 'Boolean');
        }
        if (data.hasOwnProperty('items')) {
          obj['items'] = _ApiClient["default"].convertToType(data['items'], [_OrderReplacementItem["default"]]);
        }
        if (data.hasOwnProperty('original_order_id')) {
          obj['original_order_id'] = _ApiClient["default"].convertToType(data['original_order_id'], 'String');
        }
        if (data.hasOwnProperty('shipping_method')) {
          obj['shipping_method'] = _ApiClient["default"].convertToType(data['shipping_method'], 'String');
        }
        if (data.hasOwnProperty('skip_payment')) {
          obj['skip_payment'] = _ApiClient["default"].convertToType(data['skip_payment'], 'Boolean');
        }
      }
      return obj;
    }
  }]);
}();
/**
 * Additional merchant notes to append to the new order
 * @member {String} additional_merchant_notes_new_order
 */
OrderReplacement.prototype['additional_merchant_notes_new_order'] = undefined;

/**
 * Additional merchant notes to append to the original order
 * @member {String} additional_merchant_notes_original_order
 */
OrderReplacement.prototype['additional_merchant_notes_original_order'] = undefined;

/**
 * Custom field 1
 * @member {String} custom_field1
 */
OrderReplacement.prototype['custom_field1'] = undefined;

/**
 * Custom field 2
 * @member {String} custom_field2
 */
OrderReplacement.prototype['custom_field2'] = undefined;

/**
 * Custom field 3
 * @member {String} custom_field3
 */
OrderReplacement.prototype['custom_field3'] = undefined;

/**
 * Custom field 4
 * @member {String} custom_field4
 */
OrderReplacement.prototype['custom_field4'] = undefined;

/**
 * Custom field 5
 * @member {String} custom_field5
 */
OrderReplacement.prototype['custom_field5'] = undefined;

/**
 * Custom field 6
 * @member {String} custom_field6
 */
OrderReplacement.prototype['custom_field6'] = undefined;

/**
 * Custom field 7
 * @member {String} custom_field7
 */
OrderReplacement.prototype['custom_field7'] = undefined;

/**
 * Set to true if this replacement shipment should be free for the customer.
 * @member {Boolean} free
 */
OrderReplacement.prototype['free'] = undefined;

/**
 * Set to true if you want to immediately charge the payment on this order, otherwise it will go to Accounts Receivable.
 * @member {Boolean} immediate_charge
 */
OrderReplacement.prototype['immediate_charge'] = undefined;

/**
 * Items to include in the replacement order
 * @member {Array.<module:com.ultracart.admin.v2.models/OrderReplacementItem>} items
 */
OrderReplacement.prototype['items'] = undefined;

/**
 * Original order id
 * @member {String} original_order_id
 */
OrderReplacement.prototype['original_order_id'] = undefined;

/**
 * Shipping method to use.  If not specified or invalid then least cost shipping will take place.
 * @member {String} shipping_method
 */
OrderReplacement.prototype['shipping_method'] = undefined;

/**
 * Set to true if you want to skip the payment as if it was successful.
 * @member {Boolean} skip_payment
 */
OrderReplacement.prototype['skip_payment'] = undefined;
var _default = exports["default"] = OrderReplacement;