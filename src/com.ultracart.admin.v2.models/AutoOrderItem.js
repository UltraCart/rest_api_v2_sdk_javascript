/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.ultracart.admin.v2.models/AutoOrderItemFutureSchedule', 'com.ultracart.admin.v2.models/AutoOrderItemOption', 'com.ultracart.admin.v2.models/AutoOrderItemSimpleSchedule'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AutoOrderItemFutureSchedule'), require('./AutoOrderItemOption'), require('./AutoOrderItemSimpleSchedule'));
  } else {
    // Browser globals (root is window)
    if (!root.UltraCartRestApiV2) {
      root.UltraCartRestApiV2 = {};
    }
    root.UltraCartRestApiV2.AutoOrderItem = factory(root.UltraCartRestApiV2.ApiClient, root.UltraCartRestApiV2.AutoOrderItemFutureSchedule, root.UltraCartRestApiV2.AutoOrderItemOption, root.UltraCartRestApiV2.AutoOrderItemSimpleSchedule);
  }
}(this, function(ApiClient, AutoOrderItemFutureSchedule, AutoOrderItemOption, AutoOrderItemSimpleSchedule) {
  'use strict';

  /**
   * The AutoOrderItem model module.
   * @module com.ultracart.admin.v2.models/AutoOrderItem
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>AutoOrderItem</code>.
   * @alias module:com.ultracart.admin.v2.models/AutoOrderItem
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>AutoOrderItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ultracart.admin.v2.models/AutoOrderItem} obj Optional instance to populate.
   * @return {module:com.ultracart.admin.v2.models/AutoOrderItem} The populated <code>AutoOrderItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('arbitrary_item_id'))
        obj.arbitraryItemId = ApiClient.convertToType(data['arbitrary_item_id'], 'String');
      if (data.hasOwnProperty('arbitrary_percentage_discount'))
        obj.arbitraryPercentageDiscount = ApiClient.convertToType(data['arbitrary_percentage_discount'], 'Number');
      if (data.hasOwnProperty('arbitrary_quantity'))
        obj.arbitraryQuantity = ApiClient.convertToType(data['arbitrary_quantity'], 'Number');
      if (data.hasOwnProperty('arbitrary_schedule_days'))
        obj.arbitraryScheduleDays = ApiClient.convertToType(data['arbitrary_schedule_days'], 'Number');
      if (data.hasOwnProperty('arbitrary_unit_cost'))
        obj.arbitraryUnitCost = ApiClient.convertToType(data['arbitrary_unit_cost'], 'Number');
      if (data.hasOwnProperty('arbitrary_unit_cost_remaining_orders'))
        obj.arbitraryUnitCostRemainingOrders = ApiClient.convertToType(data['arbitrary_unit_cost_remaining_orders'], 'Number');
      if (data.hasOwnProperty('auto_order_item_oid'))
        obj.autoOrderItemOid = ApiClient.convertToType(data['auto_order_item_oid'], 'Number');
      if (data.hasOwnProperty('frequency'))
        obj.frequency = ApiClient.convertToType(data['frequency'], 'String');
      if (data.hasOwnProperty('future_schedules'))
        obj.futureSchedules = ApiClient.convertToType(data['future_schedules'], [AutoOrderItemFutureSchedule]);
      if (data.hasOwnProperty('last_order_dts'))
        obj.lastOrderDts = ApiClient.convertToType(data['last_order_dts'], 'String');
      if (data.hasOwnProperty('life_time_value'))
        obj.lifeTimeValue = ApiClient.convertToType(data['life_time_value'], 'Number');
      if (data.hasOwnProperty('next_preshipment_notice_dts'))
        obj.nextPreshipmentNoticeDts = ApiClient.convertToType(data['next_preshipment_notice_dts'], 'String');
      if (data.hasOwnProperty('next_shipment_dts'))
        obj.nextShipmentDts = ApiClient.convertToType(data['next_shipment_dts'], 'String');
      if (data.hasOwnProperty('no_order_after_dts'))
        obj.noOrderAfterDts = ApiClient.convertToType(data['no_order_after_dts'], 'String');
      if (data.hasOwnProperty('number_of_rebills'))
        obj.numberOfRebills = ApiClient.convertToType(data['number_of_rebills'], 'Number');
      if (data.hasOwnProperty('options'))
        obj.options = ApiClient.convertToType(data['options'], [AutoOrderItemOption]);
      if (data.hasOwnProperty('original_item_id'))
        obj.originalItemId = ApiClient.convertToType(data['original_item_id'], 'String');
      if (data.hasOwnProperty('original_quantity'))
        obj.originalQuantity = ApiClient.convertToType(data['original_quantity'], 'Number');
      if (data.hasOwnProperty('paypal_payer_id'))
        obj.paypalPayerId = ApiClient.convertToType(data['paypal_payer_id'], 'String');
      if (data.hasOwnProperty('paypal_recurring_payment_profile_id'))
        obj.paypalRecurringPaymentProfileId = ApiClient.convertToType(data['paypal_recurring_payment_profile_id'], 'String');
      if (data.hasOwnProperty('preshipment_notice_sent'))
        obj.preshipmentNoticeSent = ApiClient.convertToType(data['preshipment_notice_sent'], 'Boolean');
      if (data.hasOwnProperty('rebill_value'))
        obj.rebillValue = ApiClient.convertToType(data['rebill_value'], 'Number');
      if (data.hasOwnProperty('remaining_repeat_count'))
        obj.remainingRepeatCount = ApiClient.convertToType(data['remaining_repeat_count'], 'Number');
      if (data.hasOwnProperty('simple_schedule'))
        obj.simpleSchedule = AutoOrderItemSimpleSchedule.constructFromObject(data['simple_schedule']);
    }
    return obj;
  }

  /**
   * Arbitrary item id that should be rebilled instead of the normal schedule
   * @member {String} arbitraryItemId
   */
  exports.prototype.arbitraryItemId = undefined;

  /**
   * An arbitrary percentage discount to provide on future rebills
   * @member {Number} arbitraryPercentageDiscount
   */
  exports.prototype.arbitraryPercentageDiscount = undefined;

  /**
   * Arbitrary quantity to rebill
   * @member {Number} arbitraryQuantity
   */
  exports.prototype.arbitraryQuantity = undefined;

  /**
   * The number of days to rebill if the frequency is set to an arbitrary number of days
   * @member {Number} arbitraryScheduleDays
   */
  exports.prototype.arbitraryScheduleDays = undefined;

  /**
   * Arbitrary unit cost that rebills of this item should occur at
   * @member {Number} arbitraryUnitCost
   */
  exports.prototype.arbitraryUnitCost = undefined;

  /**
   * The number of rebills to give the arbitrary unit cost on before reverting to normal pricing.
   * @member {Number} arbitraryUnitCostRemainingOrders
   */
  exports.prototype.arbitraryUnitCostRemainingOrders = undefined;

  /**
   * Primary key of AutoOrderItem
   * @member {Number} autoOrderItemOid
   */
  exports.prototype.autoOrderItemOid = undefined;

  /**
   * Frequency of the rebill if not a fixed schedule
   * @member {module:com.ultracart.admin.v2.models/AutoOrderItem.FrequencyEnum} frequency
   */
  exports.prototype.frequency = undefined;

  /**
   * The future rebill schedule for this item up to the next ten rebills
   * @member {Array.<module:com.ultracart.admin.v2.models/AutoOrderItemFutureSchedule>} futureSchedules
   */
  exports.prototype.futureSchedules = undefined;

  /**
   * Date/time of the last order of this item
   * @member {String} lastOrderDts
   */
  exports.prototype.lastOrderDts = undefined;

  /**
   * The life time value of this item including the original purchase
   * @member {Number} lifeTimeValue
   */
  exports.prototype.lifeTimeValue = undefined;

  /**
   * The date/time of when the next pre-shipment notice should be sent
   * @member {String} nextPreshipmentNoticeDts
   */
  exports.prototype.nextPreshipmentNoticeDts = undefined;

  /**
   * Date/time that this item is scheduled to rebill
   * @member {String} nextShipmentDts
   */
  exports.prototype.nextShipmentDts = undefined;

  /**
   * Date/time after which no additional rebills of this item should occur
   * @member {String} noOrderAfterDts
   */
  exports.prototype.noOrderAfterDts = undefined;

  /**
   * The number of times this item has rebilled
   * @member {Number} numberOfRebills
   */
  exports.prototype.numberOfRebills = undefined;

  /**
   * Options associated with this item
   * @member {Array.<module:com.ultracart.admin.v2.models/AutoOrderItemOption>} options
   */
  exports.prototype.options = undefined;

  /**
   * The original item id purchased.  This item controls scheduling.  If you wish to modify a schedule, for example, from monthly to yearly, change this item from your monthly item to your yearly item, and then change the next_shipment_dts to your desired date.
   * @member {String} originalItemId
   */
  exports.prototype.originalItemId = undefined;

  /**
   * The original quantity purchased
   * @member {Number} originalQuantity
   */
  exports.prototype.originalQuantity = undefined;

  /**
   * The PayPal Payer ID tied to this item
   * @member {String} paypalPayerId
   */
  exports.prototype.paypalPayerId = undefined;

  /**
   * The PayPal Profile ID tied to this item
   * @member {String} paypalRecurringPaymentProfileId
   */
  exports.prototype.paypalRecurringPaymentProfileId = undefined;

  /**
   * True if the preshipment notice associated with the next rebill has been sent
   * @member {Boolean} preshipmentNoticeSent
   */
  exports.prototype.preshipmentNoticeSent = undefined;

  /**
   * The value of the rebills of this item
   * @member {Number} rebillValue
   */
  exports.prototype.rebillValue = undefined;

  /**
   * The number of rebills remaining before this item is complete
   * @member {Number} remainingRepeatCount
   */
  exports.prototype.remainingRepeatCount = undefined;

  /**
   * @member {module:com.ultracart.admin.v2.models/AutoOrderItemSimpleSchedule} simpleSchedule
   */
  exports.prototype.simpleSchedule = undefined;


  /**
   * Allowed values for the <code>frequency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FrequencyEnum = {
    /**
     * value: "Weekly"
     * @const
     */
    weekly: "Weekly",

    /**
     * value: "Biweekly"
     * @const
     */
    biweekly: "Biweekly",

    /**
     * value: "Every..."
     * @const
     */
    every_: "Every...",

    /**
     * value: "Every 10 Days"
     * @const
     */
    every10Days: "Every 10 Days",

    /**
     * value: "Every 24 Days"
     * @const
     */
    every24Days: "Every 24 Days",

    /**
     * value: "Every 28 Days"
     * @const
     */
    every28Days: "Every 28 Days",

    /**
     * value: "Monthly"
     * @const
     */
    monthly: "Monthly",

    /**
     * value: "Every 45 Days"
     * @const
     */
    every45Days: "Every 45 Days",

    /**
     * value: "Every 2 Months"
     * @const
     */
    every2Months: "Every 2 Months",

    /**
     * value: "Every 3 Months"
     * @const
     */
    every3Months: "Every 3 Months",

    /**
     * value: "Every 4 Months"
     * @const
     */
    every4Months: "Every 4 Months",

    /**
     * value: "Every 6 Months"
     * @const
     */
    every6Months: "Every 6 Months",

    /**
     * value: "Yearly"
     * @const
     */
    yearly: "Yearly"
  };

  return exports;

}));
