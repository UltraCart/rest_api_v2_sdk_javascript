/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.UltraCartRestApiV2) {
      root.UltraCartRestApiV2 = {};
    }
    root.UltraCartRestApiV2.DistributionCenter = factory(root.UltraCartRestApiV2.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The DistributionCenter model module.
   * @module com.ultracart.admin.v2.models/DistributionCenter
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>DistributionCenter</code>.
   * @alias module:com.ultracart.admin.v2.models/DistributionCenter
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>DistributionCenter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ultracart.admin.v2.models/DistributionCenter} obj Optional instance to populate.
   * @return {module:com.ultracart.admin.v2.models/DistributionCenter} The populated <code>DistributionCenter</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('address1'))
        obj.address1 = ApiClient.convertToType(data['address1'], 'String');
      if (data.hasOwnProperty('address2'))
        obj.address2 = ApiClient.convertToType(data['address2'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('code'))
        obj.code = ApiClient.convertToType(data['code'], 'String');
      if (data.hasOwnProperty('country_code'))
        obj.countryCode = ApiClient.convertToType(data['country_code'], 'String');
      if (data.hasOwnProperty('default_center'))
        obj.defaultCenter = ApiClient.convertToType(data['default_center'], 'Boolean');
      if (data.hasOwnProperty('default_handles_all_items'))
        obj.defaultHandlesAllItems = ApiClient.convertToType(data['default_handles_all_items'], 'Boolean');
      if (data.hasOwnProperty('distribution_center_oid'))
        obj.distributionCenterOid = ApiClient.convertToType(data['distribution_center_oid'], 'Number');
      if (data.hasOwnProperty('duns'))
        obj.duns = ApiClient.convertToType(data['duns'], 'String');
      if (data.hasOwnProperty('estimate_from_distribution_center_oid'))
        obj.estimateFromDistributionCenterOid = ApiClient.convertToType(data['estimate_from_distribution_center_oid'], 'Number');
      if (data.hasOwnProperty('ftp_password'))
        obj.ftpPassword = ApiClient.convertToType(data['ftp_password'], 'String');
      if (data.hasOwnProperty('hold_before_shipment_minutes'))
        obj.holdBeforeShipmentMinutes = ApiClient.convertToType(data['hold_before_shipment_minutes'], 'Number');
      if (data.hasOwnProperty('hold_before_transmission'))
        obj.holdBeforeTransmission = ApiClient.convertToType(data['hold_before_transmission'], 'Boolean');
      if (data.hasOwnProperty('holdAutoOrderBeforeShipmentMinutes'))
        obj.holdAutoOrderBeforeShipmentMinutes = ApiClient.convertToType(data['holdAutoOrderBeforeShipmentMinutes'], 'Number');
      if (data.hasOwnProperty('latitude'))
        obj.latitude = ApiClient.convertToType(data['latitude'], 'Number');
      if (data.hasOwnProperty('longitude'))
        obj.longitude = ApiClient.convertToType(data['longitude'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('no_customer_direct_shipments'))
        obj.noCustomerDirectShipments = ApiClient.convertToType(data['no_customer_direct_shipments'], 'Boolean');
      if (data.hasOwnProperty('no_split_shipment'))
        obj.noSplitShipment = ApiClient.convertToType(data['no_split_shipment'], 'Boolean');
      if (data.hasOwnProperty('postal_code'))
        obj.postalCode = ApiClient.convertToType(data['postal_code'], 'String');
      if (data.hasOwnProperty('process_days'))
        obj.processDays = ApiClient.convertToType(data['process_days'], 'Number');
      if (data.hasOwnProperty('process_inventory_start_time'))
        obj.processInventoryStartTime = ApiClient.convertToType(data['process_inventory_start_time'], 'String');
      if (data.hasOwnProperty('process_inventory_stop_time'))
        obj.processInventoryStopTime = ApiClient.convertToType(data['process_inventory_stop_time'], 'String');
      if (data.hasOwnProperty('require_asn'))
        obj.requireAsn = ApiClient.convertToType(data['require_asn'], 'Boolean');
      if (data.hasOwnProperty('send_kit_instead_of_components'))
        obj.sendKitInsteadOfComponents = ApiClient.convertToType(data['send_kit_instead_of_components'], 'Boolean');
      if (data.hasOwnProperty('shipment_cutoff_time_friday'))
        obj.shipmentCutoffTimeFriday = ApiClient.convertToType(data['shipment_cutoff_time_friday'], 'String');
      if (data.hasOwnProperty('shipment_cutoff_time_monday'))
        obj.shipmentCutoffTimeMonday = ApiClient.convertToType(data['shipment_cutoff_time_monday'], 'String');
      if (data.hasOwnProperty('shipment_cutoff_time_saturday'))
        obj.shipmentCutoffTimeSaturday = ApiClient.convertToType(data['shipment_cutoff_time_saturday'], 'String');
      if (data.hasOwnProperty('shipment_cutoff_time_sunday'))
        obj.shipmentCutoffTimeSunday = ApiClient.convertToType(data['shipment_cutoff_time_sunday'], 'String');
      if (data.hasOwnProperty('shipment_cutoff_time_thursday'))
        obj.shipmentCutoffTimeThursday = ApiClient.convertToType(data['shipment_cutoff_time_thursday'], 'String');
      if (data.hasOwnProperty('shipment_cutoff_time_tuesday'))
        obj.shipmentCutoffTimeTuesday = ApiClient.convertToType(data['shipment_cutoff_time_tuesday'], 'String');
      if (data.hasOwnProperty('shipment_cutoff_time_wednesday'))
        obj.shipmentCutoffTimeWednesday = ApiClient.convertToType(data['shipment_cutoff_time_wednesday'], 'String');
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
      if (data.hasOwnProperty('transport'))
        obj.transport = ApiClient.convertToType(data['transport'], 'String');
    }
    return obj;
  }

  /**
   * Address line 1 of the distribution center
   * @member {String} address1
   */
  exports.prototype.address1 = undefined;

  /**
   * Address line 2 of the distribution center
   * @member {String} address2
   */
  exports.prototype.address2 = undefined;

  /**
   * City of the distribution center
   * @member {String} city
   */
  exports.prototype.city = undefined;

  /**
   * Unique code for this distribution center
   * @member {String} code
   */
  exports.prototype.code = undefined;

  /**
   * Country code of the distribution center
   * @member {String} countryCode
   */
  exports.prototype.countryCode = undefined;

  /**
   * True if this is the default distribution center on the account
   * @member {Boolean} defaultCenter
   */
  exports.prototype.defaultCenter = undefined;

  /**
   * True if this distribution center handles all new items by default
   * @member {Boolean} defaultHandlesAllItems
   */
  exports.prototype.defaultHandlesAllItems = undefined;

  /**
   * Distribution center object identifier
   * @member {Number} distributionCenterOid
   */
  exports.prototype.distributionCenterOid = undefined;

  /**
   * DUNS number assigned to this distribution center (EDI)
   * @member {String} duns
   */
  exports.prototype.duns = undefined;

  /**
   * Estimate shipments for this distribution center as if they came from the other distribution center
   * @member {Number} estimateFromDistributionCenterOid
   */
  exports.prototype.estimateFromDistributionCenterOid = undefined;

  /**
   * Password associated with the virtual FTP
   * @member {String} ftpPassword
   */
  exports.prototype.ftpPassword = undefined;

  /**
   * The number of minutes to hold a shipment
   * @member {Number} holdBeforeShipmentMinutes
   */
  exports.prototype.holdBeforeShipmentMinutes = undefined;

  /**
   * True if the shipment should be held before transmission and require a manual release
   * @member {Boolean} holdBeforeTransmission
   */
  exports.prototype.holdBeforeTransmission = undefined;

  /**
   * @member {Number} holdAutoOrderBeforeShipmentMinutes
   */
  exports.prototype.holdAutoOrderBeforeShipmentMinutes = undefined;

  /**
   * Latitude where the distribution center is located
   * @member {Number} latitude
   */
  exports.prototype.latitude = undefined;

  /**
   * Longitude where the distribution center is located
   * @member {Number} longitude
   */
  exports.prototype.longitude = undefined;

  /**
   * Name of this distribution center
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * True if this distribution center does not handle customer direct shipments
   * @member {Boolean} noCustomerDirectShipments
   */
  exports.prototype.noCustomerDirectShipments = undefined;

  /**
   * True if this distribution center is not allowed to participate in a split shipment.
   * @member {Boolean} noSplitShipment
   */
  exports.prototype.noSplitShipment = undefined;

  /**
   * Postal code of the distribution center
   * @member {String} postalCode
   */
  exports.prototype.postalCode = undefined;

  /**
   * The number of processing days required before an order ships
   * @member {Number} processDays
   */
  exports.prototype.processDays = undefined;

  /**
   * The time (EST) after which inventory updates will be processed
   * @member {String} processInventoryStartTime
   */
  exports.prototype.processInventoryStartTime = undefined;

  /**
   * The time (EST) before which inventory updates will be processed
   * @member {String} processInventoryStopTime
   */
  exports.prototype.processInventoryStopTime = undefined;

  /**
   * True if ASNs are required for this distribution center (EDI)
   * @member {Boolean} requireAsn
   */
  exports.prototype.requireAsn = undefined;

  /**
   * True if we should send the kit instead of the components
   * @member {Boolean} sendKitInsteadOfComponents
   */
  exports.prototype.sendKitInsteadOfComponents = undefined;

  /**
   * The time (EST) after which shipments will not be processed on Friday
   * @member {String} shipmentCutoffTimeFriday
   */
  exports.prototype.shipmentCutoffTimeFriday = undefined;

  /**
   * The time (EST) after which shipments will not be processed on Monday
   * @member {String} shipmentCutoffTimeMonday
   */
  exports.prototype.shipmentCutoffTimeMonday = undefined;

  /**
   * The time (EST) after which shipments will not be processed on Saturday
   * @member {String} shipmentCutoffTimeSaturday
   */
  exports.prototype.shipmentCutoffTimeSaturday = undefined;

  /**
   * The time (EST) after which shipments will not be processed on Sunday
   * @member {String} shipmentCutoffTimeSunday
   */
  exports.prototype.shipmentCutoffTimeSunday = undefined;

  /**
   * The time (EST) after which shipments will not be processed on Thursday
   * @member {String} shipmentCutoffTimeThursday
   */
  exports.prototype.shipmentCutoffTimeThursday = undefined;

  /**
   * The time (EST) after which shipments will not be processed on Tuesday
   * @member {String} shipmentCutoffTimeTuesday
   */
  exports.prototype.shipmentCutoffTimeTuesday = undefined;

  /**
   * The time (EST) after which shipments will not be processed on Wednesday
   * @member {String} shipmentCutoffTimeWednesday
   */
  exports.prototype.shipmentCutoffTimeWednesday = undefined;

  /**
   * State of the distribution center
   * @member {String} state
   */
  exports.prototype.state = undefined;

  /**
   * Transport mechanism for this distribution center
   * @member {String} transport
   */
  exports.prototype.transport = undefined;

  return exports;

}));
