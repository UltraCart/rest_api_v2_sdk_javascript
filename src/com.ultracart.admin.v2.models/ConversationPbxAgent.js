/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConversationPbxAgent model module.
 * @module com.ultracart.admin.v2.models/ConversationPbxAgent
 * @version 4.1.2
 */
class ConversationPbxAgent {
    /**
     * Constructs a new <code>ConversationPbxAgent</code>.
     * @alias module:com.ultracart.admin.v2.models/ConversationPbxAgent
     */
    constructor() { 
        
        ConversationPbxAgent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationPbxAgent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.ultracart.admin.v2.models/ConversationPbxAgent} obj Optional instance to populate.
     * @return {module:com.ultracart.admin.v2.models/ConversationPbxAgent} The populated <code>ConversationPbxAgent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationPbxAgent();

            if (data.hasOwnProperty('cellphone')) {
                obj['cellphone'] = ApiClient.convertToType(data['cellphone'], 'String');
            }
            if (data.hasOwnProperty('conversation_pbx_agent_uuid')) {
                obj['conversation_pbx_agent_uuid'] = ApiClient.convertToType(data['conversation_pbx_agent_uuid'], 'String');
            }
            if (data.hasOwnProperty('extension')) {
                obj['extension'] = ApiClient.convertToType(data['extension'], 'Number');
            }
            if (data.hasOwnProperty('forward_calls_to_cellphone')) {
                obj['forward_calls_to_cellphone'] = ApiClient.convertToType(data['forward_calls_to_cellphone'], 'Boolean');
            }
            if (data.hasOwnProperty('full_name')) {
                obj['full_name'] = ApiClient.convertToType(data['full_name'], 'String');
            }
            if (data.hasOwnProperty('login')) {
                obj['login'] = ApiClient.convertToType(data['login'], 'String');
            }
            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('personal_conversation_pbx_voicemail_mailbox_uuid')) {
                obj['personal_conversation_pbx_voicemail_mailbox_uuid'] = ApiClient.convertToType(data['personal_conversation_pbx_voicemail_mailbox_uuid'], 'String');
            }
            if (data.hasOwnProperty('record_outgoing_automatically')) {
                obj['record_outgoing_automatically'] = ApiClient.convertToType(data['record_outgoing_automatically'], 'Boolean');
            }
            if (data.hasOwnProperty('shared_conversation_pbx_voicemail_mailbox_uuid')) {
                obj['shared_conversation_pbx_voicemail_mailbox_uuid'] = ApiClient.convertToType(data['shared_conversation_pbx_voicemail_mailbox_uuid'], 'String');
            }
            if (data.hasOwnProperty('twilio_taskrouter_worker_id')) {
                obj['twilio_taskrouter_worker_id'] = ApiClient.convertToType(data['twilio_taskrouter_worker_id'], 'String');
            }
            if (data.hasOwnProperty('unavailable_play_audio_uuid')) {
                obj['unavailable_play_audio_uuid'] = ApiClient.convertToType(data['unavailable_play_audio_uuid'], 'String');
            }
            if (data.hasOwnProperty('unavailable_say')) {
                obj['unavailable_say'] = ApiClient.convertToType(data['unavailable_say'], 'String');
            }
            if (data.hasOwnProperty('unavailable_say_voice')) {
                obj['unavailable_say_voice'] = ApiClient.convertToType(data['unavailable_say_voice'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('voicemail')) {
                obj['voicemail'] = ApiClient.convertToType(data['voicemail'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Cellphone number of agent in E.164 format
 * @member {String} cellphone
 */
ConversationPbxAgent.prototype['cellphone'] = undefined;

/**
 * Conversation Pbx Agent unique identifier
 * @member {String} conversation_pbx_agent_uuid
 */
ConversationPbxAgent.prototype['conversation_pbx_agent_uuid'] = undefined;

/**
 * Extension
 * @member {Number} extension
 */
ConversationPbxAgent.prototype['extension'] = undefined;

/**
 * True if calls to this agent should be forwarded to their cellphone
 * @member {Boolean} forward_calls_to_cellphone
 */
ConversationPbxAgent.prototype['forward_calls_to_cellphone'] = undefined;

/**
 * Full name
 * @member {String} full_name
 */
ConversationPbxAgent.prototype['full_name'] = undefined;

/**
 * Agent login
 * @member {String} login
 */
ConversationPbxAgent.prototype['login'] = undefined;

/**
 * Merchant Id
 * @member {String} merchant_id
 */
ConversationPbxAgent.prototype['merchant_id'] = undefined;

/**
 * Personal Conversation Pbx Voicemail Mailbox UUID
 * @member {String} personal_conversation_pbx_voicemail_mailbox_uuid
 */
ConversationPbxAgent.prototype['personal_conversation_pbx_voicemail_mailbox_uuid'] = undefined;

/**
 * True if outgoing calls should be automatically recorded
 * @member {Boolean} record_outgoing_automatically
 */
ConversationPbxAgent.prototype['record_outgoing_automatically'] = undefined;

/**
 * Shared Conversation Pbx Voicemail Mailbox UUID
 * @member {String} shared_conversation_pbx_voicemail_mailbox_uuid
 */
ConversationPbxAgent.prototype['shared_conversation_pbx_voicemail_mailbox_uuid'] = undefined;

/**
 * Twilio taskrouter worker Id
 * @member {String} twilio_taskrouter_worker_id
 */
ConversationPbxAgent.prototype['twilio_taskrouter_worker_id'] = undefined;

/**
 * Unavailable play audio UUID
 * @member {String} unavailable_play_audio_uuid
 */
ConversationPbxAgent.prototype['unavailable_play_audio_uuid'] = undefined;

/**
 * Unavailable say
 * @member {String} unavailable_say
 */
ConversationPbxAgent.prototype['unavailable_say'] = undefined;

/**
 * Unavailable say voice
 * @member {String} unavailable_say_voice
 */
ConversationPbxAgent.prototype['unavailable_say_voice'] = undefined;

/**
 * User Id
 * @member {Number} user_id
 */
ConversationPbxAgent.prototype['user_id'] = undefined;

/**
 * True if this agent has voicemail configured
 * @member {Boolean} voicemail
 */
ConversationPbxAgent.prototype['voicemail'] = undefined;






export default ConversationPbxAgent;

