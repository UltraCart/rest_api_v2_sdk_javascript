/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.ultracart.admin.v2.models/AffiliateClick', 'com.ultracart.admin.v2.models/AffiliateLink', 'com.ultracart.admin.v2.models/Order'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AffiliateClick'), require('./AffiliateLink'), require('./Order'));
  } else {
    // Browser globals (root is window)
    if (!root.UltraCartRestApiV2) {
      root.UltraCartRestApiV2 = {};
    }
    root.UltraCartRestApiV2.AffiliateLedger = factory(root.UltraCartRestApiV2.ApiClient, root.UltraCartRestApiV2.AffiliateClick, root.UltraCartRestApiV2.AffiliateLink, root.UltraCartRestApiV2.Order);
  }
}(this, function(ApiClient, AffiliateClick, AffiliateLink, Order) {
  'use strict';

  /**
   * The AffiliateLedger model module.
   * @module com.ultracart.admin.v2.models/AffiliateLedger
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>AffiliateLedger</code>.
   * @alias module:com.ultracart.admin.v2.models/AffiliateLedger
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>AffiliateLedger</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ultracart.admin.v2.models/AffiliateLedger} obj Optional instance to populate.
   * @return {module:com.ultracart.admin.v2.models/AffiliateLedger} The populated <code>AffiliateLedger</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('affiliate_click_oid'))
        obj.affiliateClickOid = ApiClient.convertToType(data['affiliate_click_oid'], 'Number');
      if (data.hasOwnProperty('affiliate_link_oid'))
        obj.affiliateLinkOid = ApiClient.convertToType(data['affiliate_link_oid'], 'Number');
      if (data.hasOwnProperty('affiliate_oid'))
        obj.affiliateOid = ApiClient.convertToType(data['affiliate_oid'], 'Number');
      if (data.hasOwnProperty('assigned_by_user'))
        obj.assignedByUser = ApiClient.convertToType(data['assigned_by_user'], 'String');
      if (data.hasOwnProperty('click'))
        obj.click = AffiliateClick.constructFromObject(data['click']);
      if (data.hasOwnProperty('item_id'))
        obj.itemId = ApiClient.convertToType(data['item_id'], 'String');
      if (data.hasOwnProperty('link'))
        obj.link = AffiliateLink.constructFromObject(data['link']);
      if (data.hasOwnProperty('order'))
        obj.order = Order.constructFromObject(data['order']);
      if (data.hasOwnProperty('order_id'))
        obj.orderId = ApiClient.convertToType(data['order_id'], 'String');
      if (data.hasOwnProperty('original_transaction_dts'))
        obj.originalTransactionDts = ApiClient.convertToType(data['original_transaction_dts'], 'String');
      if (data.hasOwnProperty('sub_id'))
        obj.subId = ApiClient.convertToType(data['sub_id'], 'String');
      if (data.hasOwnProperty('tier_number'))
        obj.tierNumber = ApiClient.convertToType(data['tier_number'], 'String');
      if (data.hasOwnProperty('transaction_amount'))
        obj.transactionAmount = ApiClient.convertToType(data['transaction_amount'], 'Number');
      if (data.hasOwnProperty('transaction_amount_paid'))
        obj.transactionAmountPaid = ApiClient.convertToType(data['transaction_amount_paid'], 'Number');
      if (data.hasOwnProperty('transaction_dts'))
        obj.transactionDts = ApiClient.convertToType(data['transaction_dts'], 'String');
      if (data.hasOwnProperty('transaction_memo'))
        obj.transactionMemo = ApiClient.convertToType(data['transaction_memo'], 'String');
      if (data.hasOwnProperty('transaction_percentage'))
        obj.transactionPercentage = ApiClient.convertToType(data['transaction_percentage'], 'String');
      if (data.hasOwnProperty('transaction_state'))
        obj.transactionState = ApiClient.convertToType(data['transaction_state'], 'String');
    }
    return obj;
  }

  /**
   * Unique object identifier for the click associated with this ledger entry
   * @member {Number} affiliateClickOid
   */
  exports.prototype.affiliateClickOid = undefined;

  /**
   * Unique object identifier for the link that this click is associated with
   * @member {Number} affiliateLinkOid
   */
  exports.prototype.affiliateLinkOid = undefined;

  /**
   * Affiliate object ID associated with this transaction
   * @member {Number} affiliateOid
   */
  exports.prototype.affiliateOid = undefined;

  /**
   * User that assigned the transaction if it was done manually
   * @member {String} assignedByUser
   */
  exports.prototype.assignedByUser = undefined;

  /**
   * @member {module:com.ultracart.admin.v2.models/AffiliateClick} click
   */
  exports.prototype.click = undefined;

  /**
   * Item ID associated with this transaction
   * @member {String} itemId
   */
  exports.prototype.itemId = undefined;

  /**
   * @member {module:com.ultracart.admin.v2.models/AffiliateLink} link
   */
  exports.prototype.link = undefined;

  /**
   * @member {module:com.ultracart.admin.v2.models/Order} order
   */
  exports.prototype.order = undefined;

  /**
   * Order ID associated with this transaction
   * @member {String} orderId
   */
  exports.prototype.orderId = undefined;

  /**
   * Date/time of the original transaction for reversals
   * @member {String} originalTransactionDts
   */
  exports.prototype.originalTransactionDts = undefined;

  /**
   * Sub ID associated with transaction (from the click)
   * @member {String} subId
   */
  exports.prototype.subId = undefined;

  /**
   * Tier number that this transaction earned
   * @member {String} tierNumber
   */
  exports.prototype.tierNumber = undefined;

  /**
   * Transaction amount
   * @member {Number} transactionAmount
   */
  exports.prototype.transactionAmount = undefined;

  /**
   * Amount of the transaction that has been paid out.
   * @member {Number} transactionAmountPaid
   */
  exports.prototype.transactionAmountPaid = undefined;

  /**
   * Date/time that the transaction was made
   * @member {String} transactionDts
   */
  exports.prototype.transactionDts = undefined;

  /**
   * Memo explaining the transaction
   * @member {String} transactionMemo
   */
  exports.prototype.transactionMemo = undefined;

  /**
   * Percentage associated with this transaction
   * @member {String} transactionPercentage
   */
  exports.prototype.transactionPercentage = undefined;

  /**
   * Transaction state
   * @member {module:com.ultracart.admin.v2.models/AffiliateLedger.TransactionStateEnum} transactionState
   */
  exports.prototype.transactionState = undefined;


  /**
   * Allowed values for the <code>transactionState</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TransactionStateEnum = {
    /**
     * value: "Pending"
     * @const
     */
    pending: "Pending",

    /**
     * value: "Posted"
     * @const
     */
    posted: "Posted",

    /**
     * value: "Approved"
     * @const
     */
    approved: "Approved",

    /**
     * value: "Paid"
     * @const
     */
    paid: "Paid",

    /**
     * value: "Rejected"
     * @const
     */
    rejected: "Rejected",

    /**
     * value: "Partially Paid"
     * @const
     */
    partiallyPaid: "Partially Paid"
  };

  return exports;

}));
