/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.ultracart.admin.v2.models/Weight'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Weight'));
  } else {
    // Browser globals (root is window)
    if (!root.UltraCartRestApiV2) {
      root.UltraCartRestApiV2 = {};
    }
    root.UltraCartRestApiV2.OrderShipping = factory(root.UltraCartRestApiV2.ApiClient, root.UltraCartRestApiV2.Weight);
  }
}(this, function(ApiClient, Weight) {
  'use strict';

  /**
   * The OrderShipping model module.
   * @module com.ultracart.admin.v2.models/OrderShipping
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>OrderShipping</code>.
   * @alias module:com.ultracart.admin.v2.models/OrderShipping
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>OrderShipping</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ultracart.admin.v2.models/OrderShipping} obj Optional instance to populate.
   * @return {module:com.ultracart.admin.v2.models/OrderShipping} The populated <code>OrderShipping</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('address1'))
        obj.address1 = ApiClient.convertToType(data['address1'], 'String');
      if (data.hasOwnProperty('address2'))
        obj.address2 = ApiClient.convertToType(data['address2'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('company'))
        obj.company = ApiClient.convertToType(data['company'], 'String');
      if (data.hasOwnProperty('country_code'))
        obj.countryCode = ApiClient.convertToType(data['country_code'], 'String');
      if (data.hasOwnProperty('day_phone'))
        obj.dayPhone = ApiClient.convertToType(data['day_phone'], 'String');
      if (data.hasOwnProperty('day_phone_e164'))
        obj.dayPhoneE164 = ApiClient.convertToType(data['day_phone_e164'], 'String');
      if (data.hasOwnProperty('delivery_date'))
        obj.deliveryDate = ApiClient.convertToType(data['delivery_date'], 'String');
      if (data.hasOwnProperty('evening_phone'))
        obj.eveningPhone = ApiClient.convertToType(data['evening_phone'], 'String');
      if (data.hasOwnProperty('first_name'))
        obj.firstName = ApiClient.convertToType(data['first_name'], 'String');
      if (data.hasOwnProperty('last_name'))
        obj.lastName = ApiClient.convertToType(data['last_name'], 'String');
      if (data.hasOwnProperty('least_cost_route'))
        obj.leastCostRoute = ApiClient.convertToType(data['least_cost_route'], 'Boolean');
      if (data.hasOwnProperty('least_cost_route_shipping_methods'))
        obj.leastCostRouteShippingMethods = ApiClient.convertToType(data['least_cost_route_shipping_methods'], ['String']);
      if (data.hasOwnProperty('lift_gate'))
        obj.liftGate = ApiClient.convertToType(data['lift_gate'], 'Boolean');
      if (data.hasOwnProperty('postal_code'))
        obj.postalCode = ApiClient.convertToType(data['postal_code'], 'String');
      if (data.hasOwnProperty('rma'))
        obj.rma = ApiClient.convertToType(data['rma'], 'String');
      if (data.hasOwnProperty('ship_on_date'))
        obj.shipOnDate = ApiClient.convertToType(data['ship_on_date'], 'String');
      if (data.hasOwnProperty('ship_to_residential'))
        obj.shipToResidential = ApiClient.convertToType(data['ship_to_residential'], 'Boolean');
      if (data.hasOwnProperty('shipping_3rd_party_account_number'))
        obj.shipping3rdPartyAccountNumber = ApiClient.convertToType(data['shipping_3rd_party_account_number'], 'String');
      if (data.hasOwnProperty('shipping_date'))
        obj.shippingDate = ApiClient.convertToType(data['shipping_date'], 'String');
      if (data.hasOwnProperty('shipping_department_status'))
        obj.shippingDepartmentStatus = ApiClient.convertToType(data['shipping_department_status'], 'String');
      if (data.hasOwnProperty('shipping_method'))
        obj.shippingMethod = ApiClient.convertToType(data['shipping_method'], 'String');
      if (data.hasOwnProperty('shipping_method_accounting_code'))
        obj.shippingMethodAccountingCode = ApiClient.convertToType(data['shipping_method_accounting_code'], 'String');
      if (data.hasOwnProperty('special_instructions'))
        obj.specialInstructions = ApiClient.convertToType(data['special_instructions'], 'String');
      if (data.hasOwnProperty('state_region'))
        obj.stateRegion = ApiClient.convertToType(data['state_region'], 'String');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('tracking_numbers'))
        obj.trackingNumbers = ApiClient.convertToType(data['tracking_numbers'], ['String']);
      if (data.hasOwnProperty('weight'))
        obj.weight = Weight.constructFromObject(data['weight']);
    }
    return obj;
  }

  /**
   * Address line 1
   * @member {String} address1
   */
  exports.prototype.address1 = undefined;

  /**
   * Address line 2
   * @member {String} address2
   */
  exports.prototype.address2 = undefined;

  /**
   * City
   * @member {String} city
   */
  exports.prototype.city = undefined;

  /**
   * Company
   * @member {String} company
   */
  exports.prototype.company = undefined;

  /**
   * ISO-3166 two letter country code
   * @member {String} countryCode
   */
  exports.prototype.countryCode = undefined;

  /**
   * Day time phone
   * @member {String} dayPhone
   */
  exports.prototype.dayPhone = undefined;

  /**
   * Day time phone (E164 format)
   * @member {String} dayPhoneE164
   */
  exports.prototype.dayPhoneE164 = undefined;

  /**
   * Date the customer is requesting delivery on.  Typically used for perishable product delivery.
   * @member {String} deliveryDate
   */
  exports.prototype.deliveryDate = undefined;

  /**
   * Evening phone
   * @member {String} eveningPhone
   */
  exports.prototype.eveningPhone = undefined;

  /**
   * First name
   * @member {String} firstName
   */
  exports.prototype.firstName = undefined;

  /**
   * Last name
   * @member {String} lastName
   */
  exports.prototype.lastName = undefined;

  /**
   * If true, instructs UltraCart to apply the cheapest shipping method to this order.  Used only for channel partner order inserts.
   * @member {Boolean} leastCostRoute
   */
  exports.prototype.leastCostRoute = undefined;

  /**
   * List of shipping methods to consider if least_code_route is true. Used only for channel parter order inserts.
   * @member {Array.<String>} leastCostRouteShippingMethods
   */
  exports.prototype.leastCostRouteShippingMethods = undefined;

  /**
   * Lift gate requested (LTL shipping methods only)
   * @member {Boolean} liftGate
   */
  exports.prototype.liftGate = undefined;

  /**
   * Postal code
   * @member {String} postalCode
   */
  exports.prototype.postalCode = undefined;

  /**
   * RMA number
   * @member {String} rma
   */
  exports.prototype.rma = undefined;

  /**
   * Date the customer is requesting that the order ship on.  Typically used for perishable product delivery.
   * @member {String} shipOnDate
   */
  exports.prototype.shipOnDate = undefined;

  /**
   * True if the shipping address is residential.  Effects the methods that are available to the customer as well as the price of the shipping method.
   * @member {Boolean} shipToResidential
   */
  exports.prototype.shipToResidential = undefined;

  /**
   * Shipping 3rd party account number
   * @member {String} shipping3rdPartyAccountNumber
   */
  exports.prototype.shipping3rdPartyAccountNumber = undefined;

  /**
   * Date/time the order shipped on.  This date is set once the first shipment is sent to the customer.
   * @member {String} shippingDate
   */
  exports.prototype.shippingDate = undefined;

  /**
   * Shipping department status
   * @member {String} shippingDepartmentStatus
   */
  exports.prototype.shippingDepartmentStatus = undefined;

  /**
   * Shipping method
   * @member {String} shippingMethod
   */
  exports.prototype.shippingMethod = undefined;

  /**
   * Shipping method accounting code
   * @member {String} shippingMethodAccountingCode
   */
  exports.prototype.shippingMethodAccountingCode = undefined;

  /**
   * Special instructions from the customer regarding shipping
   * @member {String} specialInstructions
   */
  exports.prototype.specialInstructions = undefined;

  /**
   * State
   * @member {String} stateRegion
   */
  exports.prototype.stateRegion = undefined;

  /**
   * Title
   * @member {String} title
   */
  exports.prototype.title = undefined;

  /**
   * Tracking numbers
   * @member {Array.<String>} trackingNumbers
   */
  exports.prototype.trackingNumbers = undefined;

  /**
   * @member {module:com.ultracart.admin.v2.models/Weight} weight
   */
  exports.prototype.weight = undefined;

  return exports;

}));
