/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.ultracart.admin.v2.models/AccountsReceivableRetryDayActivity'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccountsReceivableRetryDayActivity'));
  } else {
    // Browser globals (root is window)
    if (!root.UltraCartRestApiV2) {
      root.UltraCartRestApiV2 = {};
    }
    root.UltraCartRestApiV2.AccountsReceivableRetryConfig = factory(root.UltraCartRestApiV2.ApiClient, root.UltraCartRestApiV2.AccountsReceivableRetryDayActivity);
  }
}(this, function(ApiClient, AccountsReceivableRetryDayActivity) {
  'use strict';

  /**
   * The AccountsReceivableRetryConfig model module.
   * @module com.ultracart.admin.v2.models/AccountsReceivableRetryConfig
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>AccountsReceivableRetryConfig</code>.
   * @alias module:com.ultracart.admin.v2.models/AccountsReceivableRetryConfig
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>AccountsReceivableRetryConfig</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ultracart.admin.v2.models/AccountsReceivableRetryConfig} obj Optional instance to populate.
   * @return {module:com.ultracart.admin.v2.models/AccountsReceivableRetryConfig} The populated <code>AccountsReceivableRetryConfig</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('active'))
        obj.active = ApiClient.convertToType(data['active'], 'Boolean');
      if (data.hasOwnProperty('allow_process_linked_accounts'))
        obj.allowProcessLinkedAccounts = ApiClient.convertToType(data['allow_process_linked_accounts'], 'Boolean');
      if (data.hasOwnProperty('current_service_plan'))
        obj.currentServicePlan = ApiClient.convertToType(data['current_service_plan'], 'String');
      if (data.hasOwnProperty('daily_activity_list'))
        obj.dailyActivityList = ApiClient.convertToType(data['daily_activity_list'], [AccountsReceivableRetryDayActivity]);
      if (data.hasOwnProperty('managed_by_linked_account_merchant_id'))
        obj.managedByLinkedAccountMerchantId = ApiClient.convertToType(data['managed_by_linked_account_merchant_id'], 'Boolean');
      if (data.hasOwnProperty('merchant_id'))
        obj.merchantId = ApiClient.convertToType(data['merchant_id'], 'String');
      if (data.hasOwnProperty('notify_emails'))
        obj.notifyEmails = ApiClient.convertToType(data['notify_emails'], ['String']);
      if (data.hasOwnProperty('notify_rejections'))
        obj.notifyRejections = ApiClient.convertToType(data['notify_rejections'], 'Boolean');
      if (data.hasOwnProperty('notify_successes'))
        obj.notifySuccesses = ApiClient.convertToType(data['notify_successes'], 'Boolean');
      if (data.hasOwnProperty('process_linked_accounts'))
        obj.processLinkedAccounts = ApiClient.convertToType(data['process_linked_accounts'], 'Boolean');
      if (data.hasOwnProperty('processing_percentage'))
        obj.processingPercentage = ApiClient.convertToType(data['processing_percentage'], 'String');
      if (data.hasOwnProperty('reject_at_end'))
        obj.rejectAtEnd = ApiClient.convertToType(data['reject_at_end'], 'Boolean');
      if (data.hasOwnProperty('trial_mode'))
        obj.trialMode = ApiClient.convertToType(data['trial_mode'], 'Boolean');
      if (data.hasOwnProperty('trial_mode_expiration_dts'))
        obj.trialModeExpirationDts = ApiClient.convertToType(data['trial_mode_expiration_dts'], 'String');
    }
    return obj;
  }

  /**
   * True if the retry should run daily.  False puts the retry service into an inactive state for this merchant.
   * @member {Boolean} active
   */
  exports.prototype.active = undefined;

  /**
   * True if this account has linked accounts that it can process.
   * @member {Boolean} allowProcessLinkedAccounts
   */
  exports.prototype.allowProcessLinkedAccounts = undefined;

  /**
   * The current service plan that the account is on.
   * @member {String} currentServicePlan
   */
  exports.prototype.currentServicePlan = undefined;

  /**
   * A list of days and what actions should take place on those days after an order reaches accounts receivable
   * @member {Array.<module:com.ultracart.admin.v2.models/AccountsReceivableRetryDayActivity>} dailyActivityList
   */
  exports.prototype.dailyActivityList = undefined;

  /**
   * If not null, this account is managed by the specified parent merchant id.
   * @member {Boolean} managedByLinkedAccountMerchantId
   */
  exports.prototype.managedByLinkedAccountMerchantId = undefined;

  /**
   * UltraCart merchant ID
   * @member {String} merchantId
   */
  exports.prototype.merchantId = undefined;

  /**
   * A list of email addresses to receive summary notifications from the retry service.
   * @member {Array.<String>} notifyEmails
   */
  exports.prototype.notifyEmails = undefined;

  /**
   * If true, email addresses are notified of rejections.
   * @member {Boolean} notifyRejections
   */
  exports.prototype.notifyRejections = undefined;

  /**
   * If true, email addresses are notified of successful charges.
   * @member {Boolean} notifySuccesses
   */
  exports.prototype.notifySuccesses = undefined;

  /**
   * If true, all linked accounts are also processed using the same rules.
   * @member {Boolean} processLinkedAccounts
   */
  exports.prototype.processLinkedAccounts = undefined;

  /**
   * The percentage rate charged for the service.
   * @member {String} processingPercentage
   */
  exports.prototype.processingPercentage = undefined;

  /**
   * If true, the order is rejected the day after the last configured activity day
   * @member {Boolean} rejectAtEnd
   */
  exports.prototype.rejectAtEnd = undefined;

  /**
   * True if the account is currently in trial mode.  Set to false to exit trial mode.
   * @member {Boolean} trialMode
   */
  exports.prototype.trialMode = undefined;

  /**
   * The date when trial mode expires.  If this date is reached without exiting trial mode, the service will de-activate.
   * @member {String} trialModeExpirationDts
   */
  exports.prototype.trialModeExpirationDts = undefined;

  return exports;

}));
