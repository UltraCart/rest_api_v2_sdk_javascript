/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.UltraCartRestApiV2) {
      root.UltraCartRestApiV2 = {};
    }
    root.UltraCartRestApiV2.EmailFlow = factory(root.UltraCartRestApiV2.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The EmailFlow model module.
   * @module com.ultracart.admin.v2.models/EmailFlow
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>EmailFlow</code>.
   * @alias module:com.ultracart.admin.v2.models/EmailFlow
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>EmailFlow</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ultracart.admin.v2.models/EmailFlow} obj Optional instance to populate.
   * @return {module:com.ultracart.admin.v2.models/EmailFlow} The populated <code>EmailFlow</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('allow_multiple_concurrent_enrollments'))
        obj.allowMultipleConcurrentEnrollments = ApiClient.convertToType(data['allow_multiple_concurrent_enrollments'], 'Boolean');
      if (data.hasOwnProperty('back_populating'))
        obj.backPopulating = ApiClient.convertToType(data['back_populating'], 'Boolean');
      if (data.hasOwnProperty('click_rate_formatted'))
        obj.clickRateFormatted = ApiClient.convertToType(data['click_rate_formatted'], 'String');
      if (data.hasOwnProperty('created_dts'))
        obj.createdDts = ApiClient.convertToType(data['created_dts'], 'String');
      if (data.hasOwnProperty('deleted'))
        obj.deleted = ApiClient.convertToType(data['deleted'], 'Boolean');
      if (data.hasOwnProperty('email_communication_sequence_uuid'))
        obj.emailCommunicationSequenceUuid = ApiClient.convertToType(data['email_communication_sequence_uuid'], 'String');
      if (data.hasOwnProperty('email_flow_uuid'))
        obj.emailFlowUuid = ApiClient.convertToType(data['email_flow_uuid'], 'String');
      if (data.hasOwnProperty('enrolled_customers'))
        obj.enrolledCustomers = ApiClient.convertToType(data['enrolled_customers'], 'Number');
      if (data.hasOwnProperty('esp_domain_user'))
        obj.espDomainUser = ApiClient.convertToType(data['esp_domain_user'], 'String');
      if (data.hasOwnProperty('esp_domain_uuid'))
        obj.espDomainUuid = ApiClient.convertToType(data['esp_domain_uuid'], 'String');
      if (data.hasOwnProperty('esp_friendly_name'))
        obj.espFriendlyName = ApiClient.convertToType(data['esp_friendly_name'], 'String');
      if (data.hasOwnProperty('filter_profile_equation_json'))
        obj.filterProfileEquationJson = ApiClient.convertToType(data['filter_profile_equation_json'], 'String');
      if (data.hasOwnProperty('merchant_id'))
        obj.merchantId = ApiClient.convertToType(data['merchant_id'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('open_rate_formatted'))
        obj.openRateFormatted = ApiClient.convertToType(data['open_rate_formatted'], 'String');
      if (data.hasOwnProperty('revenue_formatted'))
        obj.revenueFormatted = ApiClient.convertToType(data['revenue_formatted'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('status_dts'))
        obj.statusDts = ApiClient.convertToType(data['status_dts'], 'String');
      if (data.hasOwnProperty('storefront_oid'))
        obj.storefrontOid = ApiClient.convertToType(data['storefront_oid'], 'Number');
      if (data.hasOwnProperty('trigger_parameter'))
        obj.triggerParameter = ApiClient.convertToType(data['trigger_parameter'], 'String');
      if (data.hasOwnProperty('trigger_parameter_name'))
        obj.triggerParameterName = ApiClient.convertToType(data['trigger_parameter_name'], 'String');
      if (data.hasOwnProperty('trigger_type'))
        obj.triggerType = ApiClient.convertToType(data['trigger_type'], 'String');
    }
    return obj;
  }

  /**
   * True if a customer may be enrolled in this flow multiple times
   * @member {Boolean} allowMultipleConcurrentEnrollments
   */
  exports.prototype.allowMultipleConcurrentEnrollments = undefined;

  /**
   * True if the flow is currently performing a back population.
   * @member {Boolean} backPopulating
   */
  exports.prototype.backPopulating = undefined;

  /**
   * Click rate of emails, formatted
   * @member {String} clickRateFormatted
   */
  exports.prototype.clickRateFormatted = undefined;

  /**
   * Created date
   * @member {String} createdDts
   */
  exports.prototype.createdDts = undefined;

  /**
   * True if this campaign was deleted
   * @member {Boolean} deleted
   */
  exports.prototype.deleted = undefined;

  /**
   * Email communication sequence UUID
   * @member {String} emailCommunicationSequenceUuid
   */
  exports.prototype.emailCommunicationSequenceUuid = undefined;

  /**
   * Email flow UUID
   * @member {String} emailFlowUuid
   */
  exports.prototype.emailFlowUuid = undefined;

  /**
   * Number of enrolled customers.
   * @member {Number} enrolledCustomers
   */
  exports.prototype.enrolledCustomers = undefined;

  /**
   * Username of sending email
   * @member {String} espDomainUser
   */
  exports.prototype.espDomainUser = undefined;

  /**
   * UUID of sending domain
   * @member {String} espDomainUuid
   */
  exports.prototype.espDomainUuid = undefined;

  /**
   * Friendly name of the sending email
   * @member {String} espFriendlyName
   */
  exports.prototype.espFriendlyName = undefined;

  /**
   * File profile equation json
   * @member {String} filterProfileEquationJson
   */
  exports.prototype.filterProfileEquationJson = undefined;

  /**
   * Merchant ID
   * @member {String} merchantId
   */
  exports.prototype.merchantId = undefined;

  /**
   * Name of email flow
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Open rate of emails, formatted
   * @member {String} openRateFormatted
   */
  exports.prototype.openRateFormatted = undefined;

  /**
   * Revenue, formatted
   * @member {String} revenueFormatted
   */
  exports.prototype.revenueFormatted = undefined;

  /**
   * Status of the campaign of draft, archived, active, and inactive
   * @member {String} status
   */
  exports.prototype.status = undefined;

  /**
   * Timestamp when the last status change happened
   * @member {String} statusDts
   */
  exports.prototype.statusDts = undefined;

  /**
   * Storefront oid
   * @member {Number} storefrontOid
   */
  exports.prototype.storefrontOid = undefined;

  /**
   * Trigger parameter
   * @member {String} triggerParameter
   */
  exports.prototype.triggerParameter = undefined;

  /**
   * Trigger parameter name
   * @member {String} triggerParameterName
   */
  exports.prototype.triggerParameterName = undefined;

  /**
   * Trigger type
   * @member {String} triggerType
   */
  exports.prototype.triggerType = undefined;

  return exports;

}));
