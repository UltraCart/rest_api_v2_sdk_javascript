/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReportDataSetPage from './ReportDataSetPage';
import ReportDataSetSchema from './ReportDataSetSchema';

/**
 * The ReportDataSet model module.
 * @module com.ultracart.admin.v2.models/ReportDataSet
 * @version 4.1.2
 */
class ReportDataSet {
    /**
     * Constructs a new <code>ReportDataSet</code>.
     * @alias module:com.ultracart.admin.v2.models/ReportDataSet
     */
    constructor() { 
        
        ReportDataSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportDataSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.ultracart.admin.v2.models/ReportDataSet} obj Optional instance to populate.
     * @return {module:com.ultracart.admin.v2.models/ReportDataSet} The populated <code>ReportDataSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportDataSet();

            if (data.hasOwnProperty('data_set_query_uuid')) {
                obj['data_set_query_uuid'] = ApiClient.convertToType(data['data_set_query_uuid'], 'String');
            }
            if (data.hasOwnProperty('data_set_uuid')) {
                obj['data_set_uuid'] = ApiClient.convertToType(data['data_set_uuid'], 'String');
            }
            if (data.hasOwnProperty('destination_table_id')) {
                obj['destination_table_id'] = ApiClient.convertToType(data['destination_table_id'], 'String');
            }
            if (data.hasOwnProperty('error_message')) {
                obj['error_message'] = ApiClient.convertToType(data['error_message'], 'String');
            }
            if (data.hasOwnProperty('executed_sql')) {
                obj['executed_sql'] = ApiClient.convertToType(data['executed_sql'], 'String');
            }
            if (data.hasOwnProperty('for_object_id')) {
                obj['for_object_id'] = ApiClient.convertToType(data['for_object_id'], 'String');
            }
            if (data.hasOwnProperty('for_object_type')) {
                obj['for_object_type'] = ApiClient.convertToType(data['for_object_type'], 'String');
            }
            if (data.hasOwnProperty('initial_pages')) {
                obj['initial_pages'] = ApiClient.convertToType(data['initial_pages'], [ReportDataSetPage]);
            }
            if (data.hasOwnProperty('max_results')) {
                obj['max_results'] = ApiClient.convertToType(data['max_results'], 'Number');
            }
            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('page_count')) {
                obj['page_count'] = ApiClient.convertToType(data['page_count'], 'Number');
            }
            if (data.hasOwnProperty('page_size')) {
                obj['page_size'] = ApiClient.convertToType(data['page_size'], 'Number');
            }
            if (data.hasOwnProperty('request_dts')) {
                obj['request_dts'] = ApiClient.convertToType(data['request_dts'], 'String');
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = ApiClient.convertToType(data['schema'], [ReportDataSetSchema]);
            }
            if (data.hasOwnProperty('security_level')) {
                obj['security_level'] = ApiClient.convertToType(data['security_level'], 'String');
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
            }
            if (data.hasOwnProperty('user_data')) {
                obj['user_data'] = ApiClient.convertToType(data['user_data'], 'String');
            }
        }
        return obj;
    }


}

/**
 * A unique identifier assigned to the data set query that is returned.
 * @member {String} data_set_query_uuid
 */
ReportDataSet.prototype['data_set_query_uuid'] = undefined;

/**
 * A unique identifier assigned to the data set that is returned.
 * @member {String} data_set_uuid
 */
ReportDataSet.prototype['data_set_uuid'] = undefined;

/**
 * The BigQuery destination table id that contains the result.
 * @member {String} destination_table_id
 */
ReportDataSet.prototype['destination_table_id'] = undefined;

/**
 * Error message if the query failed.
 * @member {String} error_message
 */
ReportDataSet.prototype['error_message'] = undefined;

/**
 * @member {String} executed_sql
 */
ReportDataSet.prototype['executed_sql'] = undefined;

/**
 * An identifier that can be used to help match up the returned data set
 * @member {String} for_object_id
 */
ReportDataSet.prototype['for_object_id'] = undefined;

/**
 * The type of object this data set is for
 * @member {module:com.ultracart.admin.v2.models/ReportDataSet.ForObjectTypeEnum} for_object_type
 */
ReportDataSet.prototype['for_object_type'] = undefined;

/**
 * Initial pages returned in the dataset
 * @member {Array.<module:com.ultracart.admin.v2.models/ReportDataSetPage>} initial_pages
 */
ReportDataSet.prototype['initial_pages'] = undefined;

/**
 * The total number of results
 * @member {Number} max_results
 */
ReportDataSet.prototype['max_results'] = undefined;

/**
 * Merchant that owns this data set
 * @member {String} merchant_id
 */
ReportDataSet.prototype['merchant_id'] = undefined;

/**
 * The total number of pages in the result set
 * @member {Number} page_count
 */
ReportDataSet.prototype['page_count'] = undefined;

/**
 * The size of the pages
 * @member {Number} page_size
 */
ReportDataSet.prototype['page_size'] = undefined;

/**
 * Date/Time of the client submitted the request.  Can be used to resolve out of order query completion results
 * @member {String} request_dts
 */
ReportDataSet.prototype['request_dts'] = undefined;

/**
 * The schema associated with the data set.
 * @member {Array.<module:com.ultracart.admin.v2.models/ReportDataSetSchema>} schema
 */
ReportDataSet.prototype['schema'] = undefined;

/**
 * Security level this dataset was read from.
 * @member {String} security_level
 */
ReportDataSet.prototype['security_level'] = undefined;

/**
 * @member {String} timezone
 */
ReportDataSet.prototype['timezone'] = undefined;

/**
 * Any other data that needs to be returned with the response to help the UI
 * @member {String} user_data
 */
ReportDataSet.prototype['user_data'] = undefined;





/**
 * Allowed values for the <code>for_object_type</code> property.
 * @enum {String}
 * @readonly
 */
ReportDataSet['ForObjectTypeEnum'] = {

    /**
     * value: "schema"
     * @const
     */
    "schema": "schema",

    /**
     * value: "filter"
     * @const
     */
    "filter": "filter",

    /**
     * value: "visualization"
     * @const
     */
    "visualization": "visualization"
};



export default ReportDataSet;

