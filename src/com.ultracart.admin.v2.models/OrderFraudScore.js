/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.UltraCartRestApiV2) {
      root.UltraCartRestApiV2 = {};
    }
    root.UltraCartRestApiV2.OrderFraudScore = factory(root.UltraCartRestApiV2.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The OrderFraudScore model module.
   * @module com.ultracart.admin.v2.models/OrderFraudScore
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>OrderFraudScore</code>.
   * @alias module:com.ultracart.admin.v2.models/OrderFraudScore
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>OrderFraudScore</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ultracart.admin.v2.models/OrderFraudScore} obj Optional instance to populate.
   * @return {module:com.ultracart.admin.v2.models/OrderFraudScore} The populated <code>OrderFraudScore</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('anonymous_proxy'))
        obj.anonymousProxy = ApiClient.convertToType(data['anonymous_proxy'], 'Boolean');
      if (data.hasOwnProperty('bin_match'))
        obj.binMatch = ApiClient.convertToType(data['bin_match'], 'String');
      if (data.hasOwnProperty('carder_email'))
        obj.carderEmail = ApiClient.convertToType(data['carder_email'], 'Boolean');
      if (data.hasOwnProperty('country_code'))
        obj.countryCode = ApiClient.convertToType(data['country_code'], 'String');
      if (data.hasOwnProperty('country_match'))
        obj.countryMatch = ApiClient.convertToType(data['country_match'], 'Boolean');
      if (data.hasOwnProperty('customer_phone_in_billing_location'))
        obj.customerPhoneInBillingLocation = ApiClient.convertToType(data['customer_phone_in_billing_location'], 'String');
      if (data.hasOwnProperty('distance_km'))
        obj.distanceKm = ApiClient.convertToType(data['distance_km'], 'Number');
      if (data.hasOwnProperty('free_email'))
        obj.freeEmail = ApiClient.convertToType(data['free_email'], 'Boolean');
      if (data.hasOwnProperty('high_risk_country'))
        obj.highRiskCountry = ApiClient.convertToType(data['high_risk_country'], 'Boolean');
      if (data.hasOwnProperty('ip_city'))
        obj.ipCity = ApiClient.convertToType(data['ip_city'], 'String');
      if (data.hasOwnProperty('ip_isp'))
        obj.ipIsp = ApiClient.convertToType(data['ip_isp'], 'String');
      if (data.hasOwnProperty('ip_latitude'))
        obj.ipLatitude = ApiClient.convertToType(data['ip_latitude'], 'String');
      if (data.hasOwnProperty('ip_longitude'))
        obj.ipLongitude = ApiClient.convertToType(data['ip_longitude'], 'String');
      if (data.hasOwnProperty('ip_org'))
        obj.ipOrg = ApiClient.convertToType(data['ip_org'], 'String');
      if (data.hasOwnProperty('ip_region'))
        obj.ipRegion = ApiClient.convertToType(data['ip_region'], 'String');
      if (data.hasOwnProperty('proxy_score'))
        obj.proxyScore = ApiClient.convertToType(data['proxy_score'], 'Number');
      if (data.hasOwnProperty('score'))
        obj.score = ApiClient.convertToType(data['score'], 'Number');
      if (data.hasOwnProperty('ship_forwarder'))
        obj.shipForwarder = ApiClient.convertToType(data['ship_forwarder'], 'Boolean');
      if (data.hasOwnProperty('spam_score'))
        obj.spamScore = ApiClient.convertToType(data['spam_score'], 'Number');
      if (data.hasOwnProperty('transparent_proxy'))
        obj.transparentProxy = ApiClient.convertToType(data['transparent_proxy'], 'Boolean');
    }
    return obj;
  }

  /**
   * True if the IP address is a known anonymous proxy server
   * @member {Boolean} anonymousProxy
   */
  exports.prototype.anonymousProxy = undefined;

  /**
   * Whether the BIN (first six digits) matched the country
   * @member {module:com.ultracart.admin.v2.models/OrderFraudScore.BinMatchEnum} binMatch
   */
  exports.prototype.binMatch = undefined;

  /**
   * True if the email address belongs to a known credit card fraudster
   * @member {Boolean} carderEmail
   */
  exports.prototype.carderEmail = undefined;

  /**
   * Country code
   * @member {String} countryCode
   */
  exports.prototype.countryCode = undefined;

  /**
   * Country code matches BIN country
   * @member {Boolean} countryMatch
   */
  exports.prototype.countryMatch = undefined;

  /**
   * Whether the customer's phone number is located in the area of the billing address
   * @member {String} customerPhoneInBillingLocation
   */
  exports.prototype.customerPhoneInBillingLocation = undefined;

  /**
   * Distance in kilometers between the IP address and the BIN
   * @member {Number} distanceKm
   */
  exports.prototype.distanceKm = undefined;

  /**
   * True if the email address is for a free service like gmail.com
   * @member {Boolean} freeEmail
   */
  exports.prototype.freeEmail = undefined;

  /**
   * True if the customer is in a high risk country known for internet fraud
   * @member {Boolean} highRiskCountry
   */
  exports.prototype.highRiskCountry = undefined;

  /**
   * City associated with the IP address
   * @member {String} ipCity
   */
  exports.prototype.ipCity = undefined;

  /**
   * ISP that owns the IP address
   * @member {String} ipIsp
   */
  exports.prototype.ipIsp = undefined;

  /**
   * Approximate latitude associated with the IP address
   * @member {String} ipLatitude
   */
  exports.prototype.ipLatitude = undefined;

  /**
   * Approximate longitude associated with the IP address
   * @member {String} ipLongitude
   */
  exports.prototype.ipLongitude = undefined;

  /**
   * Organization that owns the IP address
   * @member {String} ipOrg
   */
  exports.prototype.ipOrg = undefined;

  /**
   * State/region associated with the IP address
   * @member {String} ipRegion
   */
  exports.prototype.ipRegion = undefined;

  /**
   * Likelihood of the IP address being a proxy server
   * @member {Number} proxyScore
   */
  exports.prototype.proxyScore = undefined;

  /**
   * Overall score.  This is the score that is compared to see if the order is rejected or held for review by the fraud filter rules.
   * @member {Number} score
   */
  exports.prototype.score = undefined;

  /**
   * True if the address is a known ship forwarding company
   * @member {Boolean} shipForwarder
   */
  exports.prototype.shipForwarder = undefined;

  /**
   * Likelihood of the email address being associated with a spammer
   * @member {Number} spamScore
   */
  exports.prototype.spamScore = undefined;

  /**
   * True if the IP address that placed the order is a transparent proxy server
   * @member {Boolean} transparentProxy
   */
  exports.prototype.transparentProxy = undefined;


  /**
   * Allowed values for the <code>binMatch</code> property.
   * @enum {String}
   * @readonly
   */
  exports.BinMatchEnum = {
    /**
     * value: "NA"
     * @const
     */
    NA: "NA",

    /**
     * value: "No"
     * @const
     */
    no: "No",

    /**
     * value: "NotFound"
     * @const
     */
    notFound: "NotFound",

    /**
     * value: "Yes"
     * @const
     */
    yes: "Yes"
  };

  return exports;

}));
