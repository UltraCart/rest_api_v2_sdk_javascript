/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.UltraCartRestApiV2) {
      root.UltraCartRestApiV2 = {};
    }
    root.UltraCartRestApiV2.PaymentsThemeTransactionType = factory(root.UltraCartRestApiV2.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The PaymentsThemeTransactionType model module.
   * @module com.ultracart.admin.v2.models/PaymentsThemeTransactionType
   * @version 3.6.35
   */

  /**
   * Constructs a new <code>PaymentsThemeTransactionType</code>.
   * @alias module:com.ultracart.admin.v2.models/PaymentsThemeTransactionType
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>PaymentsThemeTransactionType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ultracart.admin.v2.models/PaymentsThemeTransactionType} obj Optional instance to populate.
   * @return {module:com.ultracart.admin.v2.models/PaymentsThemeTransactionType} The populated <code>PaymentsThemeTransactionType</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('code'))
        obj.code = ApiClient.convertToType(data['code'], 'String');
      if (data.hasOwnProperty('credit_card_transaction_type'))
        obj.credit_card_transaction_type = ApiClient.convertToType(data['credit_card_transaction_type'], 'String');
      if (data.hasOwnProperty('screen_branding_theme_oid'))
        obj.screen_branding_theme_oid = ApiClient.convertToType(data['screen_branding_theme_oid'], 'Number');
    }
    return obj;
  }

  /**
   * External human readable identifier for a theme
   * @member {String} code
   */
  exports.prototype.code = undefined;

  /**
   * The credit card transaction type for this theme
   * @member {module:com.ultracart.admin.v2.models/PaymentsThemeTransactionType.CreditCardTransactionTypeEnum} credit_card_transaction_type
   */
  exports.prototype.credit_card_transaction_type = undefined;

  /**
   * Internal identifier for a theme
   * @member {Number} screen_branding_theme_oid
   */
  exports.prototype.screen_branding_theme_oid = undefined;


  /**
   * Allowed values for the <code>credit_card_transaction_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CreditCardTransactionTypeEnum = {
    /**
     * value: "auth and capture"
     * @const
     */
    and_capture: "auth and capture",

    /**
     * value: "auth then capture"
     * @const
     */
    then_capture: "auth then capture",

    /**
     * value: "auth only"
     * @const
     */
    only: "auth only"
  };

  return exports;

}));
