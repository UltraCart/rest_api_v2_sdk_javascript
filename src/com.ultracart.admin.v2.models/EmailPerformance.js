/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.ultracart.admin.v2.models/EmailPerformanceCustomerHistogram', 'com.ultracart.admin.v2.models/EmailPerformanceDaily'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./EmailPerformanceCustomerHistogram'), require('./EmailPerformanceDaily'));
  } else {
    // Browser globals (root is window)
    if (!root.UltraCartRestApiV2) {
      root.UltraCartRestApiV2 = {};
    }
    root.UltraCartRestApiV2.EmailPerformance = factory(root.UltraCartRestApiV2.ApiClient, root.UltraCartRestApiV2.EmailPerformanceCustomerHistogram, root.UltraCartRestApiV2.EmailPerformanceDaily);
  }
}(this, function(ApiClient, EmailPerformanceCustomerHistogram, EmailPerformanceDaily) {
  'use strict';

  /**
   * The EmailPerformance model module.
   * @module com.ultracart.admin.v2.models/EmailPerformance
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>EmailPerformance</code>.
   * @alias module:com.ultracart.admin.v2.models/EmailPerformance
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>EmailPerformance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ultracart.admin.v2.models/EmailPerformance} obj Optional instance to populate.
   * @return {module:com.ultracart.admin.v2.models/EmailPerformance} The populated <code>EmailPerformance</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('active_customers'))
        obj.activeCustomers = ApiClient.convertToType(data['active_customers'], 'Number');
      if (data.hasOwnProperty('actual_customers'))
        obj.actualCustomers = ApiClient.convertToType(data['actual_customers'], 'Number');
      if (data.hasOwnProperty('bounce_count'))
        obj.bounceCount = ApiClient.convertToType(data['bounce_count'], 'Number');
      if (data.hasOwnProperty('bounce_percentage'))
        obj.bouncePercentage = ApiClient.convertToType(data['bounce_percentage'], 'Number');
      if (data.hasOwnProperty('bounce_percentage_formatted'))
        obj.bouncePercentageFormatted = ApiClient.convertToType(data['bounce_percentage_formatted'], 'String');
      if (data.hasOwnProperty('customer_histogram'))
        obj.customerHistogram = EmailPerformanceCustomerHistogram.constructFromObject(data['customer_histogram']);
      if (data.hasOwnProperty('daily_stats'))
        obj.dailyStats = ApiClient.convertToType(data['daily_stats'], [EmailPerformanceDaily]);
      if (data.hasOwnProperty('delivered_count'))
        obj.deliveredCount = ApiClient.convertToType(data['delivered_count'], 'Number');
      if (data.hasOwnProperty('max_active_customers'))
        obj.maxActiveCustomers = ApiClient.convertToType(data['max_active_customers'], 'Number');
      if (data.hasOwnProperty('max_emails_per_day'))
        obj.maxEmailsPerDay = ApiClient.convertToType(data['max_emails_per_day'], 'Number');
      if (data.hasOwnProperty('max_emails_per_hour'))
        obj.maxEmailsPerHour = ApiClient.convertToType(data['max_emails_per_hour'], 'Number');
      if (data.hasOwnProperty('max_emails_per_month'))
        obj.maxEmailsPerMonth = ApiClient.convertToType(data['max_emails_per_month'], 'Number');
      if (data.hasOwnProperty('paused_for_spam'))
        obj.pausedForSpam = ApiClient.convertToType(data['paused_for_spam'], 'Boolean');
      if (data.hasOwnProperty('revenue'))
        obj.revenue = ApiClient.convertToType(data['revenue'], 'Number');
      if (data.hasOwnProperty('sent_emails_per_day'))
        obj.sentEmailsPerDay = ApiClient.convertToType(data['sent_emails_per_day'], 'Number');
      if (data.hasOwnProperty('sent_emails_per_hour'))
        obj.sentEmailsPerHour = ApiClient.convertToType(data['sent_emails_per_hour'], 'Number');
      if (data.hasOwnProperty('sent_emails_per_month'))
        obj.sentEmailsPerMonth = ApiClient.convertToType(data['sent_emails_per_month'], 'Number');
      if (data.hasOwnProperty('sequence_send_count'))
        obj.sequenceSendCount = ApiClient.convertToType(data['sequence_send_count'], 'Number');
      if (data.hasOwnProperty('spam_count'))
        obj.spamCount = ApiClient.convertToType(data['spam_count'], 'Number');
      if (data.hasOwnProperty('spam_percentage'))
        obj.spamPercentage = ApiClient.convertToType(data['spam_percentage'], 'Number');
      if (data.hasOwnProperty('spam_percentage_formatted'))
        obj.spamPercentageFormatted = ApiClient.convertToType(data['spam_percentage_formatted'], 'String');
      if (data.hasOwnProperty('transactional_send_count'))
        obj.transactionalSendCount = ApiClient.convertToType(data['transactional_send_count'], 'Number');
    }
    return obj;
  }

  /**
   * Active customers.  The value will be -1 if calculation is pending.
   * @member {Number} activeCustomers
   */
  exports.prototype.activeCustomers = undefined;

  /**
   * Actual customers that they have regardless of active state.  The value will be -1 if calculation is pending.
   * @member {Number} actualCustomers
   */
  exports.prototype.actualCustomers = undefined;

  /**
   * Bounce count
   * @member {Number} bounceCount
   */
  exports.prototype.bounceCount = undefined;

  /**
   * bounce percentage rate based upon our look back window.  This should be under five percent or the account will be paused for sending.
   * @member {Number} bouncePercentage
   */
  exports.prototype.bouncePercentage = undefined;

  /**
   * bounce percentage rate (formatted) based upon our look back window.  This should be under five percent or the account will be paused for sending.
   * @member {String} bouncePercentageFormatted
   */
  exports.prototype.bouncePercentageFormatted = undefined;

  /**
   * @member {module:com.ultracart.admin.v2.models/EmailPerformanceCustomerHistogram} customerHistogram
   */
  exports.prototype.customerHistogram = undefined;

  /**
   * Daily statistics used for charting
   * @member {Array.<module:com.ultracart.admin.v2.models/EmailPerformanceDaily>} dailyStats
   */
  exports.prototype.dailyStats = undefined;

  /**
   * Delivered count
   * @member {Number} deliveredCount
   */
  exports.prototype.deliveredCount = undefined;

  /**
   * Maximum active customers allowed under their billing plan
   * @member {Number} maxActiveCustomers
   */
  exports.prototype.maxActiveCustomers = undefined;

  /**
   * Max emails per day
   * @member {Number} maxEmailsPerDay
   */
  exports.prototype.maxEmailsPerDay = undefined;

  /**
   * Max emails per hour
   * @member {Number} maxEmailsPerHour
   */
  exports.prototype.maxEmailsPerHour = undefined;

  /**
   * Max emails per month
   * @member {Number} maxEmailsPerMonth
   */
  exports.prototype.maxEmailsPerMonth = undefined;

  /**
   * True if campaign/flow emails are paused due to spam complaints.
   * @member {Boolean} pausedForSpam
   */
  exports.prototype.pausedForSpam = undefined;

  /**
   * Revenue
   * @member {Number} revenue
   */
  exports.prototype.revenue = undefined;

  /**
   * Sent emails last 24 hours
   * @member {Number} sentEmailsPerDay
   */
  exports.prototype.sentEmailsPerDay = undefined;

  /**
   * Sent emails last hour
   * @member {Number} sentEmailsPerHour
   */
  exports.prototype.sentEmailsPerHour = undefined;

  /**
   * Sent emails last 31 days
   * @member {Number} sentEmailsPerMonth
   */
  exports.prototype.sentEmailsPerMonth = undefined;

  /**
   * Total sequence (campaign/flow) emails sent
   * @member {Number} sequenceSendCount
   */
  exports.prototype.sequenceSendCount = undefined;

  /**
   * Spam complaints
   * @member {Number} spamCount
   */
  exports.prototype.spamCount = undefined;

  /**
   * Spam percentage rate based upon our look back window.  This should be under one half a percent or the account will be paused for sending.
   * @member {Number} spamPercentage
   */
  exports.prototype.spamPercentage = undefined;

  /**
   * Spam percentage rate (formatted) based upon our look back window.  This should be under one half a percent or the account will be paused for sending.
   * @member {String} spamPercentageFormatted
   */
  exports.prototype.spamPercentageFormatted = undefined;

  /**
   * Total transactions emails sent
   * @member {Number} transactionalSendCount
   */
  exports.prototype.transactionalSendCount = undefined;

  return exports;

}));
