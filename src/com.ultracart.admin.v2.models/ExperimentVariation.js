/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.UltraCartRestApiV2) {
      root.UltraCartRestApiV2 = {};
    }
    root.UltraCartRestApiV2.ExperimentVariation = factory(root.UltraCartRestApiV2.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ExperimentVariation model module.
   * @module com.ultracart.admin.v2.models/ExperimentVariation
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>ExperimentVariation</code>.
   * @alias module:com.ultracart.admin.v2.models/ExperimentVariation
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>ExperimentVariation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ultracart.admin.v2.models/ExperimentVariation} obj Optional instance to populate.
   * @return {module:com.ultracart.admin.v2.models/ExperimentVariation} The populated <code>ExperimentVariation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('add_to_cart_count'))
        obj.addToCartCount = ApiClient.convertToType(data['add_to_cart_count'], 'Number');
      if (data.hasOwnProperty('average_duration_seconds'))
        obj.averageDurationSeconds = ApiClient.convertToType(data['average_duration_seconds'], 'Number');
      if (data.hasOwnProperty('average_objective_per_session'))
        obj.averageObjectivePerSession = ApiClient.convertToType(data['average_objective_per_session'], 'Number');
      if (data.hasOwnProperty('average_order_value'))
        obj.averageOrderValue = ApiClient.convertToType(data['average_order_value'], 'Number');
      if (data.hasOwnProperty('bounce_count'))
        obj.bounceCount = ApiClient.convertToType(data['bounce_count'], 'Number');
      if (data.hasOwnProperty('conversion_rate'))
        obj.conversionRate = ApiClient.convertToType(data['conversion_rate'], 'Number');
      if (data.hasOwnProperty('duration_seconds_sum'))
        obj.durationSecondsSum = ApiClient.convertToType(data['duration_seconds_sum'], 'Number');
      if (data.hasOwnProperty('initiate_checkout_count'))
        obj.initiateCheckoutCount = ApiClient.convertToType(data['initiate_checkout_count'], 'Number');
      if (data.hasOwnProperty('order_count'))
        obj.orderCount = ApiClient.convertToType(data['order_count'], 'Number');
      if (data.hasOwnProperty('original_traffic_percentage'))
        obj.originalTrafficPercentage = ApiClient.convertToType(data['original_traffic_percentage'], 'Number');
      if (data.hasOwnProperty('page_view_count'))
        obj.pageViewCount = ApiClient.convertToType(data['page_view_count'], 'Number');
      if (data.hasOwnProperty('revenue'))
        obj.revenue = ApiClient.convertToType(data['revenue'], 'Number');
      if (data.hasOwnProperty('session_count'))
        obj.sessionCount = ApiClient.convertToType(data['session_count'], 'Number');
      if (data.hasOwnProperty('traffic_percentage'))
        obj.trafficPercentage = ApiClient.convertToType(data['traffic_percentage'], 'Number');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('variation_name'))
        obj.variationName = ApiClient.convertToType(data['variation_name'], 'String');
      if (data.hasOwnProperty('variation_number'))
        obj.variationNumber = ApiClient.convertToType(data['variation_number'], 'Number');
      if (data.hasOwnProperty('winner'))
        obj.winner = ApiClient.convertToType(data['winner'], 'Boolean');
    }
    return obj;
  }

  /**
   * Total add to cart count for this variation
   * @member {Number} addToCartCount
   */
  exports.prototype.addToCartCount = undefined;

  /**
   * Average duration seconds per session for this variation
   * @member {Number} averageDurationSeconds
   */
  exports.prototype.averageDurationSeconds = undefined;

  /**
   * Average objective value per session for this variation
   * @member {Number} averageObjectivePerSession
   */
  exports.prototype.averageObjectivePerSession = undefined;

  /**
   * Average order value for this variation
   * @member {Number} averageOrderValue
   */
  exports.prototype.averageOrderValue = undefined;

  /**
   * Total bounce count for this variation
   * @member {Number} bounceCount
   */
  exports.prototype.bounceCount = undefined;

  /**
   * Conversion rate for this variation
   * @member {Number} conversionRate
   */
  exports.prototype.conversionRate = undefined;

  /**
   * Total number of seconds spent on the site for this variation
   * @member {Number} durationSecondsSum
   */
  exports.prototype.durationSecondsSum = undefined;

  /**
   * Total initiate checkout count for this variation
   * @member {Number} initiateCheckoutCount
   */
  exports.prototype.initiateCheckoutCount = undefined;

  /**
   * Total order count for this variation
   * @member {Number} orderCount
   */
  exports.prototype.orderCount = undefined;

  /**
   * Percentage of the traffic the variation originally started out with
   * @member {Number} originalTrafficPercentage
   */
  exports.prototype.originalTrafficPercentage = undefined;

  /**
   * Total page view count for this variation
   * @member {Number} pageViewCount
   */
  exports.prototype.pageViewCount = undefined;

  /**
   * Total revenue for this variation
   * @member {Number} revenue
   */
  exports.prototype.revenue = undefined;

  /**
   * Total sessions for this variation
   * @member {Number} sessionCount
   */
  exports.prototype.sessionCount = undefined;

  /**
   * Percentage of the traffic this variation is currently receiving
   * @member {Number} trafficPercentage
   */
  exports.prototype.trafficPercentage = undefined;

  /**
   * Url of the variation if this experiment is a url experiment.
   * @member {String} url
   */
  exports.prototype.url = undefined;

  /**
   * Name of the variation
   * @member {String} variationName
   */
  exports.prototype.variationName = undefined;

  /**
   * Variation number
   * @member {Number} variationNumber
   */
  exports.prototype.variationNumber = undefined;

  /**
   * True if this variation has been declared the winner
   * @member {Boolean} winner
   */
  exports.prototype.winner = undefined;

  return exports;

}));
