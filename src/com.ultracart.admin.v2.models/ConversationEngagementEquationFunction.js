/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConversationEngagementEquationFunction model module.
 * @module com.ultracart.admin.v2.models/ConversationEngagementEquationFunction
 * @version 4.0.159
 */
class ConversationEngagementEquationFunction {
    /**
     * Constructs a new <code>ConversationEngagementEquationFunction</code>.
     * @alias module:com.ultracart.admin.v2.models/ConversationEngagementEquationFunction
     */
    constructor() { 
        
        ConversationEngagementEquationFunction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationEngagementEquationFunction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.ultracart.admin.v2.models/ConversationEngagementEquationFunction} obj Optional instance to populate.
     * @return {module:com.ultracart.admin.v2.models/ConversationEngagementEquationFunction} The populated <code>ConversationEngagementEquationFunction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationEngagementEquationFunction();

            if (data.hasOwnProperty('any_page_url_logic')) {
                obj['any_page_url_logic'] = ApiClient.convertToType(data['any_page_url_logic'], 'String');
            }
            if (data.hasOwnProperty('any_page_url_value')) {
                obj['any_page_url_value'] = ApiClient.convertToType(data['any_page_url_value'], 'String');
            }
            if (data.hasOwnProperty('current_page_url_logic')) {
                obj['current_page_url_logic'] = ApiClient.convertToType(data['current_page_url_logic'], 'String');
            }
            if (data.hasOwnProperty('current_page_url_value')) {
                obj['current_page_url_value'] = ApiClient.convertToType(data['current_page_url_value'], 'String');
            }
            if (data.hasOwnProperty('customers_browsing_time_logic')) {
                obj['customers_browsing_time_logic'] = ApiClient.convertToType(data['customers_browsing_time_logic'], 'String');
            }
            if (data.hasOwnProperty('customers_browsing_time_seconds')) {
                obj['customers_browsing_time_seconds'] = ApiClient.convertToType(data['customers_browsing_time_seconds'], 'Number');
            }
            if (data.hasOwnProperty('customers_location_country')) {
                obj['customers_location_country'] = ApiClient.convertToType(data['customers_location_country'], 'String');
            }
            if (data.hasOwnProperty('customers_location_logic')) {
                obj['customers_location_logic'] = ApiClient.convertToType(data['customers_location_logic'], 'String');
            }
            if (data.hasOwnProperty('customers_location_state')) {
                obj['customers_location_state'] = ApiClient.convertToType(data['customers_location_state'], 'String');
            }
            if (data.hasOwnProperty('number_of_viewed_pages_logic')) {
                obj['number_of_viewed_pages_logic'] = ApiClient.convertToType(data['number_of_viewed_pages_logic'], 'String');
            }
            if (data.hasOwnProperty('number_of_viewed_pages_value')) {
                obj['number_of_viewed_pages_value'] = ApiClient.convertToType(data['number_of_viewed_pages_value'], 'Number');
            }
            if (data.hasOwnProperty('referring_website_logic')) {
                obj['referring_website_logic'] = ApiClient.convertToType(data['referring_website_logic'], 'String');
            }
            if (data.hasOwnProperty('referring_website_value')) {
                obj['referring_website_value'] = ApiClient.convertToType(data['referring_website_value'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Logic operation to perform on an any page url function type
 * @member {module:com.ultracart.admin.v2.models/ConversationEngagementEquationFunction.AnyPageUrlLogicEnum} any_page_url_logic
 */
ConversationEngagementEquationFunction.prototype['any_page_url_logic'] = undefined;

/**
 * @member {String} any_page_url_value
 */
ConversationEngagementEquationFunction.prototype['any_page_url_value'] = undefined;

/**
 * Logic operation to perform on a current page url function type
 * @member {module:com.ultracart.admin.v2.models/ConversationEngagementEquationFunction.CurrentPageUrlLogicEnum} current_page_url_logic
 */
ConversationEngagementEquationFunction.prototype['current_page_url_logic'] = undefined;

/**
 * @member {String} current_page_url_value
 */
ConversationEngagementEquationFunction.prototype['current_page_url_value'] = undefined;

/**
 * Logic operation to perform on a customer's browsing time function type
 * @member {module:com.ultracart.admin.v2.models/ConversationEngagementEquationFunction.CustomersBrowsingTimeLogicEnum} customers_browsing_time_logic
 */
ConversationEngagementEquationFunction.prototype['customers_browsing_time_logic'] = undefined;

/**
 * @member {Number} customers_browsing_time_seconds
 */
ConversationEngagementEquationFunction.prototype['customers_browsing_time_seconds'] = undefined;

/**
 * @member {String} customers_location_country
 */
ConversationEngagementEquationFunction.prototype['customers_location_country'] = undefined;

/**
 * Logic operation to perform on a customer's location function type
 * @member {module:com.ultracart.admin.v2.models/ConversationEngagementEquationFunction.CustomersLocationLogicEnum} customers_location_logic
 */
ConversationEngagementEquationFunction.prototype['customers_location_logic'] = undefined;

/**
 * @member {String} customers_location_state
 */
ConversationEngagementEquationFunction.prototype['customers_location_state'] = undefined;

/**
 * Logic operation to perform on a customer's browsing time function type
 * @member {module:com.ultracart.admin.v2.models/ConversationEngagementEquationFunction.NumberOfViewedPagesLogicEnum} number_of_viewed_pages_logic
 */
ConversationEngagementEquationFunction.prototype['number_of_viewed_pages_logic'] = undefined;

/**
 * @member {Number} number_of_viewed_pages_value
 */
ConversationEngagementEquationFunction.prototype['number_of_viewed_pages_value'] = undefined;

/**
 * Logic operation to perform on a referring website function type
 * @member {module:com.ultracart.admin.v2.models/ConversationEngagementEquationFunction.ReferringWebsiteLogicEnum} referring_website_logic
 */
ConversationEngagementEquationFunction.prototype['referring_website_logic'] = undefined;

/**
 * @member {String} referring_website_value
 */
ConversationEngagementEquationFunction.prototype['referring_website_value'] = undefined;

/**
 * Type of function
 * @member {module:com.ultracart.admin.v2.models/ConversationEngagementEquationFunction.TypeEnum} type
 */
ConversationEngagementEquationFunction.prototype['type'] = undefined;





/**
 * Allowed values for the <code>any_page_url_logic</code> property.
 * @enum {String}
 * @readonly
 */
ConversationEngagementEquationFunction['AnyPageUrlLogicEnum'] = {

    /**
     * value: "contains"
     * @const
     */
    "contains": "contains",

    /**
     * value: "does not contain"
     * @const
     */
    "does not contain": "does not contain",

    /**
     * value: "is exactly"
     * @const
     */
    "is exactly": "is exactly",

    /**
     * value: "is not"
     * @const
     */
    "is not": "is not"
};


/**
 * Allowed values for the <code>current_page_url_logic</code> property.
 * @enum {String}
 * @readonly
 */
ConversationEngagementEquationFunction['CurrentPageUrlLogicEnum'] = {

    /**
     * value: "contains"
     * @const
     */
    "contains": "contains",

    /**
     * value: "does not contain"
     * @const
     */
    "does not contain": "does not contain",

    /**
     * value: "is exactly"
     * @const
     */
    "is exactly": "is exactly",

    /**
     * value: "is not"
     * @const
     */
    "is not": "is not"
};


/**
 * Allowed values for the <code>customers_browsing_time_logic</code> property.
 * @enum {String}
 * @readonly
 */
ConversationEngagementEquationFunction['CustomersBrowsingTimeLogicEnum'] = {

    /**
     * value: "is at least"
     * @const
     */
    "at least": "is at least",

    /**
     * value: "is more than"
     * @const
     */
    "more than": "is more than",

    /**
     * value: "is less than"
     * @const
     */
    "less than": "is less than",

    /**
     * value: "is at most"
     * @const
     */
    "at most": "is at most"
};


/**
 * Allowed values for the <code>customers_location_logic</code> property.
 * @enum {String}
 * @readonly
 */
ConversationEngagementEquationFunction['CustomersLocationLogicEnum'] = {

    /**
     * value: "is"
     * @const
     */
    "is": "is",

    /**
     * value: "is not"
     * @const
     */
    "is not": "is not"
};


/**
 * Allowed values for the <code>number_of_viewed_pages_logic</code> property.
 * @enum {String}
 * @readonly
 */
ConversationEngagementEquationFunction['NumberOfViewedPagesLogicEnum'] = {

    /**
     * value: "is at least"
     * @const
     */
    "at least": "is at least",

    /**
     * value: "is more than"
     * @const
     */
    "more than": "is more than",

    /**
     * value: "is less than"
     * @const
     */
    "less than": "is less than",

    /**
     * value: "is at most"
     * @const
     */
    "at most": "is at most"
};


/**
 * Allowed values for the <code>referring_website_logic</code> property.
 * @enum {String}
 * @readonly
 */
ConversationEngagementEquationFunction['ReferringWebsiteLogicEnum'] = {

    /**
     * value: "contains"
     * @const
     */
    "contains": "contains",

    /**
     * value: "does not contain"
     * @const
     */
    "does not contain": "does not contain",

    /**
     * value: "is exactly"
     * @const
     */
    "is exactly": "is exactly",

    /**
     * value: "is not"
     * @const
     */
    "is not": "is not"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ConversationEngagementEquationFunction['TypeEnum'] = {

    /**
     * value: "current page url"
     * @const
     */
    "current page url": "current page url",

    /**
     * value: "customers location"
     * @const
     */
    "customers location": "customers location",

    /**
     * value: "customers browsing time"
     * @const
     */
    "customers browsing time": "customers browsing time",

    /**
     * value: "number of viewed pages"
     * @const
     */
    "number of viewed pages": "number of viewed pages",

    /**
     * value: "referring website address"
     * @const
     */
    "referring website address": "referring website address",

    /**
     * value: "any page from session"
     * @const
     */
    "any page from session": "any page from session"
};



export default ConversationEngagementEquationFunction;

