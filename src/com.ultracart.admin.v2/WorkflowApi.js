/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../com.ultracart.admin.v2.models/ErrorResponse';
import WorkflowAgentAuthResponse from '../com.ultracart.admin.v2.models/WorkflowAgentAuthResponse';
import WorkflowAttachmentUploadUrlResponse from '../com.ultracart.admin.v2.models/WorkflowAttachmentUploadUrlResponse';
import WorkflowGroupsResponse from '../com.ultracart.admin.v2.models/WorkflowGroupsResponse';
import WorkflowTask from '../com.ultracart.admin.v2.models/WorkflowTask';
import WorkflowTaskOpenCountResponse from '../com.ultracart.admin.v2.models/WorkflowTaskOpenCountResponse';
import WorkflowTaskResponse from '../com.ultracart.admin.v2.models/WorkflowTaskResponse';
import WorkflowTaskTagsResponse from '../com.ultracart.admin.v2.models/WorkflowTaskTagsResponse';
import WorkflowTasksRequest from '../com.ultracart.admin.v2.models/WorkflowTasksRequest';
import WorkflowTasksResponse from '../com.ultracart.admin.v2.models/WorkflowTasksResponse';
import WorkflowUserResponse from '../com.ultracart.admin.v2.models/WorkflowUserResponse';
import WorkflowUsersResponse from '../com.ultracart.admin.v2.models/WorkflowUsersResponse';

/**
* Workflow service.
* @module com.ultracart.admin.v2/WorkflowApi
* @version 4.1.4
*/
export default class WorkflowApi {

    /**
    * Constructs a new WorkflowApi. 
    * @alias module:com.ultracart.admin.v2/WorkflowApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getWorkflowAgentWebsocketAuthorization operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~getWorkflowAgentWebsocketAuthorizationCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowAgentAuthResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get agent websocket authorization
     * Retrieve a JWT to authorize an agent to make a websocket connection. 
     * @param {module:com.ultracart.admin.v2/WorkflowApi~getWorkflowAgentWebsocketAuthorizationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowAgentAuthResponse}
     */
    getWorkflowAgentWebsocketAuthorization(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowAgentAuthResponse;
      return this.apiClient.callApi(
        '/workflow/agent/auth', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowAssignmentGroups operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~getWorkflowAssignmentGroupsCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowGroupsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of groups that workflow tasks can be assigned to
     * Retrieve a list of groups that workflow tasks can be assigned to 
     * @param {Object} opts Optional parameters
     * @param {Number} opts._limit The maximum number of records to return on this one API call. (Max 200) (default to 100)
     * @param {Number} opts._offset Pagination of the record set.  Offset is a zero based index. (default to 0)
     * @param {module:com.ultracart.admin.v2/WorkflowApi~getWorkflowAssignmentGroupsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowGroupsResponse}
     */
    getWorkflowAssignmentGroups(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '_limit': opts['_limit'],
        '_offset': opts['_offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowGroupsResponse;
      return this.apiClient.callApi(
        '/workflow/assignment_groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowAssignmentUsers operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~getWorkflowAssignmentUsersCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowUsersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of users that workflow tasks can be assigned to
     * Retrieve a list of users that workflow tasks can be assigned to 
     * @param {Object} opts Optional parameters
     * @param {Number} opts._limit The maximum number of records to return on this one API call. (Max 200) (default to 100)
     * @param {Number} opts._offset Pagination of the record set.  Offset is a zero based index. (default to 0)
     * @param {module:com.ultracart.admin.v2/WorkflowApi~getWorkflowAssignmentUsersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowUsersResponse}
     */
    getWorkflowAssignmentUsers(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '_limit': opts['_limit'],
        '_offset': opts['_offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowUsersResponse;
      return this.apiClient.callApi(
        '/workflow/assignment_users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowMe operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~getWorkflowMeCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a user object for myself
     * Retrieve a user object for myself 
     * @param {module:com.ultracart.admin.v2/WorkflowApi~getWorkflowMeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowUserResponse}
     */
    getWorkflowMe(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowUserResponse;
      return this.apiClient.callApi(
        '/workflow/me', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowTask operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTaskCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowTaskResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a workflow task
     * Retrieve a workflow task 
     * @param {String} task_uuid 
     * @param {module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTaskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowTaskResponse}
     */
    getWorkflowTask(task_uuid, callback) {
      let postBody = null;
      // verify the required parameter 'task_uuid' is set
      if (task_uuid === undefined || task_uuid === null) {
        throw new Error("Missing the required parameter 'task_uuid' when calling getWorkflowTask");
      }

      let pathParams = {
        'task_uuid': task_uuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowTaskResponse;
      return this.apiClient.callApi(
        '/workflow/tasks/{task_uuid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowTaskAttachmentUploadUrl operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTaskAttachmentUploadUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowAttachmentUploadUrlResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a presigned workflow task attachment upload URL
     * Get a presigned workflow task attachment upload URL 
     * @param {String} extension 
     * @param {module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTaskAttachmentUploadUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowAttachmentUploadUrlResponse}
     */
    getWorkflowTaskAttachmentUploadUrl(extension, callback) {
      let postBody = null;
      // verify the required parameter 'extension' is set
      if (extension === undefined || extension === null) {
        throw new Error("Missing the required parameter 'extension' when calling getWorkflowTaskAttachmentUploadUrl");
      }

      let pathParams = {
        'extension': extension
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowAttachmentUploadUrlResponse;
      return this.apiClient.callApi(
        '/workflow/tasks/attachments/{extension}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowTaskByObjectType operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTaskByObjectTypeCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowTasksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a workflow task by object type and id
     * Retrieve a workflow task by object type and id 
     * @param {String} object_type 
     * @param {String} object_id 
     * @param {module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTaskByObjectTypeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowTasksResponse}
     */
    getWorkflowTaskByObjectType(object_type, object_id, callback) {
      let postBody = null;
      // verify the required parameter 'object_type' is set
      if (object_type === undefined || object_type === null) {
        throw new Error("Missing the required parameter 'object_type' when calling getWorkflowTaskByObjectType");
      }
      // verify the required parameter 'object_id' is set
      if (object_id === undefined || object_id === null) {
        throw new Error("Missing the required parameter 'object_id' when calling getWorkflowTaskByObjectType");
      }

      let pathParams = {
        'object_type': object_type,
        'object_id': object_id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowTasksResponse;
      return this.apiClient.callApi(
        '/workflow/tasks/by/{object_type}/{object_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowTaskOpenCount operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTaskOpenCountCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowTaskOpenCountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve workflow task open count
     * Retrieve workflow task open count 
     * @param {module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTaskOpenCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowTaskOpenCountResponse}
     */
    getWorkflowTaskOpenCount(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowTaskOpenCountResponse;
      return this.apiClient.callApi(
        '/workflow/tasks/open_count', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowTaskTags operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTaskTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowTaskTagsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of existing workflow task tags
     * Retrieves a unique list of all the existing workflow task tags. 
     * @param {module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTaskTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowTaskTagsResponse}
     */
    getWorkflowTaskTags(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowTaskTagsResponse;
      return this.apiClient.callApi(
        '/workflow/tasks/tags', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowTasks operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTasksCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowTasksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search workflow tasks
     * Retrieves a set of workflow tasks from the account based on a query object. 
     * @param {module:com.ultracart.admin.v2.models/WorkflowTasksRequest} workflow_tasks_query Workflow tasks query
     * @param {Object} opts Optional parameters
     * @param {Number} opts._limit The maximum number of records to return on this one API call. (Default 100, Max 500) (default to 100)
     * @param {Number} opts._offset Pagination of the record set.  Offset is a zero based index. (default to 0)
     * @param {String} opts._sort The sort order of the items.  See Sorting documentation for examples of using multiple values and sorting by ascending and descending.
     * @param {module:com.ultracart.admin.v2/WorkflowApi~getWorkflowTasksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowTasksResponse}
     */
    getWorkflowTasks(workflow_tasks_query, opts, callback) {
      opts = opts || {};
      let postBody = workflow_tasks_query;
      // verify the required parameter 'workflow_tasks_query' is set
      if (workflow_tasks_query === undefined || workflow_tasks_query === null) {
        throw new Error("Missing the required parameter 'workflow_tasks_query' when calling getWorkflowTasks");
      }

      let pathParams = {
      };
      let queryParams = {
        '_limit': opts['_limit'],
        '_offset': opts['_offset'],
        '_sort': opts['_sort']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkflowTasksResponse;
      return this.apiClient.callApi(
        '/workflow/tasks/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the insertWorkflowTask operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~insertWorkflowTaskCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowTaskResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Insert a workflow task
     * Insert a workflow task 
     * @param {module:com.ultracart.admin.v2.models/WorkflowTask} workflow_task workflow task
     * @param {module:com.ultracart.admin.v2/WorkflowApi~insertWorkflowTaskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowTaskResponse}
     */
    insertWorkflowTask(workflow_task, callback) {
      let postBody = workflow_task;
      // verify the required parameter 'workflow_task' is set
      if (workflow_task === undefined || workflow_task === null) {
        throw new Error("Missing the required parameter 'workflow_task' when calling insertWorkflowTask");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkflowTaskResponse;
      return this.apiClient.callApi(
        '/workflow/tasks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateWorkflowTask operation.
     * @callback module:com.ultracart.admin.v2/WorkflowApi~updateWorkflowTaskCallback
     * @param {String} error Error message, if any.
     * @param {module:com.ultracart.admin.v2.models/WorkflowTaskResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a workflow task
     * Update a workflow task 
     * @param {String} task_uuid 
     * @param {module:com.ultracart.admin.v2.models/WorkflowTask} workflow_task Workflow task
     * @param {module:com.ultracart.admin.v2/WorkflowApi~updateWorkflowTaskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.ultracart.admin.v2.models/WorkflowTaskResponse}
     */
    updateWorkflowTask(task_uuid, workflow_task, callback) {
      let postBody = workflow_task;
      // verify the required parameter 'task_uuid' is set
      if (task_uuid === undefined || task_uuid === null) {
        throw new Error("Missing the required parameter 'task_uuid' when calling updateWorkflowTask");
      }
      // verify the required parameter 'workflow_task' is set
      if (workflow_task === undefined || workflow_task === null) {
        throw new Error("Missing the required parameter 'workflow_task' when calling updateWorkflowTask");
      }

      let pathParams = {
        'task_uuid': task_uuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ultraCartOauth', 'ultraCartSimpleApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkflowTaskResponse;
      return this.apiClient.callApi(
        '/workflow/tasks/{task_uuid}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
