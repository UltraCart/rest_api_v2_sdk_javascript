/** Declaration file generated by dts-gen */

export class ApiClient {
    constructor();

    applyAuthToRequest(request: any, authNames: any): void;

    buildCollectionParam(param: any, collectionFormat: any): any;

    buildUrl(path: any, pathParams: any): any;

    callApi(path: any, httpMethod: any, pathParams: any, queryParams: any, headerParams: any, formParams: any, bodyParam: any, authNames: any, contentTypes: any, accepts: any, returnType: any, callback: any): any;

    deserialize(response: any, returnType: any): any;

    isFileParam(param: any): any;

    isJsonMime(contentType: any): any;

    jsonPreferredMime(contentTypes: any): any;

    normalizeParams(params: any): any;

    paramToString(param: any): any;

    static CollectionFormatEnum: {
        CSV: string;
        MULTI: string;
        PIPES: string;
        SSV: string;
        TSV: string;
    };

    static constructFromObject(data: any, obj: any, itemType: any): void;

    static convertToType(data: any, type: any): any;

    static parseDate(str: any): any;

}

export class ApiUserApplicationProfile {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        api_application_logo_url: any;
        application_description: any;
        application_name: any;
        developer_name: any;
        developer_website: any;
    };

}

export class AutoOrder {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        auto_order_code: any;
        auto_order_oid: any;
        cancel_after_next_x_orders: any;
        cancel_downgrade: any;
        cancel_upgrade: any;
        canceled_by_user: any;
        canceled_dts: any;
        credit_card_attempt: any;
        disabled_dts: any;
        enabled: any;
        failure_reason: any;
        items: any;
        next_attempt: any;
        original_order: any;
        original_order_id: any;
        override_affiliate_id: any;
        rebill_orders: any;
        rotating_transaction_gateway_code: any;
    };

}

export class AutoOrderItem {
    constructor();

    static FrequencyEnum: {
        Biweekly: string;
        "Every 10 Days": string;
        "Every 2 Months": string;
        "Every 24 Days": string;
        "Every 28 Days": string;
        "Every 3 Months": string;
        "Every 4 Months": string;
        "Every 45 Days": string;
        "Every 6 Months": string;
        "Every...": string;
        Monthly: string;
        Weekly: string;
        Yearly: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        arbitrary_item_id: any;
        arbitrary_percentage_discount: any;
        arbitrary_quantity: any;
        arbitrary_schedule_days: any;
        arbitrary_unit_cost: any;
        arbitrary_unit_cost_remaining_orders: any;
        auto_order_item_oid: any;
        frequency: any;
        last_order_dts: any;
        life_time_value: any;
        next_preshipment_notice_dts: any;
        next_shipment_dts: any;
        no_order_after_dts: any;
        number_of_rebills: any;
        options: any;
        original_item_id: any;
        original_quantity: any;
        paypal_payer_id: any;
        paypal_recurring_payment_profile_id: any;
        preshipment_notice_sent: any;
        rebill_value: any;
        remaining_repeat_count: any;
    };

}

export class AutoOrderItemOption {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        label: any;
        value: any;
    };

}

export class AutoOrderResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        auto_order: any;
        error: any;
        metadata: any;
        success: any;
    };

}

export class AutoOrdersResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        auto_orders: any;
        error: any;
        metadata: any;
        success: any;
    };

}

export class BaseResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        metadata: any;
        success: any;
    };

}

export class Cart {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        affiliate: any;
        base_currency_code: any;
        billing: any;
        buysafe: any;
        cart_id: any;
        checkout: any;
        coupons: any;
        currency_code: any;
        customer_profile: any;
        exchange_rate: any;
        gift: any;
        gift_certificate: any;
        items: any;
        language_iso_code: any;
        logged_in: any;
        marketing: any;
        merchant_id: any;
        payment: any;
        settings: any;
        shipping: any;
        summary: any;
        taxes: any;
        upsell_after: any;
    };

}

export class CartAffiliate {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        affiliate_id: any;
        affiliate_sub_id: any;
    };

}

export class CartBilling {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        address1: any;
        address2: any;
        cc_emails: any;
        city: any;
        company: any;
        country_code: any;
        day_phone: any;
        email: any;
        email_confirm: any;
        evening_phone: any;
        first_name: any;
        last_name: any;
        postal_code: any;
        state_region: any;
        title: any;
    };

}

export class CartBuysafe {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        bond_available: any;
        bond_cost: any;
        bond_free: any;
        bond_wanted: any;
        cart_display_text: any;
        cart_display_url: any;
    };

}

export class CartCheckout {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        comments: any;
        custom_field1: any;
        custom_field2: any;
        custom_field3: any;
        custom_field4: any;
        custom_field5: any;
        custom_field6: any;
        custom_field7: any;
        ip_address: any;
        screen_branding_theme_code: any;
    };

}

export class CartCoupon {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        coupon_code: any;
    };

}

export class CartCustomerProfile {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        allow_3rd_party_billing: any;
        allow_cod: any;
        allow_purchase_order: any;
        billing_addresses: any;
        credit_cards: any;
        customer_profile_oid: any;
        dhl_account_number: any;
        email: any;
        fedex_account_number: any;
        free_shipping: any;
        free_shipping_minimum: any;
        maximum_item_count: any;
        minimum_item_count: any;
        minimum_subtotal: any;
        no_coupons: any;
        no_free_shipping: any;
        no_realtime_charge: any;
        pricing_tiers: any;
        shipping_addresses: any;
        tax_exempt: any;
        ups_account_number: any;
    };

}

export class CartCustomerProfileAddress {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        address1: any;
        address2: any;
        city: any;
        company: any;
        country_code: any;
        day_phone: any;
        evening_phone: any;
        first_name: any;
        last_name: any;
        oid: any;
        postal_code: any;
        state_region: any;
        tax_county: any;
        title: any;
    };

}

export class CartCustomerProfileCreditCard {
    constructor();

    static CardTypeEnum: {
        AMEX: string;
        "Diners Club": string;
        Discover: string;
        JCB: string;
        MasterCard: string;
        VISA: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        card_expiration_month: any;
        card_expiration_year: any;
        card_number: any;
        card_type: any;
        customer_profile_credit_card_id: any;
        last_used_date: any;
    };

}

export class CartFinalizeOrderRequest {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cart: any;
        options: any;
    };

}

export class CartFinalizeOrderRequestOptions {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        auto_approve_purchase_order: any;
        channel_partner_code: any;
        channel_partner_oid: any;
        channel_partner_order_id: any;
        consider_recurring: any;
        credit_card_authorization_amount: any;
        credit_card_authorization_date: any;
        credit_card_authorization_reference_number: any;
        no_realtime_payment_processing: any;
        setup_next_cart: any;
        skip_payment_processing: any;
        store_completed: any;
        store_if_payment_declines: any;
    };

}

export class CartFinalizeOrderResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        errors: any;
        next_cart: any;
        order: any;
        order_id: any;
        successful: any;
    };

}

export class CartGift {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        gift: any;
        gift_charge: any;
        gift_email: any;
        gift_message: any;
        gift_wrap_cost: any;
        gift_wrap_title: any;
    };

}

export class CartGiftCertificate {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        gift_certificate_amount: any;
        gift_certificate_code: any;
        gift_certificate_remaining_balance_after_order: any;
    };

}

export class CartItem {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        arbitrary_unit_cost: any;
        attributes: any;
        auto_order_schedule: any;
        default_image_url: any;
        default_thumbnail_url: any;
        description: any;
        discount: any;
        extended_description: any;
        item_id: any;
        item_oid: any;
        kit: any;
        kit_component_options: any;
        manufacturer_suggested_retail_price: any;
        maximum_quantity: any;
        minimum_quantity: any;
        multimedia: any;
        options: any;
        phsyical: any;
        position: any;
        preorder: any;
        quantity: any;
        schedules: any;
        total_cost: any;
        total_cost_with_discount: any;
        unit_cost: any;
        unit_cost_with_discount: any;
        upsell: any;
        variations: any;
        view_url: any;
    };

}

export class CartItemAttribute {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        name: any;
        type: any;
        value: any;
    };

}

export class CartItemMultimedia {
    constructor();

    static TypeEnum: {
        Image: string;
        PDF: string;
        Text: string;
        Unknown: string;
        Video: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        code: any;
        description: any;
        exclude_from_gallery: any;
        image_height: any;
        image_width: any;
        is_default: any;
        thumbnails: any;
        type: any;
        url: any;
    };

}

export class CartItemMultimediaThumbnail {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        height: any;
        png: any;
        square: any;
        url: any;
        width: any;
    };

}

export class CartItemOption {
    constructor();

    static TypeEnum: {
        dropdown: string;
        fixed: string;
        hidden: string;
        multiline: string;
        radio: string;
        single: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cost_if_specified: any;
        cost_per_letter: any;
        cost_per_line: any;
        ignore_if_default: any;
        label: any;
        name: any;
        one_time_fee: any;
        option_oid: any;
        required: any;
        selected_value: any;
        type: any;
        values: any;
    };

}

export class CartItemOptionValue {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        additional_cost: any;
        additional_weight: any;
        default_value: any;
        display_order: any;
        value: any;
    };

}

export class CartItemPhysical {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        height: any;
        length: any;
        weight: any;
        width: any;
    };

}

export class CartItemVariationSelection {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        variation_name: any;
        variation_value: any;
    };

}

export class CartKitComponentOption {
    constructor();

    static TypeEnum: {
        dropdown: string;
        fixed: string;
        hidden: string;
        multiline: string;
        radio: string;
        single: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cost_if_specified: any;
        cost_per_letter: any;
        cost_per_line: any;
        ignore_if_default: any;
        item_id: any;
        item_oid: any;
        label: any;
        name: any;
        one_time_fee: any;
        option_oid: any;
        required: any;
        selected_value: any;
        type: any;
        values: any;
    };

}

export class CartMarketing {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        advertising_source: any;
        mailing_list_opt_in: any;
    };

}

export class CartPayment {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        amazon: any;
        check: any;
        credit_card: any;
        payment_method: any;
        purchase_order: any;
        rtg_code: any;
    };

}

export class CartPaymentAmazon {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        amazon_order_reference_id: any;
    };

}

export class CartPaymentCheck {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        check_number: any;
    };

}

export class CartPaymentCreditCard {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        card_expiration_month: any;
        card_expiration_year: any;
        card_number: any;
        card_number_token: any;
        card_type: any;
        card_verification_number: any;
        card_verification_number_token: any;
        customer_profile_credit_card_id: any;
        store_credit_card: any;
    };

}

export class CartPaymentPurchaseOrder {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        purchase_order_number: any;
    };

}

export class CartProfileLoginRequest {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cart: any;
        password: any;
    };

}

export class CartProfileLoginResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cart: any;
        errors: any;
    };

}

export class CartProfileRegisterRequest {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cart: any;
        password: any;
    };

}

export class CartProfileRegisterResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cart: any;
        errors: any;
    };

}

export class CartResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cart: any;
        errors: any;
    };

}

export class CartSettings {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        billing: any;
        gift: any;
        payment: any;
        shipping: any;
        taxes: any;
        terms: any;
    };

}

export class CartSettingsBilling {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        provinces: any;
    };

}

export class CartSettingsGift {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        allow_gifts: any;
        gift_charge: any;
        gift_wraps: any;
        max_message_length: any;
    };

}

export class CartSettingsGiftWrap {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cost: any;
        title: any;
        url: any;
    };

}

export class CartSettingsPayment {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        amazon: any;
        credit_card: any;
        need_payment: any;
        paypal: any;
        supports_amazon: any;
        supports_check: any;
        supports_cod: any;
        supports_credit_card: any;
        supports_money_order: any;
        supports_paypal: any;
        supports_purchase_order: any;
        supports_quote_request: any;
        supports_wire_transfer: any;
    };

}

export class CartSettingsPaymentAmazon {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        amazon_button_url: any;
        amazon_merchant_id: any;
        amazon_widget_url: any;
    };

}

export class CartSettingsPaymentCreditCard {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        collect_credit_card_verification_number: any;
        credit_card_types: any;
        hosted_fields_shopping_cart_token: any;
    };

}

export class CartSettingsPaymentPayPal {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        paypal_button_alt_text: any;
        paypal_button_url: any;
        paypal_credit_button_url: any;
        paypal_credit_legal_image_url: any;
        paypal_credit_legal_url: any;
    };

}

export class CartSettingsProvince {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        code: any;
        province: any;
    };

}

export class CartSettingsShipping {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        deliver_on_date: any;
        estimates: any;
        need_shipping: any;
        provinces: any;
        ship_on_date: any;
    };

}

export class CartSettingsShippingCalendar {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        blackouts: any;
        days_of_week: any;
        earliest: any;
        require: any;
        show: any;
    };

}

export class CartSettingsShippingEstimate {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        allow_3rd_party_billing: any;
        comment: any;
        cost: any;
        cost_before_discount: any;
        default_method: any;
        discount: any;
        discounted: any;
        display_name: any;
        estimated_delivery: any;
        lift_gate_option: any;
        name: any;
        tax: any;
        total_tax: any;
    };

}

export class CartSettingsTaxes {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        counties: any;
    };

}

export class CartSettingsTerms {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        html: any;
        text: any;
    };

}

export class CartShipping {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        address1: any;
        address2: any;
        city: any;
        company: any;
        country_code: any;
        day_phone: any;
        delivery_date: any;
        evening_phone: any;
        first_name: any;
        last_name: any;
        lift_gate: any;
        postal_code: any;
        ship_on_date: any;
        ship_to_residential: any;
        shipping_3rd_party_account_number: any;
        shipping_method: any;
        special_instructions: any;
        state_region: any;
        title: any;
    };

}

export class CartSummary {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        arbitrary_shipping_handling_total: any;
        arbitrary_tax: any;
        arbitrary_tax_rate: any;
        arbitrary_taxable_subtotal: any;
        shipping_handling: any;
        shipping_handling_discount: any;
        shipping_handling_with_discount: any;
        subtotal: any;
        subtotal_discount: any;
        subtotal_with_discount: any;
        surcharge: any;
        tax: any;
        taxable_subtotal: any;
        taxable_subtotal_discount: any;
        taxable_subtotal_with_discount: any;
        total: any;
    };

}

export class CartTaxes {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        county: any;
        exempt: any;
        rate: any;
    };

}

export class CartUpsellAfter {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        finalize_after_dts: any;
        finalize_after_minutes: any;
        upsell_path_code: any;
    };

}

export class CartValidationRequest {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cart: any;
        checks: any;
    };

}

export class CartValidationResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cart: any;
        errors: any;
    };

}

export class ChargebackDispute {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        account_number: any;
        adjustment_request_text: any;
        amount: any;
        auth_code: any;
        case_number: any;
        chargeback_dispute_oid: any;
        chargeback_dts: any;
        currency: any;
        customer_care_notes: any;
        encryption_key: any;
        expiration_dts: any;
        fax_failure_reason: any;
        fax_number: any;
        fax_transaction_id: any;
        icsid: any;
        merchant_account_profile_oid: any;
        order: any;
        order_id: any;
        partial_card_number: any;
        pdf_file_oid: any;
        reason_code: any;
        status: any;
        website_url: any;
    };

}

export class ChargebackDisputeResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        chargeback: any;
        error: any;
        metadata: any;
        success: any;
    };

}

export class ChargebackDisputesResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        chargebacks: any;
        error: any;
        metadata: any;
        success: any;
    };

}

export class CheckoutHandoffRequest {
    constructor();

    static OperationEnum: {
        checkout: string;
        payPal: string;
        payPalCredit: string;
        view: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cart: any;
        error_parameter_name: any;
        error_return_url: any;
        operation: any;
        paypal_maximum_upsell_revenue: any;
        paypal_return_url: any;
        secure_host_name: any;
    };

}

export class CheckoutHandoffResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cart: any;
        errors: any;
        redirect_to_url: any;
    };

}

export class CheckoutSetupBrowserKeyRequest {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        allowed_referrers: any;
    };

}

export class CheckoutSetupBrowserKeyResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        browser_key: any;
    };

}

export class Currency {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        localized: any;
        localized_formatted: any;
        value: any;
    };

}

export class Customer {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        affiliate_oid: any;
        allow_3rd_party_billing: any;
        allow_cod: any;
        allow_purchase_order: any;
        allow_quote_request: any;
        allow_selection_of_address_type: any;
        auto_approve_cod: any;
        auto_approve_purchase_order: any;
        automatic_merchant_notes: any;
        billing: any;
        business_notes: any;
        cards: any;
        customer_profile_oid: any;
        dhl_account_number: any;
        email: any;
        exempt_shipping_handling_charge: any;
        fedex_account_number: any;
        free_shipping: any;
        free_shipping_minimum: any;
        last_modified_by: any;
        last_modified_dts: any;
        maximum_item_count: any;
        minimum_item_count: any;
        minimum_subtotal: any;
        no_coupons: any;
        no_free_shipping: any;
        no_realtime_charge: any;
        password: any;
        pricing_tiers: any;
        qb_class: any;
        qb_code: any;
        referral_source: any;
        sales_rep_code: any;
        send_signup_notification: any;
        shipping: any;
        signup_dts: any;
        suppress_buysafe: any;
        tax_exempt: any;
        tax_id: any;
        terms: any;
        track_separately: any;
        unapproved: any;
        ups_account_number: any;
        website_url: any;
    };

}

export class CustomerBilling {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        address1: any;
        address2: any;
        city: any;
        company: any;
        country_code: any;
        customer_billing_oid: any;
        customer_profile_oid: any;
        day_phone: any;
        default_billing: any;
        evening_phone: any;
        first_name: any;
        last_name: any;
        last_used_dts: any;
        postal_code: any;
        state_region: any;
        tax_county: any;
        title: any;
    };

}

export class CustomerCard {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        card_expiration_month: any;
        card_expiration_year: any;
        card_number: any;
        card_number_token: any;
        card_type: any;
        customer_profile_credit_card_id: any;
        customer_profile_oid: any;
    };

}

export class CustomerPricingTier {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        name: any;
        pricing_tier_oid: any;
    };

}

export class CustomerResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        customer: any;
        error: any;
        metadata: any;
        success: any;
    };

}

export class CustomerShipping {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        address1: any;
        address2: any;
        city: any;
        company: any;
        country_code: any;
        customer_profile_oid: any;
        customer_shipping_oid: any;
        day_phone: any;
        default_shipping: any;
        evening_phone: any;
        first_name: any;
        last_name: any;
        last_used_dts: any;
        postal_code: any;
        state_region: any;
        tax_county: any;
        title: any;
    };

}

export class CustomersResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        customers: any;
        error: any;
        metadata: any;
        success: any;
    };

}

export class Distance {
    constructor();

    static UomEnum: {
        CM: string;
        IN: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        uom: any;
        value: any;
    };

}

export class DistributionCenter {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        address1: any;
        address2: any;
        city: any;
        code: any;
        country_code: any;
        default_center: any;
        default_handles_all_items: any;
        distribution_center_oid: any;
        duns: any;
        estimate_from_distribution_center_oid: any;
        ftp_password: any;
        hold_before_shipment_minutes: any;
        hold_before_transmission: any;
        latitude: any;
        longitude: any;
        name: any;
        no_customer_direct_shipments: any;
        no_split_shipment: any;
        postal_code: any;
        process_days: any;
        process_inventory_start_time: any;
        process_inventory_stop_time: any;
        require_asn: any;
        send_kit_instead_of_components: any;
        shipment_cutoff_time_friday: any;
        shipment_cutoff_time_monday: any;
        shipment_cutoff_time_saturday: any;
        shipment_cutoff_time_sunday: any;
        shipment_cutoff_time_thursday: any;
        shipment_cutoff_time_tuesday: any;
        shipment_cutoff_time_wednesday: any;
        state: any;
        transport: any;
    };

}

export class DistributionCentersResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        distribution_centers: any;
        error: any;
        metadata: any;
        success: any;
    };

}

export class Error {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        developer_message: any;
        error_code: any;
        more_info: any;
        user_message: any;
    };

}

export class ErrorResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        metadata: any;
        success: any;
    };

}

export class FulfillmentInventory {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        itemId: any;
        quantity: any;
    };

}

export class FulfillmentShipment {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        order_id: any;
        tracking_numbers: any;
    };

}

export class HTTPHeader {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        name: any;
        value: any;
    };

}

export class Item {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        accounting: any;
        amember: any;
        auto_order: any;
        ccbill: any;
        channelPartnerMappings: any;
        chargeback: any;
        checkout: any;
        content: any;
        creation_dts: any;
        description: any;
        description_translated_text_instance_oid: any;
        digital_delivery: any;
        ebay: any;
        email_notifications: any;
        enrollment123: any;
        gift_certificate: any;
        google_product_search: any;
        identifiers: any;
        inactive: any;
        instant_payment_notifications: any;
        internal: any;
        kit: any;
        kit_definition: any;
        last_modified_dts: any;
        merchant_id: any;
        merchant_item_id: any;
        merchant_item_oid: any;
        options: any;
        parent_category_id: any;
        payment_processing: any;
        physical: any;
        pricing: any;
        realtime_pricing: any;
        related: any;
        reporting: any;
        restriction: any;
        revguard: any;
        reviews: any;
        salesforce: any;
        shipping: any;
        tax: any;
        third_party_email_marketing: any;
        variant_items: any;
        variations: any;
        wishlist_member: any;
    };

}

export class ItemAccounting {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        accounting_code: any;
        qb_class: any;
    };

}

export class ItemAmember {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        amember_payment_duration_days: any;
        amember_product_id: any;
    };

}

export class ItemAutoOrder {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        auth_future_amount: any;
        auth_test_amount: any;
        auto_order_cancel_item_id: any;
        auto_order_cancel_item_oid: any;
        auto_order_downgrade_items: any;
        auto_order_paused: any;
        auto_order_schedules: any;
        auto_order_upgrade_items: any;
        auto_order_upsell: any;
        auto_order_upsell_no_easy_cancel: any;
        auto_order_upsell_one_per_customer: any;
        auto_orderable: any;
        cancel_other_auto_orders: any;
        free_shipping_auto_order: any;
        steps: any;
    };

}

export class ItemAutoOrderStep {
    constructor();

    static TypeEnum: {
        item: string;
        pause: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        arbitrary_schedule_days: any;
        arbitrary_unit_cost: any;
        arbitrary_unit_cost_schedules: any;
        grandfather_pricing: any;
        managed_by: any;
        pause_days: any;
        pause_until_date: any;
        preshipment_notice_days: any;
        recurring_merchant_item_id: any;
        recurring_merchant_item_oid: any;
        repeat_count: any;
        schedule: any;
        subscribe_email_list_name: any;
        subscribe_email_list_oid: any;
        type: any;
    };

}

export class ItemAutoOrderStepArbitraryUnitCostSchedule {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        arbitrary_unit_cost: any;
        retry_days: any;
    };

}

export class ItemAutoOrderStepGrandfatherPricing {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        on_or_before_date: any;
        unit_cost: any;
    };

}

export class ItemCCBill {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        ccbill_allowed_currencies: any;
        ccbill_allowed_types: any;
        ccbill_currency_code: any;
        ccbill_form_name: any;
        ccbill_subaccount_id: any;
        ccbill_subscription_type_id: any;
    };

}

export class ItemChannelPartnerMapping {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        barcode_ua: any;
        barcode_uc: any;
        barcode_ui: any;
        barcode_uk: any;
        buyer_dpci: any;
        buyer_item_number: any;
        channel_partner_code: any;
        channel_partner_oid: any;
        from_item_id: any;
        from_sku: any;
        mutually_defined_number: any;
        quantity_ratio_cp: any;
        quantity_ratio_uc: any;
        sku: any;
        unit_of_measure: any;
        vendor_number: any;
        vendor_style_number: any;
    };

}

export class ItemChargeback {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        addendums: any;
        adjustment_requests: any;
    };

}

export class ItemChargebackAddendum {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        chargeback_addendum_oid: any;
        description: any;
        file_size: any;
        pages: any;
    };

}

export class ItemChargebackAdjustmentRequest {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        chargeback_adjustment_request_oid: any;
        description: any;
        reason_code: any;
    };

}

export class ItemCheckout {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        suppress_buysafe: any;
        terms: any;
        terms_translated_text_instance_oid: any;
    };

}

export class ItemContent {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        assignments: any;
        attributes: any;
        exclude_from_search: any;
        exclude_from_top_sellers: any;
        extended_description: any;
        extended_description_translated_text_instance_oid: any;
        multimedia: any;
        new_item: any;
        new_item_end: any;
        new_item_start: any;
        view_url: any;
    };

}

export class ItemContentAssignment {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        group_oid: any;
        group_path: any;
        host: any;
        sort_order: any;
        url_part: any;
    };

}

export class ItemContentAttribute {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        name: any;
        translated_text_instance_oid: any;
        type: any;
        value: any;
    };

}

export class ItemContentMultimedia {
    constructor();

    static TypeEnum: {
        Image: string;
        PDF: string;
        Text: string;
        Unknown: string;
        Video: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cloud_url: any;
        cloud_url_expiration: any;
        code: any;
        description: any;
        exclude_from_gallery: any;
        file_name: any;
        height: any;
        merchant_item_multimedia_oid: any;
        orphan: any;
        placeholder: any;
        temp_multimedia_oid: any;
        thumbnails: any;
        type: any;
        url: any;
        width: any;
    };

}

export class ItemContentMultimediaThumbnail {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        height: any;
        http_url: any;
        https_url: any;
        png_format: any;
        square: any;
        width: any;
    };

}

export class ItemDigitalDelivery {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        activation_code_description: any;
        activation_code_low_warning: any;
        activation_code_realtime_url: any;
        activation_code_shared_secret: any;
        activation_code_type: any;
        digital_items: any;
    };

}

export class ItemDigitalItem {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        creation_dts: any;
        description: any;
        file_size: any;
        mime_type: any;
        original_filename: any;
    };

}

export class ItemEbay {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        active: any;
        category_id: any;
        category_specifics: any;
        condition_description: any;
        condition_id: any;
        consecutive_failures: any;
        custom_category1: any;
        custom_category2: any;
        dispatch_time_max: any;
        domestic_1_additional_cost: any;
        domestic_1_first_cost: any;
        domestic_2_additional_cost: any;
        domestic_2_first_cost: any;
        domestic_3_additional_cost: any;
        domestic_3_first_cost: any;
        domestic_4_additional_cost: any;
        domestic_4_first_cost: any;
        ebay_auction_id: any;
        ebay_specific_inventory: any;
        ebay_template_name: any;
        ebay_template_oid: any;
        end_time: any;
        free_shipping: any;
        free_shipping_method: any;
        international_1_additional_cost: any;
        international_1_first_cost: any;
        international_2_additional_cost: any;
        international_2_first_cost: any;
        international_3_additional_cost: any;
        international_3_first_cost: any;
        international_4_additional_cost: any;
        international_4_first_cost: any;
        last_status_dts: any;
        listed_dispatch_time_max: any;
        listed_ebay_template_oid: any;
        listing_dts: any;
        listing_duration: any;
        listing_price: any;
        listing_price_override: any;
        listing_type: any;
        marketplace_analysis: any;
        marketplace_analysis_perform: any;
        marketplace_final_value_fee_percentage: any;
        marketplace_last_check_dts: any;
        marketplace_lowest: any;
        marketplace_map_violation: any;
        marketplace_multiplier: any;
        marketplace_other_price: any;
        marketplace_other_seller: any;
        marketplace_other_shipping: any;
        marketplace_other_total: any;
        marketplace_our_additional_profit_potential: any;
        marketplace_our_price: any;
        marketplace_our_profit: any;
        marketplace_our_shipping: any;
        marketplace_our_total: any;
        marketplace_overhead: any;
        marketplace_profitable: any;
        next_attempt_dts: any;
        next_listing_duration: any;
        no_promotional_shipping: any;
        packaging_handling_costs: any;
        previous_ebay_auction_id: any;
        quantity: any;
        reserve_price: any;
        send_dimensions_and_weight: any;
        start_time: any;
        status: any;
        target_dispatch_time_max: any;
    };

}

export class ItemEbayCategorySpecific {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        name: any;
        value: any;
    };

}

export class ItemEbayMarketListing {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        auction_id: any;
        price: any;
        seller: any;
        shipping: any;
        total: any;
    };

}

export class ItemEbayMarketPlaceAnalysis {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        adjusted_price: any;
        adjusted_shipping: any;
        adjusted_total: any;
        cogs: any;
        final_value_fee: any;
        minimum_advertised_price: any;
        other_listings: any;
        our_listing: any;
        overhead: any;
        profit_potential: any;
    };

}

export class ItemEmailNotifications {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        skip_receipt: any;
        skip_shipment_notification: any;
    };

}

export class ItemEnrollment123 {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        enrollment123_product_code: any;
    };

}

export class ItemGiftCertificate {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        gift_certificate: any;
        gift_certificate_expiration_days: any;
    };

}

export class ItemGoogleProductSearch {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        adwords_grouping: any;
        adwords_label1: any;
        adwords_label2: any;
        adwords_label3: any;
        adwords_label4: any;
        adwords_label5: any;
        age_group: any;
        available_at_physical_store: any;
        book_author: any;
        book_format: any;
        book_isbn: any;
        book_publisher: any;
        category_description: any;
        color: any;
        condition: any;
        custom_label0: any;
        custom_label1: any;
        custom_label2: any;
        custom_label3: any;
        custom_label4: any;
        gender: any;
        google_product_category: any;
        music_artist: any;
        music_format: any;
        music_release_date: any;
        omit_from_feed: any;
        product_type: any;
        promotion_id1: any;
        promotion_id10: any;
        promotion_id2: any;
        promotion_id3: any;
        promotion_id4: any;
        promotion_id5: any;
        promotion_id6: any;
        promotion_id7: any;
        promotion_id8: any;
        promotion_id9: any;
        search_dts: any;
        search_lowest_price: any;
        search_lowest_url: any;
        search_position: any;
        size: any;
        video_director: any;
        video_format: any;
        video_rating: any;
        video_release_date: any;
        video_starring: any;
    };

}

export class ItemIdentifiers {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        barcode: any;
        manufacturer_name: any;
        manufacturer_sku: any;
        unspsc: any;
    };

}

export class ItemInstantPaymentNotification {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        post_operation: any;
        successful_response_text: any;
        url: any;
    };

}

export class ItemInstantPaymentNotifications {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        notifications: any;
    };

}

export class ItemInternal {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        memo: any;
    };

}

export class ItemKitComponent {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        component_cost: any;
        component_description: any;
        component_merchant_item_id: any;
        component_merchant_item_oid: any;
        quantity: any;
    };

}

export class ItemKitDefinition {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        components: any;
    };

}

export class ItemOption {
    constructor();

    static TypeEnum: {
        dropdown: string;
        "file attachment": string;
        fixed: string;
        hidden: string;
        multiline: string;
        radio: string;
        single: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cost_if_specified: any;
        cost_per_letter: any;
        cost_per_line: any;
        ignore_if_default: any;
        label: any;
        label_translated_text_instance_oid: any;
        name: any;
        name_translated_text_instance_oid: any;
        one_time_fee: any;
        option_oid: any;
        required: any;
        system_option: any;
        type: any;
        values: any;
    };

}

export class ItemOptionValue {
    constructor();

    static AdditionalDimensionApplicationEnum: {
        "add item": string;
        none: string;
        "set item to": string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        additional_dimension_application: any;
        additional_items: any;
        cost_change: any;
        default_value: any;
        digital_items: any;
        height: any;
        length: any;
        merchant_item_multimedia_oid: any;
        option_value_oid: any;
        percent_cost_change: any;
        translated_text_instance_oid: any;
        value: any;
        weight_change: any;
        weight_change_percent: any;
        width: any;
    };

}

export class ItemOptionValueAdditionalItem {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        additional_merchant_item_id: any;
        additional_merchant_item_oid: any;
    };

}

export class ItemOptionValueDigitalItem {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        digital_item_oid: any;
        original_filename: any;
    };

}

export class ItemPaymentProcessing {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        block_prepaid: any;
        credit_card_transaction_type: any;
        no_realtime_charge: any;
        payment_method_validity: any;
        rotating_transaction_gateway_codes: any;
    };

}

export class ItemPhysical {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        height: any;
        length: any;
        weight: any;
        width: any;
    };

}

export class ItemPricing {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        allow_arbitrary_cost: any;
        arbitrary_cost_velocity_code: any;
        automatic_pricing_tier_name: any;
        automatic_pricing_tier_oid: any;
        cogs: any;
        cost: any;
        currency_code: any;
        manufacturer_suggested_retail_price: any;
        maximum_arbitrary_cost: any;
        minimum_advertised_price: any;
        minimum_arbitrary_cost: any;
        mix_and_match_group: any;
        mix_and_match_group_oid: any;
        sale_cost: any;
        sale_end: any;
        sale_start: any;
        tiers: any;
    };

}

export class ItemPricingTier {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        default_tier: any;
        discounts: any;
        limit: any;
        name: any;
        pricing_tier_oid: any;
    };

}

export class ItemPricingTierDiscount {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cost: any;
        quantity: any;
    };

}

export class ItemPricingTierLimit {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cumulative_order_limit: any;
        individual_order_limit: any;
        multiple_quantity: any;
    };

}

export class ItemRealtimePricing {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        realtime_pricing_parameter: any;
        realtime_pricing_provider: any;
        realtime_pricing_provider_oid: any;
    };

}

export class ItemRelated {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        no_system_calculated_related_items: any;
        not_relatable: any;
        related_items: any;
    };

}

export class ItemRelatedItem {
    constructor();

    static TypeEnum: {
        System: string;
        UserDefined: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        related_merchant_item_id: any;
        related_merchant_item_oid: any;
        type: any;
    };

}

export class ItemReporting {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        report_as_upsell: any;
        report_pickable_quantities: any;
    };

}

export class ItemResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        item: any;
        metadata: any;
        success: any;
    };

}

export class ItemRestriction {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        exclude_coupon: any;
        exclude_from_free_promotion: any;
        items: any;
        maximum_quantity: any;
        minimum_quantity: any;
        multiple_quantity: any;
        one_per_customer: any;
        purchase_separately: any;
    };

}

export class ItemRestrictionItem {
    constructor();

    static TypeEnum: {
        "can not be purchased with": string;
        "can only be purchased with": string;
        "must be purchased with": string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        restrict_merchant_item_id: any;
        restrict_merchant_item_oid: any;
        type: any;
    };

}

export class ItemRevguard {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        revguard_canceled_csr_prompt_group: any;
        revguard_canceled_ivr_prompt_group: any;
        revguard_canceled_web_prompt_group: any;
        revguard_client_brand: any;
        revguard_csr_prompt_group: any;
        revguard_ivr_prompt_group: any;
        revguard_web_prompt_group: any;
    };

}

export class ItemReviews {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        has_approved_review: any;
        has_review: any;
        review_count: any;
        review_overall: any;
        review_template_name: any;
        review_template_oid: any;
        reviewable: any;
    };

}

export class ItemSalesforce {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        sfdc_pricebook_id: any;
        sfdc_product_id: any;
    };

}

export class ItemShipping {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        allow_back_order: any;
        amazon_fba: any;
        case_inner_packs: any;
        case_units: any;
        cases: any;
        country_code_of_origin: any;
        customs_description: any;
        customs_value: any;
        delivery_on_friday: any;
        delivery_on_monday: any;
        delivery_on_saturday: any;
        delivery_on_sunday: any;
        delivery_on_thursday: any;
        delivery_on_tuesday: any;
        delivery_on_wednesday: any;
        destination_markups: any;
        destination_restrictions: any;
        distribution_centers: any;
        eta: any;
        free_shipping: any;
        freight_class: any;
        hazmat: any;
        made_to_order: any;
        made_to_order_lead_time: any;
        max_days_time_in_transit: any;
        methods: any;
        no_shipping_discount: any;
        package_requirements: any;
        perishable_class_name: any;
        perishable_class_oid: any;
        preorder: any;
        require_delivery_date: any;
        restrict_shipment_on_friday: any;
        restrict_shipment_on_monday: any;
        restrict_shipment_on_saturday: any;
        restrict_shipment_on_sunday: any;
        restrict_shipment_on_thursday: any;
        restrict_shipment_on_tuesday: any;
        restrict_shipment_on_wednesday: any;
        ship_separately: any;
        ship_separately_additional_weight: any;
        ship_separately_height: any;
        ship_separately_length: any;
        ship_separately_package_special_type: any;
        ship_separately_width: any;
        special_product_type: any;
        track_inventory: any;
    };

}

export class ItemShippingCase {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        case_label: any;
        case_merchant_item_id: any;
        case_merchant_item_oid: any;
        quantity: any;
    };

}

export class ItemShippingDestinationMarkup {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        country_code: any;
        flat_fee: any;
        per_item: any;
        postal_code: any;
        shipping_method: any;
        state: any;
    };

}

export class ItemShippingDestinationRestriction {
    constructor();

    static ValidityEnum: {
        "invalid for": string;
        "valid only for": string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        country_code: any;
        state: any;
        validity: any;
    };

}

export class ItemShippingDistributionCenter {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        allocated_to_placed_orders: any;
        allocated_to_shopping_carts: any;
        available_to_allocate: any;
        desired_inventory_level: any;
        distribution_center_code: any;
        distribution_center_oid: any;
        eta: any;
        handles: any;
        inventory_level: any;
        maximum_backorder: any;
        reorder_inventory_level: any;
        sku: any;
        stock_picking_location: any;
    };

}

export class ItemShippingMethod {
    constructor();

    static ShippingMethodValidityEnum: {
        "invalid for": string;
        "valid for": string;
        "valid only for": string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        cost: any;
        each_additional_item_markup: any;
        filter_to_if_available: any;
        first_item_markup: any;
        fixed_shipping_cost: any;
        flat_fee_markup: any;
        free_shipping: any;
        per_item_fee_markup: any;
        percentage_markup: any;
        percentage_of_item_markup: any;
        relax_restrictions_on_upsell: any;
        shipping_method: any;
        shipping_method_oid: any;
        shipping_method_validity: any;
        signature_required: any;
    };

}

export class ItemShippingPackageRequirement {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        package_name: any;
        package_oid: any;
    };

}

export class ItemTax {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        exemptions: any;
        tax_free: any;
        taxable_cost: any;
    };

}

export class ItemTaxExemption {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        city: any;
        country_code: any;
        county: any;
        postal_code: any;
        state_code: any;
    };

}

export class ItemThirdPartyEmailMarketing {
    constructor();

    static ProviderNameEnum: {
        AWeber: string;
        ActiveCampaign: string;
        "Campaign Monitor": string;
        ConstantContact: string;
        Emma: string;
        GetResponse: string;
        Klaviyo: string;
        Lyris: string;
        LyrisHQ: string;
        MailChimp: string;
        SilverPop: string;
        iContact: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        add_tags: any;
        provider_name: any;
        remove_tags: any;
        subscribe_lists: any;
        unsubscribe_lists: any;
    };

}

export class ItemVariantItem {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        description: any;
        merchant_item_multimedia_oid: any;
        variant_merchant_item_id: any;
        variant_merchant_item_oid: any;
        variation_options: any;
        variations: any;
    };

}

export class ItemVariation {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        default_text: any;
        default_text_translated_text_instance_oid: any;
        name: any;
        name_translated_text_instance_oid: any;
        options: any;
    };

}

export class ItemVariationOption {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        default_option: any;
        merchant_item_multimedia_oid: any;
        translated_text_instance_oid: any;
        value: any;
    };

}

export class ItemWishlistMember {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        wishlist_member_instance_description: any;
        wishlist_member_instance_oid: any;
        wishlist_member_sku: any;
    };

}

export class ItemsResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        items: any;
        metadata: any;
        success: any;
    };

}

export class OauthRevokeSuccessResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        message: any;
        successful: any;
    };

}

export class OauthTokenResponse {
    constructor();

    static TokenTypeEnum: {
        bearer: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        access_token: any;
        error: any;
        error_description: any;
        error_uri: any;
        expires_in: any;
        refresh_token: any;
        scope: any;
        token_type: any;
    };

}

export class Order {
    constructor();

    static CurrentStageEnum: {
        "Accounts Receivable": string;
        "Completed Order": string;
        "Fraud Review": string;
        "Least Cost Routing": string;
        "Pending Clearance": string;
        "Quote Request": string;
        "Quote Sent": string;
        Rejected: string;
        "Shipping Department": string;
        Unknown: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        affiliates: any;
        auto_order: any;
        billing: any;
        buysafe: any;
        channel_partner: any;
        checkout: any;
        coupons: any;
        creation_dts: any;
        currency_code: any;
        current_stage: any;
        customer_profile: any;
        digital_order: any;
        edi: any;
        exchange_rate: any;
        fraud_score: any;
        gift: any;
        gift_certificate: any;
        internal: any;
        items: any;
        language_iso_code: any;
        linked_shipment: any;
        marketing: any;
        merchant_id: any;
        order_id: any;
        payment: any;
        quote: any;
        refund_dts: any;
        reject_dts: any;
        salesforce: any;
        shipping: any;
        summary: any;
        taxes: any;
    };

}

export class OrderAffiliate {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        affiliate_oid: any;
        ledger_entries: any;
        sub_id: any;
    };

}

export class OrderAffiliateLedger {
    constructor();

    static TransactionStateEnum: {
        Approved: string;
        Paid: string;
        "Partially Paid": string;
        Pending: string;
        Posted: string;
        Rejected: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        assigned_by_user: any;
        item_id: any;
        tier_number: any;
        transaction_amount: any;
        transaction_amount_paid: any;
        transaction_dts: any;
        transaction_memo: any;
        transaction_percentage: any;
        transaction_state: any;
    };

}

export class OrderAutoOrder {
    constructor();

    static StatusEnum: {
        active: string;
        canceled: string;
        disabled: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        auto_order_code: any;
        original_order_id: any;
        status: any;
    };

}

export class OrderBilling {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        address1: any;
        address2: any;
        cc_emails: any;
        city: any;
        company: any;
        country_code: any;
        day_phone: any;
        email: any;
        evening_phone: any;
        first_name: any;
        last_name: any;
        postal_code: any;
        state_region: any;
        title: any;
    };

}

export class OrderBuysafe {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        buysafe_bond_available: any;
        buysafe_bond_cost: any;
        buysafe_bond_free: any;
        buysafe_bond_refunded: any;
        buysafe_bond_wanted: any;
        buysafe_shopping_cart_id: any;
    };

}

export class OrderChannelPartner {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        channel_partner_code: any;
        channel_partner_data: any;
        channel_partner_oid: any;
        channel_partner_order_id: any;
    };

}

export class OrderCheckout {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        comments: any;
        custom_field1: any;
        custom_field2: any;
        custom_field3: any;
        custom_field4: any;
        custom_field5: any;
        custom_field6: any;
        custom_field7: any;
        customer_ip_address: any;
        screen_branding_theme_code: any;
        storefront_host_name: any;
        upsell_path_code: any;
    };

}

export class OrderCoupon {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        accounting_code: any;
        base_coupon_code: any;
        coupon_code: any;
    };

}

export class OrderDigitalItem {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        file_size: any;
        last_download: any;
        last_download_ip_address: any;
        original_filename: any;
        product_code: any;
        product_description: any;
        remaining_downloads: any;
        url: any;
    };

}

export class OrderDigitalOrder {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        creation_dts: any;
        expiration_dts: any;
        items: any;
        url: any;
        url_id: any;
    };

}

export class OrderEdi {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        bill_to_edi_code: any;
        edi_department: any;
        edi_internal_vendor_number: any;
        ship_to_edi_code: any;
    };

}

export class OrderFraudScore {
    constructor();

    static BinMatchEnum: {
        NA: string;
        No: string;
        NotFound: string;
        Yes: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        anonymous_proxy: any;
        bin_match: any;
        carder_email: any;
        country_code: any;
        country_match: any;
        customer_phone_in_billing_location: any;
        distance_km: any;
        free_email: any;
        high_risk_country: any;
        ip_city: any;
        ip_isp: any;
        ip_latitude: any;
        ip_longitude: any;
        ip_org: any;
        ip_region: any;
        proxy_score: any;
        score: any;
        ship_forwarder: any;
        spam_score: any;
        transparent_proxy: any;
    };

}

export class OrderGift {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        gift: any;
        gift_charge: any;
        gift_charge_accounting_code: any;
        gift_charge_refunded: any;
        gift_email: any;
        gift_message: any;
        gift_wrap_accounting_code: any;
        gift_wrap_cost: any;
        gift_wrap_refunded: any;
        gift_wrap_title: any;
    };

}

export class OrderGiftCertificate {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        gift_certificate_amount: any;
        gift_certificate_code: any;
        gift_certificate_oid: any;
    };

}

export class OrderInternal {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        exported_to_accounting: any;
        merchant_notes: any;
        placed_by_user: any;
        refund_by_user: any;
        sales_rep_code: any;
    };

}

export class OrderItem {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        accounting_code: any;
        activation_codes: any;
        barcode: any;
        channel_partner_item_id: any;
        cogs: any;
        component_unit_value: any;
        cost: any;
        country_code_of_origin: any;
        customs_description: any;
        description: any;
        discount: any;
        discount_quantity: any;
        discount_shipping_weight: any;
        distribution_center_code: any;
        edi: any;
        exclude_coupon: any;
        free_shipping: any;
        hazmat: any;
        height: any;
        item_reference_oid: any;
        kit: any;
        kit_component: any;
        length: any;
        manufacturer_sku: any;
        max_days_time_in_transit: any;
        merchant_item_id: any;
        mix_and_match_group_name: any;
        mix_and_match_group_oid: any;
        no_shipping_discount: any;
        options: any;
        packed_by_user: any;
        perishable_class: any;
        pricing_tier_name: any;
        quantity: any;
        quantity_refunded: any;
        quickbooks_class: any;
        ship_separately: any;
        shipped_by_user: any;
        shipped_dts: any;
        special_product_type: any;
        tax_free: any;
        taxable_cost: any;
        total_cost_with_discount: any;
        total_refunded: any;
        transmitted_to_distribution_center_dts: any;
        unit_cost_with_discount: any;
        upsell: any;
        weight: any;
        width: any;
    };

}

export class OrderItemEdi {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        identifications: any;
        lots: any;
    };

}

export class OrderItemEdiIdentification {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        identification: any;
        quantity: any;
    };

}

export class OrderItemEdiLot {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        lot_expiration: any;
        lot_number: any;
        lot_quantity: any;
    };

}

export class OrderItemOption {
    constructor();

    static AdditionalDimensionApplicationEnum: {
        "add item": string;
        none: string;
        "set item to": string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        additional_dimension_application: any;
        cost_change: any;
        file_attachment: any;
        height: any;
        hidden: any;
        label: any;
        length: any;
        one_time_fee: any;
        value: any;
        weight_change: any;
        width: any;
    };

}

export class OrderItemOptionFileAttachment {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        expiration_dts: any;
        file_name: any;
        mime_type: any;
        size: any;
    };

}

export class OrderLinkedShipment {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        has_linked_shipment: any;
        linked_shipment: any;
        linked_shipment_channel_partner_order_ids: any;
        linked_shipment_order_ids: any;
        linked_shipment_to_order_id: any;
    };

}

export class OrderMarketing {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        advertising_source: any;
        mailing_list: any;
        referral_code: any;
    };

}

export class OrderPayment {
    constructor();

    static PaymentMethodEnum: {
        Affirm: string;
        Amazon: string;
        "Amazon SC": string;
        COD: string;
        Cash: string;
        Check: string;
        Coinbase: string;
        "Credit Card": string;
        "Money Order": string;
        PayPal: string;
        "Purchase Order": string;
        "Quote Request": string;
        Unknown: string;
        "Wire Transfer": string;
        eCheck: string;
    };

    static PaymentStatusEnum: {
        Authorized: string;
        "Capture Failed": string;
        Declined: string;
        Processed: string;
        Refunded: string;
        Skipped: string;
        Unprocessed: string;
        Voided: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        check: any;
        credit_card: any;
        echeck: any;
        hold_for_fraud_review: any;
        payment_dts: any;
        payment_method: any;
        payment_method_accounting_code: any;
        payment_method_deposit_to_account: any;
        payment_status: any;
        purchase_order: any;
        rotating_transaction_gateway_code: any;
        surcharge: any;
        surcharge_accounting_code: any;
        surcharge_transaction_fee: any;
        surcharge_transaction_percentage: any;
        test_order: any;
        transactions: any;
    };

}

export class OrderPaymentCheck {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        check_number: any;
    };

}

export class OrderPaymentCreditCard {
    constructor();

    static CardTypeEnum: {
        AMEX: string;
        "Diners Club": string;
        Discover: string;
        JCB: string;
        MasterCard: string;
        VISA: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        card_auth_ticket: any;
        card_authorization_amount: any;
        card_authorization_dts: any;
        card_authorization_reference_number: any;
        card_expiration_month: any;
        card_expiration_year: any;
        card_number: any;
        card_number_token: any;
        card_number_truncated: any;
        card_type: any;
    };

}

export class OrderPaymentECheck {
    constructor();

    static BankAccountTypeEnum: {
        Checking: string;
        Savings: string;
    };

    static BankOwnerTypeEnum: {
        Business: string;
        Personal: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        bank_aba_code: any;
        bank_account_name: any;
        bank_account_number: any;
        bank_account_type: any;
        bank_name: any;
        bank_owner_type: any;
        customer_tax_id: any;
        drivers_license_dob: any;
        drivers_license_number: any;
        drivers_license_state: any;
    };

}

export class OrderPaymentPurchaseOrder {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        purchase_order_number: any;
    };

}

export class OrderPaymentTransaction {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        details: any;
        successful: any;
        transaction_gateway: any;
        transaction_timestamp: any;
    };

}

export class OrderPaymentTransactionDetail {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        name: any;
        type: any;
        value: any;
    };

}

export class OrderQuote {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        quote_expiration_dts: any;
        quoted_by: any;
        quoted_dts: any;
    };

}

export class OrderResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        metadata: any;
        order: any;
        success: any;
    };

}

export class OrderSalesforce {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        salesforce_opportunity_id: any;
    };

}

export class OrderShipping {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        address1: any;
        address2: any;
        city: any;
        company: any;
        country_code: any;
        day_phone: any;
        delivery_date: any;
        evening_phone: any;
        first_name: any;
        last_name: any;
        lift_gate: any;
        postal_code: any;
        rma: any;
        ship_on_date: any;
        ship_to_residential: any;
        shipping_3rd_party_account_number: any;
        shipping_date: any;
        shipping_department_status: any;
        shipping_method: any;
        shipping_method_accounting_code: any;
        special_instructions: any;
        state_region: any;
        title: any;
        tracking_numbers: any;
        weight: any;
    };

}

export class OrderSummary {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        other_refunded: any;
        shipping_handling_refunded: any;
        shipping_handling_total: any;
        shipping_handling_total_discount: any;
        subtotal: any;
        subtotal_discount: any;
        subtotal_discount_refunded: any;
        subtotal_refunded: any;
        tax: any;
        tax_refunded: any;
        taxable_subtotal: any;
        taxable_subtotal_discount: any;
        total: any;
        total_refunded: any;
    };

}

export class OrderTaxes {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        tax_city_accounting_code: any;
        tax_country_accounting_code: any;
        tax_county: any;
        tax_county_accounting_code: any;
        tax_postal_code_accounting_code: any;
        tax_rate: any;
        tax_rate_city: any;
        tax_rate_country: any;
        tax_rate_county: any;
        tax_rate_postal_code: any;
        tax_rate_state: any;
        tax_state_accounting_code: any;
    };

}

export class OrdersResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        metadata: any;
        orders: any;
        success: any;
    };

}

export class ResponseMetadata {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        payload_name: any;
        result_set: any;
    };

}

export class ResultSet {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        count: any;
        limit: any;
        more: any;
        next_offset: any;
        offset: any;
        total_records: any;
    };

}

export class TempMultimedia {
    constructor();

    static MultimediaTypeEnum: {
        Image: string;
        PDF: string;
        Text: string;
        Video: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        filename: any;
        height: any;
        multimedia_type: any;
        size: any;
        temp_multimedia_oid: any;
        url: any;
        width: any;
    };

}

export class TempMultimediaResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        metadata: any;
        success: any;
        temp_multimedia: any;
    };

}

export class Webhook {
    constructor();

    static ApiVersionEnum: {
        "01": string;
    };

    static AuthenticationTypeEnum: {
        basic: string;
        none: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        api_user_oid: any;
        api_version: any;
        application_profile: any;
        authentication_type: any;
        basic_password: any;
        basic_username: any;
        consecutive_failures: any;
        disabled: any;
        event_categories: any;
        maximum_events: any;
        maximum_size: any;
        merchant_id: any;
        next_retry_after: any;
        pending: any;
        webhook_oid: any;
        webhook_url: any;
    };

}

export class WebhookEventCategory {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        event_category: any;
        events: any;
        subscribed: any;
    };

}

export class WebhookEventSubscription {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        comments: any;
        deprecated_flag: any;
        discontinued_flag: any;
        event_description: any;
        event_name: any;
        expansion: any;
        subscribed: any;
        webhook_event_oid: any;
    };

}

export class WebhookLog {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        delivery_dts: any;
        duration: any;
        request: any;
        request_headers: any;
        request_id: any;
        response: any;
        response_headers: any;
        status_code: any;
        success: any;
        uri: any;
    };

}

export class WebhookLogResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        metadata: any;
        success: any;
        webhook_log: any;
    };

}

export class WebhookLogSummariesResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        metadata: any;
        success: any;
        webhook_log_summaries: any;
    };

}

export class WebhookLogSummary {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        delivery_dts: any;
        request_id: any;
        success: any;
    };

}

export class WebhookResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        metadata: any;
        success: any;
        webhook: any;
    };

}

export class WebhookSampleRequest {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        request: any;
        request_headers: any;
        request_id: any;
        uri: any;
    };

}

export class WebhookSampleRequestResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        metadata: any;
        success: any;
        webhook_sample_request: any;
    };

}

export class WebhooksResponse {
    constructor();

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        error: any;
        metadata: any;
        success: any;
        webhooks: any;
    };

}

export class Weight {
    constructor();

    static UomEnum: {
        KG: string;
        LB: string;
        OZ: string;
    };

    static constructFromObject(data: any, obj: any): any;

    static prototype: {
        uom: any;
        value: any;
    };

}

export function AutoorderApi(apiClient: any): any;

export function ChargebackApi(apiClient: any): any;

export function CheckoutApi(apiClient: any): any;

export function CustomerApi(apiClient: any): any;

export function FulfillmentApi(apiClient: any): any;

export function ItemApi(apiClient: any): any;

export function OauthApi(apiClient: any): any;

export function OrderApi(apiClient: any): any;

export function WebhookApi(apiClient: any): any;

export namespace ApiClient {
    namespace constructFromObject {
        const prototype: {
        };

    }

    namespace convertToType {
        const prototype: {
        };

    }

    namespace instance {
        const authentications: {
            ultraCartBrowserApiKey: {
                in: string;
                name: string;
                type: string;
            };
            ultraCartOauth: {
                type: string;
            };
            ultraCartSimpleApiKey: {
                in: string;
                name: string;
                type: string;
            };
        };

        const basePath: string;

        const defaultHeaders: {
        };

        const timeout: number;

        function applyAuthToRequest(request: any, authNames: any): void;

        function buildCollectionParam(param: any, collectionFormat: any): any;

        function buildUrl(path: any, pathParams: any): any;

        function callApi(path: any, httpMethod: any, pathParams: any, queryParams: any, headerParams: any, formParams: any, bodyParam: any, authNames: any, contentTypes: any, accepts: any, returnType: any, callback: any): any;

        function deserialize(response: any, returnType: any): any;

        function isFileParam(param: any): any;

        function isJsonMime(contentType: any): any;

        function jsonPreferredMime(contentTypes: any): any;

        function normalizeParams(params: any): any;

        function paramToString(param: any): any;

        namespace applyAuthToRequest {
            const prototype: {
            };

        }

        namespace buildCollectionParam {
            const prototype: {
            };

        }

        namespace buildUrl {
            const prototype: {
            };

        }

        namespace callApi {
            const prototype: {
            };

        }

        namespace deserialize {
            const prototype: {
            };

        }

        namespace isFileParam {
            const prototype: {
            };

        }

        namespace isJsonMime {
            const prototype: {
            };

        }

        namespace jsonPreferredMime {
            const prototype: {
            };

        }

        namespace normalizeParams {
            const prototype: {
            };

        }

        namespace paramToString {
            const prototype: {
            };

        }

    }

    namespace parseDate {
        const prototype: {
        };

    }

    namespace prototype {
        function applyAuthToRequest(request: any, authNames: any): void;

        function buildCollectionParam(param: any, collectionFormat: any): any;

        function buildUrl(path: any, pathParams: any): any;

        function callApi(path: any, httpMethod: any, pathParams: any, queryParams: any, headerParams: any, formParams: any, bodyParam: any, authNames: any, contentTypes: any, accepts: any, returnType: any, callback: any): any;

        function deserialize(response: any, returnType: any): any;

        function isFileParam(param: any): any;

        function isJsonMime(contentType: any): any;

        function jsonPreferredMime(contentTypes: any): any;

        function normalizeParams(params: any): any;

        function paramToString(param: any): any;

        namespace applyAuthToRequest {
            const prototype: {
            };

        }

        namespace buildCollectionParam {
            const prototype: {
            };

        }

        namespace buildUrl {
            const prototype: {
            };

        }

        namespace callApi {
            const prototype: {
            };

        }

        namespace deserialize {
            const prototype: {
            };

        }

        namespace isFileParam {
            const prototype: {
            };

        }

        namespace isJsonMime {
            const prototype: {
            };

        }

        namespace jsonPreferredMime {
            const prototype: {
            };

        }

        namespace normalizeParams {
            const prototype: {
            };

        }

        namespace paramToString {
            const prototype: {
            };

        }

    }

}

export namespace ApiUserApplicationProfile {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace AutoOrder {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace AutoOrderItem {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace AutoOrderItemOption {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace AutoOrderResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace AutoOrdersResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace AutoorderApi {
    const prototype: {
    };

}

export namespace BaseResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace Cart {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartAffiliate {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartBilling {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartBuysafe {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartCheckout {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartCoupon {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartCustomerProfile {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartCustomerProfileAddress {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartCustomerProfileCreditCard {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartFinalizeOrderRequest {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartFinalizeOrderRequestOptions {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartFinalizeOrderResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartGift {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartGiftCertificate {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartItem {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartItemAttribute {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartItemMultimedia {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartItemMultimediaThumbnail {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartItemOption {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartItemOptionValue {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartItemPhysical {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartItemVariationSelection {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartKitComponentOption {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartMarketing {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartPayment {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartPaymentAmazon {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartPaymentCheck {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartPaymentCreditCard {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartPaymentPurchaseOrder {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartProfileLoginRequest {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartProfileLoginResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartProfileRegisterRequest {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartProfileRegisterResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettings {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsBilling {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsGift {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsGiftWrap {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsPayment {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsPaymentAmazon {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsPaymentCreditCard {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsPaymentPayPal {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsProvince {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsShipping {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsShippingCalendar {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsShippingEstimate {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsTaxes {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSettingsTerms {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartShipping {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartSummary {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartTaxes {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartUpsellAfter {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartValidationRequest {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CartValidationResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ChargebackApi {
    const prototype: {
    };

}

export namespace ChargebackDispute {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ChargebackDisputeResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ChargebackDisputesResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CheckoutApi {
    const prototype: {
    };

}

export namespace CheckoutHandoffRequest {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CheckoutHandoffResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CheckoutSetupBrowserKeyRequest {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CheckoutSetupBrowserKeyResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace Currency {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace Customer {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CustomerApi {
    const prototype: {
    };

}

export namespace CustomerBilling {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CustomerCard {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CustomerPricingTier {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CustomerResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CustomerShipping {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace CustomersResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace Distance {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace DistributionCenter {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace DistributionCentersResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace Error {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ErrorResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace FulfillmentApi {
    const prototype: {
    };

}

export namespace FulfillmentInventory {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace FulfillmentShipment {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace HTTPHeader {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace Item {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemAccounting {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemAmember {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemApi {
    const prototype: {
    };

}

export namespace ItemAutoOrder {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemAutoOrderStep {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemAutoOrderStepArbitraryUnitCostSchedule {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemAutoOrderStepGrandfatherPricing {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemCCBill {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemChannelPartnerMapping {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemChargeback {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemChargebackAddendum {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemChargebackAdjustmentRequest {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemCheckout {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemContent {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemContentAssignment {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemContentAttribute {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemContentMultimedia {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemContentMultimediaThumbnail {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemDigitalDelivery {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemDigitalItem {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemEbay {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemEbayCategorySpecific {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemEbayMarketListing {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemEbayMarketPlaceAnalysis {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemEmailNotifications {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemEnrollment123 {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemGiftCertificate {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemGoogleProductSearch {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemIdentifiers {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemInstantPaymentNotification {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemInstantPaymentNotifications {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemInternal {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemKitComponent {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemKitDefinition {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemOption {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemOptionValue {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemOptionValueAdditionalItem {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemOptionValueDigitalItem {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemPaymentProcessing {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemPhysical {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemPricing {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemPricingTier {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemPricingTierDiscount {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemPricingTierLimit {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemRealtimePricing {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemRelated {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemRelatedItem {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemReporting {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemRestriction {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemRestrictionItem {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemRevguard {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemReviews {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemSalesforce {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemShipping {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemShippingCase {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemShippingDestinationMarkup {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemShippingDestinationRestriction {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemShippingDistributionCenter {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemShippingMethod {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemShippingPackageRequirement {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemTax {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemTaxExemption {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemThirdPartyEmailMarketing {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemVariantItem {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemVariation {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemVariationOption {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemWishlistMember {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ItemsResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OauthApi {
    const prototype: {
    };

}

export namespace OauthRevokeSuccessResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OauthTokenResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace Order {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderAffiliate {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderAffiliateLedger {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderApi {
    const prototype: {
    };

}

export namespace OrderAutoOrder {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderBilling {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderBuysafe {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderChannelPartner {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderCheckout {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderCoupon {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderDigitalItem {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderDigitalOrder {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderEdi {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderFraudScore {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderGift {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderGiftCertificate {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderInternal {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderItem {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderItemEdi {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderItemEdiIdentification {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderItemEdiLot {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderItemOption {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderItemOptionFileAttachment {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderLinkedShipment {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderMarketing {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderPayment {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderPaymentCheck {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderPaymentCreditCard {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderPaymentECheck {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderPaymentPurchaseOrder {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderPaymentTransaction {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderPaymentTransactionDetail {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderQuote {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderSalesforce {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderShipping {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderSummary {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrderTaxes {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace OrdersResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ResponseMetadata {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace ResultSet {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace TempMultimedia {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace TempMultimediaResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace Webhook {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace WebhookApi {
    const prototype: {
    };

}

export namespace WebhookEventCategory {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace WebhookEventSubscription {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace WebhookLog {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace WebhookLogResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace WebhookLogSummariesResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace WebhookLogSummary {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace WebhookResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace WebhookSampleRequest {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace WebhookSampleRequestResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace WebhooksResponse {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

export namespace Weight {
    namespace constructFromObject {
        const prototype: {
        };

    }

}

