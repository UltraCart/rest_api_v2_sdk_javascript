/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.OrderQuery();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderQuery', function() {
    it('should create an instance of OrderQuery', function() {
      // uncomment below and update the code to test OrderQuery
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be.a(UltraCartRestApiV2.OrderQuery);
    });

    it('should have the property ccEmail (base name: "cc_email")', function() {
      // uncomment below and update the code to test the property ccEmail
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property channelPartnerCode (base name: "channel_partner_code")', function() {
      // uncomment below and update the code to test the property channelPartnerCode
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property channelPartnerOrderId (base name: "channel_partner_order_id")', function() {
      // uncomment below and update the code to test the property channelPartnerOrderId
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "country_code")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property creationDateBegin (base name: "creation_date_begin")', function() {
      // uncomment below and update the code to test the property creationDateBegin
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property creationDateEnd (base name: "creation_date_end")', function() {
      // uncomment below and update the code to test the property creationDateEnd
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property currentStage (base name: "current_stage")', function() {
      // uncomment below and update the code to test the property currentStage
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property customerProfileOid (base name: "customer_profile_oid")', function() {
      // uncomment below and update the code to test the property customerProfileOid
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property itemId (base name: "item_id")', function() {
      // uncomment below and update the code to test the property itemId
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "order_id")', function() {
      // uncomment below and update the code to test the property orderId
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property paymentDateBegin (base name: "payment_date_begin")', function() {
      // uncomment below and update the code to test the property paymentDateBegin
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property paymentDateEnd (base name: "payment_date_end")', function() {
      // uncomment below and update the code to test the property paymentDateEnd
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethod (base name: "payment_method")', function() {
      // uncomment below and update the code to test the property paymentMethod
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postal_code")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property purchaseOrderNumber (base name: "purchase_order_number")', function() {
      // uncomment below and update the code to test the property purchaseOrderNumber
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property rma (base name: "rma")', function() {
      // uncomment below and update the code to test the property rma
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property screenBrandingThemeCode (base name: "screen_branding_theme_code")', function() {
      // uncomment below and update the code to test the property screenBrandingThemeCode
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property shipmentDateBegin (base name: "shipment_date_begin")', function() {
      // uncomment below and update the code to test the property shipmentDateBegin
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property shipmentDateEnd (base name: "shipment_date_end")', function() {
      // uncomment below and update the code to test the property shipmentDateEnd
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property stateRegion (base name: "state_region")', function() {
      // uncomment below and update the code to test the property stateRegion
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property storefrontHostName (base name: "storefront_host_name")', function() {
      // uncomment below and update the code to test the property storefrontHostName
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

    it('should have the property total (base name: "total")', function() {
      // uncomment below and update the code to test the property total
      //var instane = new UltraCartRestApiV2.OrderQuery();
      //expect(instance).to.be();
    });

  });

}));
