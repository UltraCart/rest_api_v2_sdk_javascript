/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.OrderFraudScore();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderFraudScore', function() {
    it('should create an instance of OrderFraudScore', function() {
      // uncomment below and update the code to test OrderFraudScore
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be.a(UltraCartRestApiV2.OrderFraudScore);
    });

    it('should have the property anonymousProxy (base name: "anonymous_proxy")', function() {
      // uncomment below and update the code to test the property anonymousProxy
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property binMatch (base name: "bin_match")', function() {
      // uncomment below and update the code to test the property binMatch
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property carderEmail (base name: "carder_email")', function() {
      // uncomment below and update the code to test the property carderEmail
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "country_code")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property countryMatch (base name: "country_match")', function() {
      // uncomment below and update the code to test the property countryMatch
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property customerPhoneInBillingLocation (base name: "customer_phone_in_billing_location")', function() {
      // uncomment below and update the code to test the property customerPhoneInBillingLocation
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property distanceKm (base name: "distance_km")', function() {
      // uncomment below and update the code to test the property distanceKm
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property freeEmail (base name: "free_email")', function() {
      // uncomment below and update the code to test the property freeEmail
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property highRiskCountry (base name: "high_risk_country")', function() {
      // uncomment below and update the code to test the property highRiskCountry
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property ipCity (base name: "ip_city")', function() {
      // uncomment below and update the code to test the property ipCity
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property ipIsp (base name: "ip_isp")', function() {
      // uncomment below and update the code to test the property ipIsp
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property ipLatitude (base name: "ip_latitude")', function() {
      // uncomment below and update the code to test the property ipLatitude
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property ipLongitude (base name: "ip_longitude")', function() {
      // uncomment below and update the code to test the property ipLongitude
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property ipOrg (base name: "ip_org")', function() {
      // uncomment below and update the code to test the property ipOrg
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property ipRegion (base name: "ip_region")', function() {
      // uncomment below and update the code to test the property ipRegion
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property proxyScore (base name: "proxy_score")', function() {
      // uncomment below and update the code to test the property proxyScore
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property score (base name: "score")', function() {
      // uncomment below and update the code to test the property score
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property shipForwarder (base name: "ship_forwarder")', function() {
      // uncomment below and update the code to test the property shipForwarder
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property spamScore (base name: "spam_score")', function() {
      // uncomment below and update the code to test the property spamScore
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

    it('should have the property transparentProxy (base name: "transparent_proxy")', function() {
      // uncomment below and update the code to test the property transparentProxy
      //var instane = new UltraCartRestApiV2.OrderFraudScore();
      //expect(instance).to.be();
    });

  });

}));
