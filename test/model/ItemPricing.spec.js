/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.ItemPricing();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ItemPricing', function() {
    it('should create an instance of ItemPricing', function() {
      // uncomment below and update the code to test ItemPricing
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be.a(UltraCartRestApiV2.ItemPricing);
    });

    it('should have the property allowArbitraryCost (base name: "allow_arbitrary_cost")', function() {
      // uncomment below and update the code to test the property allowArbitraryCost
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property arbitraryCostVelocityCode (base name: "arbitrary_cost_velocity_code")', function() {
      // uncomment below and update the code to test the property arbitraryCostVelocityCode
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property automaticPricingTierName (base name: "automatic_pricing_tier_name")', function() {
      // uncomment below and update the code to test the property automaticPricingTierName
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property automaticPricingTierOid (base name: "automatic_pricing_tier_oid")', function() {
      // uncomment below and update the code to test the property automaticPricingTierOid
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property cogs (base name: "cogs")', function() {
      // uncomment below and update the code to test the property cogs
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currency_code")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property manufacturerSuggestedRetailPrice (base name: "manufacturer_suggested_retail_price")', function() {
      // uncomment below and update the code to test the property manufacturerSuggestedRetailPrice
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property maximumArbitraryCost (base name: "maximum_arbitrary_cost")', function() {
      // uncomment below and update the code to test the property maximumArbitraryCost
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property minimumAdvertisedPrice (base name: "minimum_advertised_price")', function() {
      // uncomment below and update the code to test the property minimumAdvertisedPrice
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property minimumArbitraryCost (base name: "minimum_arbitrary_cost")', function() {
      // uncomment below and update the code to test the property minimumArbitraryCost
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property mixAndMatchGroup (base name: "mix_and_match_group")', function() {
      // uncomment below and update the code to test the property mixAndMatchGroup
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property mixAndMatchGroupOid (base name: "mix_and_match_group_oid")', function() {
      // uncomment below and update the code to test the property mixAndMatchGroupOid
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property saleCost (base name: "sale_cost")', function() {
      // uncomment below and update the code to test the property saleCost
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property saleEnd (base name: "sale_end")', function() {
      // uncomment below and update the code to test the property saleEnd
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property saleStart (base name: "sale_start")', function() {
      // uncomment below and update the code to test the property saleStart
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

    it('should have the property tiers (base name: "tiers")', function() {
      // uncomment below and update the code to test the property tiers
      //var instane = new UltraCartRestApiV2.ItemPricing();
      //expect(instance).to.be();
    });

  });

}));
