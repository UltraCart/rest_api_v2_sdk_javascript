/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.OrderChannelPartner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderChannelPartner', function() {
    it('should create an instance of OrderChannelPartner', function() {
      // uncomment below and update the code to test OrderChannelPartner
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be.a(UltraCartRestApiV2.OrderChannelPartner);
    });

    it('should have the property autoApprovePurchaseOrder (base name: "auto_approve_purchase_order")', function() {
      // uncomment below and update the code to test the property autoApprovePurchaseOrder
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be();
    });

    it('should have the property channelPartnerCode (base name: "channel_partner_code")', function() {
      // uncomment below and update the code to test the property channelPartnerCode
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be();
    });

    it('should have the property channelPartnerData (base name: "channel_partner_data")', function() {
      // uncomment below and update the code to test the property channelPartnerData
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be();
    });

    it('should have the property channelPartnerOid (base name: "channel_partner_oid")', function() {
      // uncomment below and update the code to test the property channelPartnerOid
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be();
    });

    it('should have the property channelPartnerOrderId (base name: "channel_partner_order_id")', function() {
      // uncomment below and update the code to test the property channelPartnerOrderId
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be();
    });

    it('should have the property noRealtimePaymentProcessing (base name: "no_realtime_payment_processing")', function() {
      // uncomment below and update the code to test the property noRealtimePaymentProcessing
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be();
    });

    it('should have the property skipPaymentProcessing (base name: "skip_payment_processing")', function() {
      // uncomment below and update the code to test the property skipPaymentProcessing
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be();
    });

    it('should have the property storeCompleted (base name: "store_completed")', function() {
      // uncomment below and update the code to test the property storeCompleted
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be();
    });

    it('should have the property storeIfPaymentDeclines (base name: "store_if_payment_declines")', function() {
      // uncomment below and update the code to test the property storeIfPaymentDeclines
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be();
    });

    it('should have the property treatWarningsAsErrors (base name: "treat_warnings_as_errors")', function() {
      // uncomment below and update the code to test the property treatWarningsAsErrors
      //var instane = new UltraCartRestApiV2.OrderChannelPartner();
      //expect(instance).to.be();
    });

  });

}));
