/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.Order();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Order', function() {
    it('should create an instance of Order', function() {
      // uncomment below and update the code to test Order
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be.a(UltraCartRestApiV2.Order);
    });

    it('should have the property affiliates (base name: "affiliates")', function() {
      // uncomment below and update the code to test the property affiliates
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property autoOrder (base name: "auto_order")', function() {
      // uncomment below and update the code to test the property autoOrder
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property billing (base name: "billing")', function() {
      // uncomment below and update the code to test the property billing
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property buysafe (base name: "buysafe")', function() {
      // uncomment below and update the code to test the property buysafe
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property channelPartner (base name: "channel_partner")', function() {
      // uncomment below and update the code to test the property channelPartner
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property checkout (base name: "checkout")', function() {
      // uncomment below and update the code to test the property checkout
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property coupons (base name: "coupons")', function() {
      // uncomment below and update the code to test the property coupons
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property creationDts (base name: "creation_dts")', function() {
      // uncomment below and update the code to test the property creationDts
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currency_code")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property currentStage (base name: "current_stage")', function() {
      // uncomment below and update the code to test the property currentStage
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property customerProfile (base name: "customer_profile")', function() {
      // uncomment below and update the code to test the property customerProfile
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property digitalOrder (base name: "digital_order")', function() {
      // uncomment below and update the code to test the property digitalOrder
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property edi (base name: "edi")', function() {
      // uncomment below and update the code to test the property edi
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property exchangeRate (base name: "exchange_rate")', function() {
      // uncomment below and update the code to test the property exchangeRate
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property fraudScore (base name: "fraud_score")', function() {
      // uncomment below and update the code to test the property fraudScore
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property gift (base name: "gift")', function() {
      // uncomment below and update the code to test the property gift
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property giftCertificate (base name: "gift_certificate")', function() {
      // uncomment below and update the code to test the property giftCertificate
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property internal (base name: "internal")', function() {
      // uncomment below and update the code to test the property internal
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property languageIsoCode (base name: "language_iso_code")', function() {
      // uncomment below and update the code to test the property languageIsoCode
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property linkedShipment (base name: "linked_shipment")', function() {
      // uncomment below and update the code to test the property linkedShipment
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property marketing (base name: "marketing")', function() {
      // uncomment below and update the code to test the property marketing
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property merchantId (base name: "merchant_id")', function() {
      // uncomment below and update the code to test the property merchantId
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "order_id")', function() {
      // uncomment below and update the code to test the property orderId
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property payment (base name: "payment")', function() {
      // uncomment below and update the code to test the property payment
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property quote (base name: "quote")', function() {
      // uncomment below and update the code to test the property quote
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property refundDts (base name: "refund_dts")', function() {
      // uncomment below and update the code to test the property refundDts
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property rejectDts (base name: "reject_dts")', function() {
      // uncomment below and update the code to test the property rejectDts
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property salesforce (base name: "salesforce")', function() {
      // uncomment below and update the code to test the property salesforce
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property shipping (base name: "shipping")', function() {
      // uncomment below and update the code to test the property shipping
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

    it('should have the property taxes (base name: "taxes")', function() {
      // uncomment below and update the code to test the property taxes
      //var instane = new UltraCartRestApiV2.Order();
      //expect(instance).to.be();
    });

  });

}));
