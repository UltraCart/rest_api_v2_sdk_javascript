/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountsReceivableRetryStatMetrics', function() {
    it('should create an instance of AccountsReceivableRetryStatMetrics', function() {
      // uncomment below and update the code to test AccountsReceivableRetryStatMetrics
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be.a(UltraCartRestApiV2.AccountsReceivableRetryStatMetrics);
    });

    it('should have the property attempts (base name: "attempts")', function() {
      // uncomment below and update the code to test the property attempts
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property attemptsFormatted (base name: "attempts_formatted")', function() {
      // uncomment below and update the code to test the property attemptsFormatted
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property conversionRate (base name: "conversion_rate")', function() {
      // uncomment below and update the code to test the property conversionRate
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property conversionRateFormatted (base name: "conversion_rate_formatted")', function() {
      // uncomment below and update the code to test the property conversionRateFormatted
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property day (base name: "day")', function() {
      // uncomment below and update the code to test the property day
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property discounts (base name: "discounts")', function() {
      // uncomment below and update the code to test the property discounts
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property discountsFormatted (base name: "discounts_formatted")', function() {
      // uncomment below and update the code to test the property discountsFormatted
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property revenue (base name: "revenue")', function() {
      // uncomment below and update the code to test the property revenue
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property revenueFormatted (base name: "revenue_formatted")', function() {
      // uncomment below and update the code to test the property revenueFormatted
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property successes (base name: "successes")', function() {
      // uncomment below and update the code to test the property successes
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property successesFormatted (base name: "successes_formatted")', function() {
      // uncomment below and update the code to test the property successesFormatted
      //var instane = new UltraCartRestApiV2.AccountsReceivableRetryStatMetrics();
      //expect(instance).to.be();
    });

  });

}));
