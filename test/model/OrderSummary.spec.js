/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.OrderSummary();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderSummary', function() {
    it('should create an instance of OrderSummary', function() {
      // uncomment below and update the code to test OrderSummary
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be.a(UltraCartRestApiV2.OrderSummary);
    });

    it('should have the property arbitraryShippingHandlingTotal (base name: "arbitrary_shipping_handling_total")', function() {
      // uncomment below and update the code to test the property arbitraryShippingHandlingTotal
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property otherRefunded (base name: "other_refunded")', function() {
      // uncomment below and update the code to test the property otherRefunded
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property shippingHandlingRefunded (base name: "shipping_handling_refunded")', function() {
      // uncomment below and update the code to test the property shippingHandlingRefunded
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property shippingHandlingTotal (base name: "shipping_handling_total")', function() {
      // uncomment below and update the code to test the property shippingHandlingTotal
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property shippingHandlingTotalDiscount (base name: "shipping_handling_total_discount")', function() {
      // uncomment below and update the code to test the property shippingHandlingTotalDiscount
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property subtotal (base name: "subtotal")', function() {
      // uncomment below and update the code to test the property subtotal
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property subtotalDiscount (base name: "subtotal_discount")', function() {
      // uncomment below and update the code to test the property subtotalDiscount
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property subtotalDiscountRefunded (base name: "subtotal_discount_refunded")', function() {
      // uncomment below and update the code to test the property subtotalDiscountRefunded
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property subtotalRefunded (base name: "subtotal_refunded")', function() {
      // uncomment below and update the code to test the property subtotalRefunded
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property tax (base name: "tax")', function() {
      // uncomment below and update the code to test the property tax
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property taxRefunded (base name: "tax_refunded")', function() {
      // uncomment below and update the code to test the property taxRefunded
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property taxableSubtotal (base name: "taxable_subtotal")', function() {
      // uncomment below and update the code to test the property taxableSubtotal
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property taxableSubtotalDiscount (base name: "taxable_subtotal_discount")', function() {
      // uncomment below and update the code to test the property taxableSubtotalDiscount
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property total (base name: "total")', function() {
      // uncomment below and update the code to test the property total
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

    it('should have the property totalRefunded (base name: "total_refunded")', function() {
      // uncomment below and update the code to test the property totalRefunded
      //var instane = new UltraCartRestApiV2.OrderSummary();
      //expect(instance).to.be();
    });

  });

}));
