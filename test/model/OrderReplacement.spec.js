/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.OrderReplacement();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderReplacement', function() {
    it('should create an instance of OrderReplacement', function() {
      // uncomment below and update the code to test OrderReplacement
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be.a(UltraCartRestApiV2.OrderReplacement);
    });

    it('should have the property additionalMerchantNotesNewOrder (base name: "additional_merchant_notes_new_order")', function() {
      // uncomment below and update the code to test the property additionalMerchantNotesNewOrder
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property additionalMerchantNotesOriginalOrder (base name: "additional_merchant_notes_original_order")', function() {
      // uncomment below and update the code to test the property additionalMerchantNotesOriginalOrder
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property customField1 (base name: "custom_field1")', function() {
      // uncomment below and update the code to test the property customField1
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property customField2 (base name: "custom_field2")', function() {
      // uncomment below and update the code to test the property customField2
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property customField3 (base name: "custom_field3")', function() {
      // uncomment below and update the code to test the property customField3
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property customField4 (base name: "custom_field4")', function() {
      // uncomment below and update the code to test the property customField4
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property customField5 (base name: "custom_field5")', function() {
      // uncomment below and update the code to test the property customField5
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property customField6 (base name: "custom_field6")', function() {
      // uncomment below and update the code to test the property customField6
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property customField7 (base name: "custom_field7")', function() {
      // uncomment below and update the code to test the property customField7
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property free (base name: "free")', function() {
      // uncomment below and update the code to test the property free
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property immediateCharge (base name: "immediate_charge")', function() {
      // uncomment below and update the code to test the property immediateCharge
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property originalOrderId (base name: "original_order_id")', function() {
      // uncomment below and update the code to test the property originalOrderId
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property shippingMethod (base name: "shipping_method")', function() {
      // uncomment below and update the code to test the property shippingMethod
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

    it('should have the property skipPayment (base name: "skip_payment")', function() {
      // uncomment below and update the code to test the property skipPayment
      //var instane = new UltraCartRestApiV2.OrderReplacement();
      //expect(instance).to.be();
    });

  });

}));
