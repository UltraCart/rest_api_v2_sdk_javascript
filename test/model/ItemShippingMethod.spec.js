/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.ItemShippingMethod();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ItemShippingMethod', function() {
    it('should create an instance of ItemShippingMethod', function() {
      // uncomment below and update the code to test ItemShippingMethod
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be.a(UltraCartRestApiV2.ItemShippingMethod);
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property eachAdditionalItemMarkup (base name: "each_additional_item_markup")', function() {
      // uncomment below and update the code to test the property eachAdditionalItemMarkup
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property filterToIfAvailable (base name: "filter_to_if_available")', function() {
      // uncomment below and update the code to test the property filterToIfAvailable
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property firstItemMarkup (base name: "first_item_markup")', function() {
      // uncomment below and update the code to test the property firstItemMarkup
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property fixedShippingCost (base name: "fixed_shipping_cost")', function() {
      // uncomment below and update the code to test the property fixedShippingCost
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property flatFeeMarkup (base name: "flat_fee_markup")', function() {
      // uncomment below and update the code to test the property flatFeeMarkup
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property freeShipping (base name: "free_shipping")', function() {
      // uncomment below and update the code to test the property freeShipping
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property perItemFeeMarkup (base name: "per_item_fee_markup")', function() {
      // uncomment below and update the code to test the property perItemFeeMarkup
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property percentageMarkup (base name: "percentage_markup")', function() {
      // uncomment below and update the code to test the property percentageMarkup
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property percentageOfItemMarkup (base name: "percentage_of_item_markup")', function() {
      // uncomment below and update the code to test the property percentageOfItemMarkup
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property relaxRestrictionsOnUpsell (base name: "relax_restrictions_on_upsell")', function() {
      // uncomment below and update the code to test the property relaxRestrictionsOnUpsell
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property shippingMethod (base name: "shipping_method")', function() {
      // uncomment below and update the code to test the property shippingMethod
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property shippingMethodOid (base name: "shipping_method_oid")', function() {
      // uncomment below and update the code to test the property shippingMethodOid
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property shippingMethodValidity (base name: "shipping_method_validity")', function() {
      // uncomment below and update the code to test the property shippingMethodValidity
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

    it('should have the property signatureRequired (base name: "signature_required")', function() {
      // uncomment below and update the code to test the property signatureRequired
      //var instane = new UltraCartRestApiV2.ItemShippingMethod();
      //expect(instance).to.be();
    });

  });

}));
