/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.EmailPerformance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EmailPerformance', function() {
    it('should create an instance of EmailPerformance', function() {
      // uncomment below and update the code to test EmailPerformance
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be.a(UltraCartRestApiV2.EmailPerformance);
    });

    it('should have the property activeCustomers (base name: "active_customers")', function() {
      // uncomment below and update the code to test the property activeCustomers
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property actualCustomers (base name: "actual_customers")', function() {
      // uncomment below and update the code to test the property actualCustomers
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property bounceCount (base name: "bounce_count")', function() {
      // uncomment below and update the code to test the property bounceCount
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property bouncePercentage (base name: "bounce_percentage")', function() {
      // uncomment below and update the code to test the property bouncePercentage
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property bouncePercentageFormatted (base name: "bounce_percentage_formatted")', function() {
      // uncomment below and update the code to test the property bouncePercentageFormatted
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property dailyStats (base name: "daily_stats")', function() {
      // uncomment below and update the code to test the property dailyStats
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property deliveredCount (base name: "delivered_count")', function() {
      // uncomment below and update the code to test the property deliveredCount
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property maxActiveCustomers (base name: "max_active_customers")', function() {
      // uncomment below and update the code to test the property maxActiveCustomers
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property maxEmailsPerDay (base name: "max_emails_per_day")', function() {
      // uncomment below and update the code to test the property maxEmailsPerDay
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property maxEmailsPerHour (base name: "max_emails_per_hour")', function() {
      // uncomment below and update the code to test the property maxEmailsPerHour
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property maxEmailsPerMonth (base name: "max_emails_per_month")', function() {
      // uncomment below and update the code to test the property maxEmailsPerMonth
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property pausedForSpam (base name: "paused_for_spam")', function() {
      // uncomment below and update the code to test the property pausedForSpam
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property revenue (base name: "revenue")', function() {
      // uncomment below and update the code to test the property revenue
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property sentEmailsPerDay (base name: "sent_emails_per_day")', function() {
      // uncomment below and update the code to test the property sentEmailsPerDay
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property sentEmailsPerHour (base name: "sent_emails_per_hour")', function() {
      // uncomment below and update the code to test the property sentEmailsPerHour
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property sentEmailsPerMonth (base name: "sent_emails_per_month")', function() {
      // uncomment below and update the code to test the property sentEmailsPerMonth
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property sequenceSendCount (base name: "sequence_send_count")', function() {
      // uncomment below and update the code to test the property sequenceSendCount
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property spamCount (base name: "spam_count")', function() {
      // uncomment below and update the code to test the property spamCount
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property spamPercentage (base name: "spam_percentage")', function() {
      // uncomment below and update the code to test the property spamPercentage
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property spamPercentageFormatted (base name: "spam_percentage_formatted")', function() {
      // uncomment below and update the code to test the property spamPercentageFormatted
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

    it('should have the property transactionalSendCount (base name: "transactional_send_count")', function() {
      // uncomment below and update the code to test the property transactionalSendCount
      //var instane = new UltraCartRestApiV2.EmailPerformance();
      //expect(instance).to.be();
    });

  });

}));
