/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.AutoOrder();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AutoOrder', function() {
    it('should create an instance of AutoOrder', function() {
      // uncomment below and update the code to test AutoOrder
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be.a(UltraCartRestApiV2.AutoOrder);
    });

    it('should have the property autoOrderCode (base name: "auto_order_code")', function() {
      // uncomment below and update the code to test the property autoOrderCode
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property autoOrderOid (base name: "auto_order_oid")', function() {
      // uncomment below and update the code to test the property autoOrderOid
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property cancelAfterNextXOrders (base name: "cancel_after_next_x_orders")', function() {
      // uncomment below and update the code to test the property cancelAfterNextXOrders
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property cancelDowngrade (base name: "cancel_downgrade")', function() {
      // uncomment below and update the code to test the property cancelDowngrade
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property cancelUpgrade (base name: "cancel_upgrade")', function() {
      // uncomment below and update the code to test the property cancelUpgrade
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property canceledByUser (base name: "canceled_by_user")', function() {
      // uncomment below and update the code to test the property canceledByUser
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property canceledDts (base name: "canceled_dts")', function() {
      // uncomment below and update the code to test the property canceledDts
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property creditCardAttempt (base name: "credit_card_attempt")', function() {
      // uncomment below and update the code to test the property creditCardAttempt
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property disabledDts (base name: "disabled_dts")', function() {
      // uncomment below and update the code to test the property disabledDts
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property failureReason (base name: "failure_reason")', function() {
      // uncomment below and update the code to test the property failureReason
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property nextAttempt (base name: "next_attempt")', function() {
      // uncomment below and update the code to test the property nextAttempt
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property originalOrder (base name: "original_order")', function() {
      // uncomment below and update the code to test the property originalOrder
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property originalOrderId (base name: "original_order_id")', function() {
      // uncomment below and update the code to test the property originalOrderId
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property overrideAffiliateId (base name: "override_affiliate_id")', function() {
      // uncomment below and update the code to test the property overrideAffiliateId
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property rebillOrders (base name: "rebill_orders")', function() {
      // uncomment below and update the code to test the property rebillOrders
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

    it('should have the property rotatingTransactionGatewayCode (base name: "rotating_transaction_gateway_code")', function() {
      // uncomment below and update the code to test the property rotatingTransactionGatewayCode
      //var instane = new UltraCartRestApiV2.AutoOrder();
      //expect(instance).to.be();
    });

  });

}));
