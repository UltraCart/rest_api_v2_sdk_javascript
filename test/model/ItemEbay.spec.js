/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.ItemEbay();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ItemEbay', function() {
    it('should create an instance of ItemEbay', function() {
      // uncomment below and update the code to test ItemEbay
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be.a(UltraCartRestApiV2.ItemEbay);
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property categoryId (base name: "category_id")', function() {
      // uncomment below and update the code to test the property categoryId
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property categorySpecifics (base name: "category_specifics")', function() {
      // uncomment below and update the code to test the property categorySpecifics
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property conditionDescription (base name: "condition_description")', function() {
      // uncomment below and update the code to test the property conditionDescription
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property conditionId (base name: "condition_id")', function() {
      // uncomment below and update the code to test the property conditionId
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property consecutiveFailures (base name: "consecutive_failures")', function() {
      // uncomment below and update the code to test the property consecutiveFailures
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property customCategory1 (base name: "custom_category1")', function() {
      // uncomment below and update the code to test the property customCategory1
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property customCategory2 (base name: "custom_category2")', function() {
      // uncomment below and update the code to test the property customCategory2
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property dispatchTimeMax (base name: "dispatch_time_max")', function() {
      // uncomment below and update the code to test the property dispatchTimeMax
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property domestic1AdditionalCost (base name: "domestic_1_additional_cost")', function() {
      // uncomment below and update the code to test the property domestic1AdditionalCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property domestic1FirstCost (base name: "domestic_1_first_cost")', function() {
      // uncomment below and update the code to test the property domestic1FirstCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property domestic2AdditionalCost (base name: "domestic_2_additional_cost")', function() {
      // uncomment below and update the code to test the property domestic2AdditionalCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property domestic2FirstCost (base name: "domestic_2_first_cost")', function() {
      // uncomment below and update the code to test the property domestic2FirstCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property domestic3AdditionalCost (base name: "domestic_3_additional_cost")', function() {
      // uncomment below and update the code to test the property domestic3AdditionalCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property domestic3FirstCost (base name: "domestic_3_first_cost")', function() {
      // uncomment below and update the code to test the property domestic3FirstCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property domestic4AdditionalCost (base name: "domestic_4_additional_cost")', function() {
      // uncomment below and update the code to test the property domestic4AdditionalCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property domestic4FirstCost (base name: "domestic_4_first_cost")', function() {
      // uncomment below and update the code to test the property domestic4FirstCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property ebayAuctionId (base name: "ebay_auction_id")', function() {
      // uncomment below and update the code to test the property ebayAuctionId
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property ebaySpecificInventory (base name: "ebay_specific_inventory")', function() {
      // uncomment below and update the code to test the property ebaySpecificInventory
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property ebayTemplateName (base name: "ebay_template_name")', function() {
      // uncomment below and update the code to test the property ebayTemplateName
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property ebayTemplateOid (base name: "ebay_template_oid")', function() {
      // uncomment below and update the code to test the property ebayTemplateOid
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "end_time")', function() {
      // uncomment below and update the code to test the property endTime
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property freeShipping (base name: "free_shipping")', function() {
      // uncomment below and update the code to test the property freeShipping
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property freeShippingMethod (base name: "free_shipping_method")', function() {
      // uncomment below and update the code to test the property freeShippingMethod
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property international1AdditionalCost (base name: "international_1_additional_cost")', function() {
      // uncomment below and update the code to test the property international1AdditionalCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property international1FirstCost (base name: "international_1_first_cost")', function() {
      // uncomment below and update the code to test the property international1FirstCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property international2AdditionalCost (base name: "international_2_additional_cost")', function() {
      // uncomment below and update the code to test the property international2AdditionalCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property international2FirstCost (base name: "international_2_first_cost")', function() {
      // uncomment below and update the code to test the property international2FirstCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property international3AdditionalCost (base name: "international_3_additional_cost")', function() {
      // uncomment below and update the code to test the property international3AdditionalCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property international3FirstCost (base name: "international_3_first_cost")', function() {
      // uncomment below and update the code to test the property international3FirstCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property international4AdditionalCost (base name: "international_4_additional_cost")', function() {
      // uncomment below and update the code to test the property international4AdditionalCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property international4FirstCost (base name: "international_4_first_cost")', function() {
      // uncomment below and update the code to test the property international4FirstCost
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property lastStatusDts (base name: "last_status_dts")', function() {
      // uncomment below and update the code to test the property lastStatusDts
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property listedDispatchTimeMax (base name: "listed_dispatch_time_max")', function() {
      // uncomment below and update the code to test the property listedDispatchTimeMax
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property listedEbayTemplateOid (base name: "listed_ebay_template_oid")', function() {
      // uncomment below and update the code to test the property listedEbayTemplateOid
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property listingDts (base name: "listing_dts")', function() {
      // uncomment below and update the code to test the property listingDts
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property listingDuration (base name: "listing_duration")', function() {
      // uncomment below and update the code to test the property listingDuration
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property listingPrice (base name: "listing_price")', function() {
      // uncomment below and update the code to test the property listingPrice
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property listingPriceOverride (base name: "listing_price_override")', function() {
      // uncomment below and update the code to test the property listingPriceOverride
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property listingType (base name: "listing_type")', function() {
      // uncomment below and update the code to test the property listingType
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceAnalysis (base name: "marketplace_analysis")', function() {
      // uncomment below and update the code to test the property marketplaceAnalysis
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceAnalysisPerform (base name: "marketplace_analysis_perform")', function() {
      // uncomment below and update the code to test the property marketplaceAnalysisPerform
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceFinalValueFeePercentage (base name: "marketplace_final_value_fee_percentage")', function() {
      // uncomment below and update the code to test the property marketplaceFinalValueFeePercentage
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceLastCheckDts (base name: "marketplace_last_check_dts")', function() {
      // uncomment below and update the code to test the property marketplaceLastCheckDts
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceLowest (base name: "marketplace_lowest")', function() {
      // uncomment below and update the code to test the property marketplaceLowest
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceMapViolation (base name: "marketplace_map_violation")', function() {
      // uncomment below and update the code to test the property marketplaceMapViolation
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceMultiplier (base name: "marketplace_multiplier")', function() {
      // uncomment below and update the code to test the property marketplaceMultiplier
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOtherPrice (base name: "marketplace_other_price")', function() {
      // uncomment below and update the code to test the property marketplaceOtherPrice
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOtherSeller (base name: "marketplace_other_seller")', function() {
      // uncomment below and update the code to test the property marketplaceOtherSeller
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOtherShipping (base name: "marketplace_other_shipping")', function() {
      // uncomment below and update the code to test the property marketplaceOtherShipping
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOtherTotal (base name: "marketplace_other_total")', function() {
      // uncomment below and update the code to test the property marketplaceOtherTotal
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOurAdditionalProfitPotential (base name: "marketplace_our_additional_profit_potential")', function() {
      // uncomment below and update the code to test the property marketplaceOurAdditionalProfitPotential
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOurPrice (base name: "marketplace_our_price")', function() {
      // uncomment below and update the code to test the property marketplaceOurPrice
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOurProfit (base name: "marketplace_our_profit")', function() {
      // uncomment below and update the code to test the property marketplaceOurProfit
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOurShipping (base name: "marketplace_our_shipping")', function() {
      // uncomment below and update the code to test the property marketplaceOurShipping
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOurTotal (base name: "marketplace_our_total")', function() {
      // uncomment below and update the code to test the property marketplaceOurTotal
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOverhead (base name: "marketplace_overhead")', function() {
      // uncomment below and update the code to test the property marketplaceOverhead
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceProfitable (base name: "marketplace_profitable")', function() {
      // uncomment below and update the code to test the property marketplaceProfitable
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property nextAttemptDts (base name: "next_attempt_dts")', function() {
      // uncomment below and update the code to test the property nextAttemptDts
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property nextListingDuration (base name: "next_listing_duration")', function() {
      // uncomment below and update the code to test the property nextListingDuration
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property noPromotionalShipping (base name: "no_promotional_shipping")', function() {
      // uncomment below and update the code to test the property noPromotionalShipping
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property packagingHandlingCosts (base name: "packaging_handling_costs")', function() {
      // uncomment below and update the code to test the property packagingHandlingCosts
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property previousEbayAuctionId (base name: "previous_ebay_auction_id")', function() {
      // uncomment below and update the code to test the property previousEbayAuctionId
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property reservePrice (base name: "reserve_price")', function() {
      // uncomment below and update the code to test the property reservePrice
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property sendDimensionsAndWeight (base name: "send_dimensions_and_weight")', function() {
      // uncomment below and update the code to test the property sendDimensionsAndWeight
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "start_time")', function() {
      // uncomment below and update the code to test the property startTime
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

    it('should have the property targetDispatchTimeMax (base name: "target_dispatch_time_max")', function() {
      // uncomment below and update the code to test the property targetDispatchTimeMax
      //var instane = new UltraCartRestApiV2.ItemEbay();
      //expect(instance).to.be();
    });

  });

}));
