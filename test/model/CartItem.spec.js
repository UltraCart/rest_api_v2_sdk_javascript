/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.CartItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CartItem', function() {
    it('should create an instance of CartItem', function() {
      // uncomment below and update the code to test CartItem
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be.a(UltraCartRestApiV2.CartItem);
    });

    it('should have the property arbitraryUnitCost (base name: "arbitrary_unit_cost")', function() {
      // uncomment below and update the code to test the property arbitraryUnitCost
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property autoOrderSchedule (base name: "auto_order_schedule")', function() {
      // uncomment below and update the code to test the property autoOrderSchedule
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property defaultImageUrl (base name: "default_image_url")', function() {
      // uncomment below and update the code to test the property defaultImageUrl
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property defaultThumbnailUrl (base name: "default_thumbnail_url")', function() {
      // uncomment below and update the code to test the property defaultThumbnailUrl
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property discount (base name: "discount")', function() {
      // uncomment below and update the code to test the property discount
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property extendedDescription (base name: "extended_description")', function() {
      // uncomment below and update the code to test the property extendedDescription
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property itemId (base name: "item_id")', function() {
      // uncomment below and update the code to test the property itemId
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property itemOid (base name: "item_oid")', function() {
      // uncomment below and update the code to test the property itemOid
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property kit (base name: "kit")', function() {
      // uncomment below and update the code to test the property kit
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property kitComponentOptions (base name: "kit_component_options")', function() {
      // uncomment below and update the code to test the property kitComponentOptions
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property manufacturerSuggestedRetailPrice (base name: "manufacturer_suggested_retail_price")', function() {
      // uncomment below and update the code to test the property manufacturerSuggestedRetailPrice
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property maximumQuantity (base name: "maximum_quantity")', function() {
      // uncomment below and update the code to test the property maximumQuantity
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property minimumQuantity (base name: "minimum_quantity")', function() {
      // uncomment below and update the code to test the property minimumQuantity
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property multimedia (base name: "multimedia")', function() {
      // uncomment below and update the code to test the property multimedia
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property options (base name: "options")', function() {
      // uncomment below and update the code to test the property options
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property phsyical (base name: "phsyical")', function() {
      // uncomment below and update the code to test the property phsyical
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property position (base name: "position")', function() {
      // uncomment below and update the code to test the property position
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property preorder (base name: "preorder")', function() {
      // uncomment below and update the code to test the property preorder
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property schedules (base name: "schedules")', function() {
      // uncomment below and update the code to test the property schedules
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property totalCost (base name: "total_cost")', function() {
      // uncomment below and update the code to test the property totalCost
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property totalCostWithDiscount (base name: "total_cost_with_discount")', function() {
      // uncomment below and update the code to test the property totalCostWithDiscount
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property unitCost (base name: "unit_cost")', function() {
      // uncomment below and update the code to test the property unitCost
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property unitCostWithDiscount (base name: "unit_cost_with_discount")', function() {
      // uncomment below and update the code to test the property unitCostWithDiscount
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property upsell (base name: "upsell")', function() {
      // uncomment below and update the code to test the property upsell
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property variations (base name: "variations")', function() {
      // uncomment below and update the code to test the property variations
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

    it('should have the property viewUrl (base name: "view_url")', function() {
      // uncomment below and update the code to test the property viewUrl
      //var instane = new UltraCartRestApiV2.CartItem();
      //expect(instance).to.be();
    });

  });

}));
