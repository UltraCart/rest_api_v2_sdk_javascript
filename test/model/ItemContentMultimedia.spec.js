/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.ItemContentMultimedia();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ItemContentMultimedia', function() {
    it('should create an instance of ItemContentMultimedia', function() {
      // uncomment below and update the code to test ItemContentMultimedia
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be.a(UltraCartRestApiV2.ItemContentMultimedia);
    });

    it('should have the property cloudUrl (base name: "cloud_url")', function() {
      // uncomment below and update the code to test the property cloudUrl
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property cloudUrlExpiration (base name: "cloud_url_expiration")', function() {
      // uncomment below and update the code to test the property cloudUrlExpiration
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property excludeFromGallery (base name: "exclude_from_gallery")', function() {
      // uncomment below and update the code to test the property excludeFromGallery
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property fileName (base name: "file_name")', function() {
      // uncomment below and update the code to test the property fileName
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property merchantItemMultimediaOid (base name: "merchant_item_multimedia_oid")', function() {
      // uncomment below and update the code to test the property merchantItemMultimediaOid
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property orphan (base name: "orphan")', function() {
      // uncomment below and update the code to test the property orphan
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property placeholder (base name: "placeholder")', function() {
      // uncomment below and update the code to test the property placeholder
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property tempMultimediaOid (base name: "temp_multimedia_oid")', function() {
      // uncomment below and update the code to test the property tempMultimediaOid
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property thumbnails (base name: "thumbnails")', function() {
      // uncomment below and update the code to test the property thumbnails
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instane = new UltraCartRestApiV2.ItemContentMultimedia();
      //expect(instance).to.be();
    });

  });

}));
