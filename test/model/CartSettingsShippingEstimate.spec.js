/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.CartSettingsShippingEstimate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CartSettingsShippingEstimate', function() {
    it('should create an instance of CartSettingsShippingEstimate', function() {
      // uncomment below and update the code to test CartSettingsShippingEstimate
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be.a(UltraCartRestApiV2.CartSettingsShippingEstimate);
    });

    it('should have the property allow3rdPartyBilling (base name: "allow_3rd_party_billing")', function() {
      // uncomment below and update the code to test the property allow3rdPartyBilling
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property costBeforeDiscount (base name: "cost_before_discount")', function() {
      // uncomment below and update the code to test the property costBeforeDiscount
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property defaultMethod (base name: "default_method")', function() {
      // uncomment below and update the code to test the property defaultMethod
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property discount (base name: "discount")', function() {
      // uncomment below and update the code to test the property discount
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property discounted (base name: "discounted")', function() {
      // uncomment below and update the code to test the property discounted
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "display_name")', function() {
      // uncomment below and update the code to test the property displayName
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property estimatedDelivery (base name: "estimated_delivery")', function() {
      // uncomment below and update the code to test the property estimatedDelivery
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property liftGateOption (base name: "lift_gate_option")', function() {
      // uncomment below and update the code to test the property liftGateOption
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property tax (base name: "tax")', function() {
      // uncomment below and update the code to test the property tax
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

    it('should have the property totalTax (base name: "total_tax")', function() {
      // uncomment below and update the code to test the property totalTax
      //var instane = new UltraCartRestApiV2.CartSettingsShippingEstimate();
      //expect(instance).to.be();
    });

  });

}));
