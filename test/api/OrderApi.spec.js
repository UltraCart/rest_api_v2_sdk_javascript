/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UltraCartRestApiV2);
  }
}(this, function(expect, UltraCartRestApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UltraCartRestApiV2.OrderApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderApi', function() {
    describe('cancelOrder', function() {
      it('should call cancelOrder successfully', function(done) {
        //uncomment below and update the code to test cancelOrder
        //instance.cancelOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrder', function() {
      it('should call deleteOrder successfully', function(done) {
        //uncomment below and update the code to test deleteOrder
        //instance.deleteOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('format', function() {
      it('should call format successfully', function(done) {
        //uncomment below and update the code to test format
        //instance.format(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountsReceivableRetryConfig', function() {
      it('should call getAccountsReceivableRetryConfig successfully', function(done) {
        //uncomment below and update the code to test getAccountsReceivableRetryConfig
        //instance.getAccountsReceivableRetryConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountsReceivableRetryStats', function() {
      it('should call getAccountsReceivableRetryStats successfully', function(done) {
        //uncomment below and update the code to test getAccountsReceivableRetryStats
        //instance.getAccountsReceivableRetryStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrder', function() {
      it('should call getOrder successfully', function(done) {
        //uncomment below and update the code to test getOrder
        //instance.getOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrders', function() {
      it('should call getOrders successfully', function(done) {
        //uncomment below and update the code to test getOrders
        //instance.getOrders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrdersByQuery', function() {
      it('should call getOrdersByQuery successfully', function(done) {
        //uncomment below and update the code to test getOrdersByQuery
        //instance.getOrdersByQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('insertOrder', function() {
      it('should call insertOrder successfully', function(done) {
        //uncomment below and update the code to test insertOrder
        //instance.insertOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('refundOrder', function() {
      it('should call refundOrder successfully', function(done) {
        //uncomment below and update the code to test refundOrder
        //instance.refundOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resendReceipt', function() {
      it('should call resendReceipt successfully', function(done) {
        //uncomment below and update the code to test resendReceipt
        //instance.resendReceipt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resendShipmentConfirmation', function() {
      it('should call resendShipmentConfirmation successfully', function(done) {
        //uncomment below and update the code to test resendShipmentConfirmation
        //instance.resendShipmentConfirmation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccountsReceivableRetryConfig', function() {
      it('should call updateAccountsReceivableRetryConfig successfully', function(done) {
        //uncomment below and update the code to test updateAccountsReceivableRetryConfig
        //instance.updateAccountsReceivableRetryConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrder', function() {
      it('should call updateOrder successfully', function(done) {
        //uncomment below and update the code to test updateOrder
        //instance.updateOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
